{
    "name": "port",
    "displayName": "Port",
    "description": "A Pulumi package for creating and managing Port resources.",
    "keywords": [
        "pulumi",
        "port",
        "category/utility"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`port` Terraform Provider](https://github.com/port-labs/terraform-provider-port).",
    "repository": "https://github.com/port-labs/pulumi-port",
    "pluginDownloadURL": "github://api.github.com/port-labs/pulumi-port",
    "publisher": "port-labs",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "port_labs"
        },
        "go": {
            "importBasePath": "github.com/port-labs/pulumi-port/sdk/go/port",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@port-labs/port",
            "packageDescription": "A Pulumi package for creating and managing Port resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/port-labs/terraform-provider-port)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-port` repo](https://github.com/port-labs/pulumi-port/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-port` repo](https://github.com/port-labs/terraform-provider-port/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "port_pulumi",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/port-labs/terraform-provider-port)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-port` repo](https://github.com/port-labs/pulumi-port/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-port` repo](https://github.com/port-labs/terraform-provider-port/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "baseUrl": {
                "type": "string"
            },
            "clientId": {
                "type": "string",
                "description": "Client ID for Port-labs\n"
            },
            "secret": {
                "type": "string",
                "description": "Client Secret for Port-labs\n",
                "secret": true
            },
            "token": {
                "type": "string",
                "description": "Token for Port-labs\n",
                "secret": true
            }
        }
    },
    "types": {
        "port:index/ActionApprovalEmailNotification:ActionApprovalEmailNotification": {
            "type": "object"
        },
        "port:index/ActionApprovalWebhookNotification:ActionApprovalWebhookNotification": {
            "properties": {
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "port:index/ActionAzureMethod:ActionAzureMethod": {
            "properties": {
                "org": {
                    "type": "string"
                },
                "webhook": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "org",
                "webhook"
            ]
        },
        "port:index/ActionGithubMethod:ActionGithubMethod": {
            "properties": {
                "omitPayload": {
                    "type": "boolean"
                },
                "omitUserInputs": {
                    "type": "boolean"
                },
                "org": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "reportWorkflowStatus": {
                    "type": "boolean"
                },
                "workflow": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "org",
                "repo",
                "workflow"
            ]
        },
        "port:index/ActionGitlabMethod:ActionGitlabMethod": {
            "properties": {
                "agent": {
                    "type": "boolean"
                },
                "defaultRef": {
                    "type": "string"
                },
                "groupName": {
                    "type": "string"
                },
                "omitPayload": {
                    "type": "boolean"
                },
                "omitUserInputs": {
                    "type": "boolean"
                },
                "projectName": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "groupName",
                "projectName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "agent",
                        "groupName",
                        "projectName"
                    ]
                }
            }
        },
        "port:index/ActionKafkaMethod:ActionKafkaMethod": {
            "type": "object"
        },
        "port:index/ActionUserProperties:ActionUserProperties": {
            "properties": {
                "arrayProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/ActionUserPropertiesArrayProps:ActionUserPropertiesArrayProps"
                    }
                },
                "booleanProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/ActionUserPropertiesBooleanProps:ActionUserPropertiesBooleanProps"
                    }
                },
                "numberProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/ActionUserPropertiesNumberProps:ActionUserPropertiesNumberProps"
                    }
                },
                "objectProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/ActionUserPropertiesObjectProps:ActionUserPropertiesObjectProps"
                    }
                },
                "stringProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/ActionUserPropertiesStringProps:ActionUserPropertiesStringProps"
                    }
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesArrayProps:ActionUserPropertiesArrayProps": {
            "properties": {
                "booleanItems": {
                    "$ref": "#/types/port:index/ActionUserPropertiesArrayPropsBooleanItems:ActionUserPropertiesArrayPropsBooleanItems"
                },
                "dataset": {
                    "$ref": "#/types/port:index/ActionUserPropertiesArrayPropsDataset:ActionUserPropertiesArrayPropsDataset"
                },
                "defaultJqQuery": {
                    "type": "string"
                },
                "dependsOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "maxItems": {
                    "type": "integer"
                },
                "minItems": {
                    "type": "integer"
                },
                "numberItems": {
                    "$ref": "#/types/port:index/ActionUserPropertiesArrayPropsNumberItems:ActionUserPropertiesArrayPropsNumberItems"
                },
                "objectItems": {
                    "$ref": "#/types/port:index/ActionUserPropertiesArrayPropsObjectItems:ActionUserPropertiesArrayPropsObjectItems"
                },
                "required": {
                    "type": "boolean"
                },
                "stringItems": {
                    "$ref": "#/types/port:index/ActionUserPropertiesArrayPropsStringItems:ActionUserPropertiesArrayPropsStringItems"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/ActionUserPropertiesArrayPropsBooleanItems:ActionUserPropertiesArrayPropsBooleanItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesArrayPropsDataset:ActionUserPropertiesArrayPropsDataset": {
            "properties": {
                "combinator": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/ActionUserPropertiesArrayPropsDatasetRule:ActionUserPropertiesArrayPropsDatasetRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "combinator",
                "rules"
            ]
        },
        "port:index/ActionUserPropertiesArrayPropsDatasetRule:ActionUserPropertiesArrayPropsDatasetRule": {
            "properties": {
                "blueprint": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "property": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/port:index/ActionUserPropertiesArrayPropsDatasetRuleValue:ActionUserPropertiesArrayPropsDatasetRuleValue"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "port:index/ActionUserPropertiesArrayPropsDatasetRuleValue:ActionUserPropertiesArrayPropsDatasetRuleValue": {
            "properties": {
                "jqQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "jqQuery"
            ]
        },
        "port:index/ActionUserPropertiesArrayPropsNumberItems:ActionUserPropertiesArrayPropsNumberItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "enumJqQuery": {
                    "type": "string"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesArrayPropsObjectItems:ActionUserPropertiesArrayPropsObjectItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesArrayPropsStringItems:ActionUserPropertiesArrayPropsStringItems": {
            "properties": {
                "blueprint": {
                    "type": "string"
                },
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "enumJqQuery": {
                    "type": "string"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "format": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesBooleanProps:ActionUserPropertiesBooleanProps": {
            "properties": {
                "dataset": {
                    "$ref": "#/types/port:index/ActionUserPropertiesBooleanPropsDataset:ActionUserPropertiesBooleanPropsDataset"
                },
                "default": {
                    "type": "boolean"
                },
                "defaultJqQuery": {
                    "type": "string"
                },
                "dependsOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/ActionUserPropertiesBooleanPropsDataset:ActionUserPropertiesBooleanPropsDataset": {
            "properties": {
                "combinator": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/ActionUserPropertiesBooleanPropsDatasetRule:ActionUserPropertiesBooleanPropsDatasetRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "combinator",
                "rules"
            ]
        },
        "port:index/ActionUserPropertiesBooleanPropsDatasetRule:ActionUserPropertiesBooleanPropsDatasetRule": {
            "properties": {
                "blueprint": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "property": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/port:index/ActionUserPropertiesBooleanPropsDatasetRuleValue:ActionUserPropertiesBooleanPropsDatasetRuleValue"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "port:index/ActionUserPropertiesBooleanPropsDatasetRuleValue:ActionUserPropertiesBooleanPropsDatasetRuleValue": {
            "properties": {
                "jqQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "jqQuery"
            ]
        },
        "port:index/ActionUserPropertiesNumberProps:ActionUserPropertiesNumberProps": {
            "properties": {
                "dataset": {
                    "$ref": "#/types/port:index/ActionUserPropertiesNumberPropsDataset:ActionUserPropertiesNumberPropsDataset"
                },
                "default": {
                    "type": "number"
                },
                "defaultJqQuery": {
                    "type": "string"
                },
                "dependsOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enumJqQuery": {
                    "type": "string"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "maximum": {
                    "type": "number"
                },
                "minimum": {
                    "type": "number"
                },
                "required": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/ActionUserPropertiesNumberPropsDataset:ActionUserPropertiesNumberPropsDataset": {
            "properties": {
                "combinator": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/ActionUserPropertiesNumberPropsDatasetRule:ActionUserPropertiesNumberPropsDatasetRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "combinator",
                "rules"
            ]
        },
        "port:index/ActionUserPropertiesNumberPropsDatasetRule:ActionUserPropertiesNumberPropsDatasetRule": {
            "properties": {
                "blueprint": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "property": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/port:index/ActionUserPropertiesNumberPropsDatasetRuleValue:ActionUserPropertiesNumberPropsDatasetRuleValue"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "port:index/ActionUserPropertiesNumberPropsDatasetRuleValue:ActionUserPropertiesNumberPropsDatasetRuleValue": {
            "properties": {
                "jqQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "jqQuery"
            ]
        },
        "port:index/ActionUserPropertiesObjectProps:ActionUserPropertiesObjectProps": {
            "properties": {
                "dataset": {
                    "$ref": "#/types/port:index/ActionUserPropertiesObjectPropsDataset:ActionUserPropertiesObjectPropsDataset"
                },
                "default": {
                    "type": "string"
                },
                "defaultJqQuery": {
                    "type": "string"
                },
                "dependsOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/ActionUserPropertiesObjectPropsDataset:ActionUserPropertiesObjectPropsDataset": {
            "properties": {
                "combinator": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/ActionUserPropertiesObjectPropsDatasetRule:ActionUserPropertiesObjectPropsDatasetRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "combinator",
                "rules"
            ]
        },
        "port:index/ActionUserPropertiesObjectPropsDatasetRule:ActionUserPropertiesObjectPropsDatasetRule": {
            "properties": {
                "blueprint": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "property": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/port:index/ActionUserPropertiesObjectPropsDatasetRuleValue:ActionUserPropertiesObjectPropsDatasetRuleValue"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "port:index/ActionUserPropertiesObjectPropsDatasetRuleValue:ActionUserPropertiesObjectPropsDatasetRuleValue": {
            "properties": {
                "jqQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "jqQuery"
            ]
        },
        "port:index/ActionUserPropertiesStringProps:ActionUserPropertiesStringProps": {
            "properties": {
                "blueprint": {
                    "type": "string"
                },
                "dataset": {
                    "$ref": "#/types/port:index/ActionUserPropertiesStringPropsDataset:ActionUserPropertiesStringPropsDataset"
                },
                "default": {
                    "type": "string"
                },
                "defaultJqQuery": {
                    "type": "string"
                },
                "dependsOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enumJqQuery": {
                    "type": "string"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "format": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "maxLength": {
                    "type": "integer"
                },
                "minLength": {
                    "type": "integer"
                },
                "pattern": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/ActionUserPropertiesStringPropsDataset:ActionUserPropertiesStringPropsDataset": {
            "properties": {
                "combinator": {
                    "type": "string"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/ActionUserPropertiesStringPropsDatasetRule:ActionUserPropertiesStringPropsDatasetRule"
                    }
                }
            },
            "type": "object",
            "required": [
                "combinator",
                "rules"
            ]
        },
        "port:index/ActionUserPropertiesStringPropsDatasetRule:ActionUserPropertiesStringPropsDatasetRule": {
            "properties": {
                "blueprint": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "property": {
                    "type": "string"
                },
                "value": {
                    "$ref": "#/types/port:index/ActionUserPropertiesStringPropsDatasetRuleValue:ActionUserPropertiesStringPropsDatasetRuleValue"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "port:index/ActionUserPropertiesStringPropsDatasetRuleValue:ActionUserPropertiesStringPropsDatasetRuleValue": {
            "properties": {
                "jqQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "jqQuery"
            ]
        },
        "port:index/ActionWebhookMethod:ActionWebhookMethod": {
            "properties": {
                "agent": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "port:index/BlueprintCalculationProperties:BlueprintCalculationProperties": {
            "properties": {
                "calculation": {
                    "type": "string"
                },
                "colorized": {
                    "type": "boolean"
                },
                "colors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "calculation",
                "type"
            ]
        },
        "port:index/BlueprintKafkaChangelogDestination:BlueprintKafkaChangelogDestination": {
            "type": "object"
        },
        "port:index/BlueprintMirrorProperties:BlueprintMirrorProperties": {
            "properties": {
                "path": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "path"
            ]
        },
        "port:index/BlueprintProperties:BlueprintProperties": {
            "properties": {
                "arrayProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintPropertiesArrayProps:BlueprintPropertiesArrayProps"
                    }
                },
                "booleanProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintPropertiesBooleanProps:BlueprintPropertiesBooleanProps"
                    }
                },
                "numberProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintPropertiesNumberProps:BlueprintPropertiesNumberProps"
                    }
                },
                "objectProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintPropertiesObjectProps:BlueprintPropertiesObjectProps"
                    }
                },
                "stringProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintPropertiesStringProps:BlueprintPropertiesStringProps"
                    }
                }
            },
            "type": "object"
        },
        "port:index/BlueprintPropertiesArrayProps:BlueprintPropertiesArrayProps": {
            "properties": {
                "booleanItems": {
                    "$ref": "#/types/port:index/BlueprintPropertiesArrayPropsBooleanItems:BlueprintPropertiesArrayPropsBooleanItems"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "maxItems": {
                    "type": "integer"
                },
                "minItems": {
                    "type": "integer"
                },
                "numberItems": {
                    "$ref": "#/types/port:index/BlueprintPropertiesArrayPropsNumberItems:BlueprintPropertiesArrayPropsNumberItems"
                },
                "objectItems": {
                    "$ref": "#/types/port:index/BlueprintPropertiesArrayPropsObjectItems:BlueprintPropertiesArrayPropsObjectItems"
                },
                "required": {
                    "type": "boolean"
                },
                "stringItems": {
                    "$ref": "#/types/port:index/BlueprintPropertiesArrayPropsStringItems:BlueprintPropertiesArrayPropsStringItems"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/BlueprintPropertiesArrayPropsBooleanItems:BlueprintPropertiesArrayPropsBooleanItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    }
                }
            },
            "type": "object"
        },
        "port:index/BlueprintPropertiesArrayPropsNumberItems:BlueprintPropertiesArrayPropsNumberItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            },
            "type": "object"
        },
        "port:index/BlueprintPropertiesArrayPropsObjectItems:BlueprintPropertiesArrayPropsObjectItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "port:index/BlueprintPropertiesArrayPropsStringItems:BlueprintPropertiesArrayPropsStringItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "format": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "port:index/BlueprintPropertiesBooleanProps:BlueprintPropertiesBooleanProps": {
            "properties": {
                "default": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/BlueprintPropertiesNumberProps:BlueprintPropertiesNumberProps": {
            "properties": {
                "default": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "enumColors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "icon": {
                    "type": "string"
                },
                "maximum": {
                    "type": "number"
                },
                "minimum": {
                    "type": "number"
                },
                "required": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/BlueprintPropertiesObjectProps:BlueprintPropertiesObjectProps": {
            "properties": {
                "default": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "spec": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/BlueprintPropertiesStringProps:BlueprintPropertiesStringProps": {
            "properties": {
                "default": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "enumColors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "format": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "maxLength": {
                    "type": "integer"
                },
                "minLength": {
                    "type": "integer"
                },
                "pattern": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "spec": {
                    "type": "string"
                },
                "specAuthentication": {
                    "$ref": "#/types/port:index/BlueprintPropertiesStringPropsSpecAuthentication:BlueprintPropertiesStringPropsSpecAuthentication"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/BlueprintPropertiesStringPropsSpecAuthentication:BlueprintPropertiesStringPropsSpecAuthentication": {
            "properties": {
                "authorizationUrl": {
                    "type": "string"
                },
                "clientId": {
                    "type": "string"
                },
                "tokenUrl": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "authorizationUrl",
                "clientId",
                "tokenUrl"
            ]
        },
        "port:index/BlueprintRelations:BlueprintRelations": {
            "properties": {
                "many": {
                    "type": "boolean"
                },
                "required": {
                    "type": "boolean"
                },
                "target": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "many",
                        "required",
                        "target"
                    ]
                }
            }
        },
        "port:index/BlueprintTeamInheritance:BlueprintTeamInheritance": {
            "properties": {
                "path": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "path"
            ]
        },
        "port:index/BlueprintWebhookChangelogDestination:BlueprintWebhookChangelogDestination": {
            "properties": {
                "agent": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "port:index/EntityProperties:EntityProperties": {
            "properties": {
                "arrayProps": {
                    "$ref": "#/types/port:index/EntityPropertiesArrayProps:EntityPropertiesArrayProps"
                },
                "booleanProps": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    }
                },
                "numberProps": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "objectProps": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "stringProps": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "port:index/EntityPropertiesArrayProps:EntityPropertiesArrayProps": {
            "properties": {
                "booleanItems": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "boolean"
                        }
                    }
                },
                "numberItems": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "objectItems": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "stringItems": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "type": "object"
        },
        "port:index/EntityRelations:EntityRelations": {
            "properties": {
                "manyRelations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "singleRelations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        },
        "port:index/WebhookMapping:WebhookMapping": {
            "properties": {
                "blueprint": {
                    "type": "string"
                },
                "entity": {
                    "$ref": "#/types/port:index/WebhookMappingEntity:WebhookMappingEntity"
                },
                "filter": {
                    "type": "string"
                },
                "itemsToParse": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "blueprint",
                "entity"
            ]
        },
        "port:index/WebhookMappingEntity:WebhookMappingEntity": {
            "properties": {
                "icon": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "relations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "team": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "identifier"
            ]
        },
        "port:index/WebhookSecurity:WebhookSecurity": {
            "properties": {
                "requestIdentifierPath": {
                    "type": "string"
                },
                "secret": {
                    "type": "string"
                },
                "signatureAlgorithm": {
                    "type": "string"
                },
                "signatureHeaderName": {
                    "type": "string"
                },
                "signaturePrefix": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the port package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "baseUrl": {
                "type": "string"
            },
            "clientId": {
                "type": "string",
                "description": "Client ID for Port-labs\n"
            },
            "secret": {
                "type": "string",
                "description": "Client Secret for Port-labs\n",
                "secret": true
            },
            "token": {
                "type": "string",
                "description": "Token for Port-labs\n",
                "secret": true
            }
        },
        "inputProperties": {
            "baseUrl": {
                "type": "string"
            },
            "clientId": {
                "type": "string",
                "description": "Client ID for Port-labs\n"
            },
            "secret": {
                "type": "string",
                "description": "Client Secret for Port-labs\n",
                "secret": true
            },
            "token": {
                "type": "string",
                "description": "Token for Port-labs\n",
                "secret": true
            }
        }
    },
    "resources": {
        "port:index/action:Action": {
            "properties": {
                "approvalEmailNotification": {
                    "$ref": "#/types/port:index/ActionApprovalEmailNotification:ActionApprovalEmailNotification",
                    "description": "The email notification of the approval\n"
                },
                "approvalWebhookNotification": {
                    "$ref": "#/types/port:index/ActionApprovalWebhookNotification:ActionApprovalWebhookNotification",
                    "description": "The webhook notification of the approval\n"
                },
                "azureMethod": {
                    "$ref": "#/types/port:index/ActionAzureMethod:ActionAzureMethod",
                    "description": "The invocation method of the action\n"
                },
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint identifier the action relates to\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "githubMethod": {
                    "$ref": "#/types/port:index/ActionGithubMethod:ActionGithubMethod",
                    "description": "The invocation method of the action\n"
                },
                "gitlabMethod": {
                    "$ref": "#/types/port:index/ActionGitlabMethod:ActionGitlabMethod",
                    "description": "The invocation method of the action\n"
                },
                "icon": {
                    "type": "string",
                    "description": "Icon\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier\n"
                },
                "kafkaMethod": {
                    "$ref": "#/types/port:index/ActionKafkaMethod:ActionKafkaMethod",
                    "description": "The invocation method of the action\n"
                },
                "orderProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Order properties\n"
                },
                "requiredApproval": {
                    "type": "boolean",
                    "description": "Require approval before invoking the action\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "The trigger type of the action\n"
                },
                "userProperties": {
                    "$ref": "#/types/port:index/ActionUserProperties:ActionUserProperties",
                    "description": "User properties\n"
                },
                "webhookMethod": {
                    "$ref": "#/types/port:index/ActionWebhookMethod:ActionWebhookMethod",
                    "description": "The invocation method of the action\n"
                }
            },
            "required": [
                "blueprint",
                "identifier",
                "title",
                "trigger"
            ],
            "inputProperties": {
                "approvalEmailNotification": {
                    "$ref": "#/types/port:index/ActionApprovalEmailNotification:ActionApprovalEmailNotification",
                    "description": "The email notification of the approval\n"
                },
                "approvalWebhookNotification": {
                    "$ref": "#/types/port:index/ActionApprovalWebhookNotification:ActionApprovalWebhookNotification",
                    "description": "The webhook notification of the approval\n"
                },
                "azureMethod": {
                    "$ref": "#/types/port:index/ActionAzureMethod:ActionAzureMethod",
                    "description": "The invocation method of the action\n"
                },
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint identifier the action relates to\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "githubMethod": {
                    "$ref": "#/types/port:index/ActionGithubMethod:ActionGithubMethod",
                    "description": "The invocation method of the action\n"
                },
                "gitlabMethod": {
                    "$ref": "#/types/port:index/ActionGitlabMethod:ActionGitlabMethod",
                    "description": "The invocation method of the action\n"
                },
                "icon": {
                    "type": "string",
                    "description": "Icon\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier\n"
                },
                "kafkaMethod": {
                    "$ref": "#/types/port:index/ActionKafkaMethod:ActionKafkaMethod",
                    "description": "The invocation method of the action\n"
                },
                "orderProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Order properties\n"
                },
                "requiredApproval": {
                    "type": "boolean",
                    "description": "Require approval before invoking the action\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "The trigger type of the action\n"
                },
                "userProperties": {
                    "$ref": "#/types/port:index/ActionUserProperties:ActionUserProperties",
                    "description": "User properties\n"
                },
                "webhookMethod": {
                    "$ref": "#/types/port:index/ActionWebhookMethod:ActionWebhookMethod",
                    "description": "The invocation method of the action\n"
                }
            },
            "requiredInputs": [
                "blueprint",
                "identifier",
                "title",
                "trigger"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Action resources.\n",
                "properties": {
                    "approvalEmailNotification": {
                        "$ref": "#/types/port:index/ActionApprovalEmailNotification:ActionApprovalEmailNotification",
                        "description": "The email notification of the approval\n"
                    },
                    "approvalWebhookNotification": {
                        "$ref": "#/types/port:index/ActionApprovalWebhookNotification:ActionApprovalWebhookNotification",
                        "description": "The webhook notification of the approval\n"
                    },
                    "azureMethod": {
                        "$ref": "#/types/port:index/ActionAzureMethod:ActionAzureMethod",
                        "description": "The invocation method of the action\n"
                    },
                    "blueprint": {
                        "type": "string",
                        "description": "The blueprint identifier the action relates to\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description\n"
                    },
                    "githubMethod": {
                        "$ref": "#/types/port:index/ActionGithubMethod:ActionGithubMethod",
                        "description": "The invocation method of the action\n"
                    },
                    "gitlabMethod": {
                        "$ref": "#/types/port:index/ActionGitlabMethod:ActionGitlabMethod",
                        "description": "The invocation method of the action\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "Icon\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "Identifier\n"
                    },
                    "kafkaMethod": {
                        "$ref": "#/types/port:index/ActionKafkaMethod:ActionKafkaMethod",
                        "description": "The invocation method of the action\n"
                    },
                    "orderProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Order properties\n"
                    },
                    "requiredApproval": {
                        "type": "boolean",
                        "description": "Require approval before invoking the action\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title\n"
                    },
                    "trigger": {
                        "type": "string",
                        "description": "The trigger type of the action\n"
                    },
                    "userProperties": {
                        "$ref": "#/types/port:index/ActionUserProperties:ActionUserProperties",
                        "description": "User properties\n"
                    },
                    "webhookMethod": {
                        "$ref": "#/types/port:index/ActionWebhookMethod:ActionWebhookMethod",
                        "description": "The invocation method of the action\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/blueprint:Blueprint": {
            "properties": {
                "calculationProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintCalculationProperties:BlueprintCalculationProperties"
                    },
                    "description": "The calculation properties of the blueprint\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the blueprint\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The creator of the blueprint\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the blueprint\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the blueprint\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the blueprint\n"
                },
                "kafkaChangelogDestination": {
                    "$ref": "#/types/port:index/BlueprintKafkaChangelogDestination:BlueprintKafkaChangelogDestination",
                    "description": "The changelog destination of the blueprint\n"
                },
                "mirrorProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintMirrorProperties:BlueprintMirrorProperties"
                    },
                    "description": "The mirror properties of the blueprint\n"
                },
                "properties": {
                    "$ref": "#/types/port:index/BlueprintProperties:BlueprintProperties",
                    "description": "The properties of the blueprint\n"
                },
                "relations": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintRelations:BlueprintRelations"
                    },
                    "description": "The relations of the blueprint\n"
                },
                "teamInheritance": {
                    "$ref": "#/types/port:index/BlueprintTeamInheritance:BlueprintTeamInheritance",
                    "description": "The team inheritance of the blueprint\n"
                },
                "title": {
                    "type": "string",
                    "description": "The display name of the blueprint\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The last update date of the blueprint\n"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "The last updater of the blueprint\n"
                },
                "webhookChangelogDestination": {
                    "$ref": "#/types/port:index/BlueprintWebhookChangelogDestination:BlueprintWebhookChangelogDestination",
                    "description": "The webhook changelog destination of the blueprint\n"
                }
            },
            "required": [
                "createdAt",
                "createdBy",
                "identifier",
                "title",
                "updatedAt",
                "updatedBy"
            ],
            "inputProperties": {
                "calculationProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintCalculationProperties:BlueprintCalculationProperties"
                    },
                    "description": "The calculation properties of the blueprint\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the blueprint\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the blueprint\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the blueprint\n"
                },
                "kafkaChangelogDestination": {
                    "$ref": "#/types/port:index/BlueprintKafkaChangelogDestination:BlueprintKafkaChangelogDestination",
                    "description": "The changelog destination of the blueprint\n"
                },
                "mirrorProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintMirrorProperties:BlueprintMirrorProperties"
                    },
                    "description": "The mirror properties of the blueprint\n"
                },
                "properties": {
                    "$ref": "#/types/port:index/BlueprintProperties:BlueprintProperties",
                    "description": "The properties of the blueprint\n"
                },
                "relations": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintRelations:BlueprintRelations"
                    },
                    "description": "The relations of the blueprint\n"
                },
                "teamInheritance": {
                    "$ref": "#/types/port:index/BlueprintTeamInheritance:BlueprintTeamInheritance",
                    "description": "The team inheritance of the blueprint\n"
                },
                "title": {
                    "type": "string",
                    "description": "The display name of the blueprint\n"
                },
                "webhookChangelogDestination": {
                    "$ref": "#/types/port:index/BlueprintWebhookChangelogDestination:BlueprintWebhookChangelogDestination",
                    "description": "The webhook changelog destination of the blueprint\n"
                }
            },
            "requiredInputs": [
                "identifier",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Blueprint resources.\n",
                "properties": {
                    "calculationProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/port:index/BlueprintCalculationProperties:BlueprintCalculationProperties"
                        },
                        "description": "The calculation properties of the blueprint\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation date of the blueprint\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The creator of the blueprint\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the blueprint\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "The icon of the blueprint\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "The identifier of the blueprint\n"
                    },
                    "kafkaChangelogDestination": {
                        "$ref": "#/types/port:index/BlueprintKafkaChangelogDestination:BlueprintKafkaChangelogDestination",
                        "description": "The changelog destination of the blueprint\n"
                    },
                    "mirrorProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/port:index/BlueprintMirrorProperties:BlueprintMirrorProperties"
                        },
                        "description": "The mirror properties of the blueprint\n"
                    },
                    "properties": {
                        "$ref": "#/types/port:index/BlueprintProperties:BlueprintProperties",
                        "description": "The properties of the blueprint\n"
                    },
                    "relations": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/port:index/BlueprintRelations:BlueprintRelations"
                        },
                        "description": "The relations of the blueprint\n"
                    },
                    "teamInheritance": {
                        "$ref": "#/types/port:index/BlueprintTeamInheritance:BlueprintTeamInheritance",
                        "description": "The team inheritance of the blueprint\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The display name of the blueprint\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last update date of the blueprint\n"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The last updater of the blueprint\n"
                    },
                    "webhookChangelogDestination": {
                        "$ref": "#/types/port:index/BlueprintWebhookChangelogDestination:BlueprintWebhookChangelogDestination",
                        "description": "The webhook changelog destination of the blueprint\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/entity:Entity": {
            "properties": {
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint identifier the entity relates to\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the entity\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The creator of the entity\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the entity\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the entity\n"
                },
                "properties": {
                    "$ref": "#/types/port:index/EntityProperties:EntityProperties",
                    "description": "The properties of the entity\n"
                },
                "relations": {
                    "$ref": "#/types/port:index/EntityRelations:EntityRelations",
                    "description": "The relations of the entity\n"
                },
                "runId": {
                    "type": "string",
                    "description": "The runID of the action run that created the entity\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The teams the entity belongs to\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the entity\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The last update date of the entity\n"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "The last updater of the entity\n"
                }
            },
            "required": [
                "blueprint",
                "createdAt",
                "createdBy",
                "identifier",
                "updatedAt",
                "updatedBy"
            ],
            "inputProperties": {
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint identifier the entity relates to\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the entity\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the entity\n"
                },
                "properties": {
                    "$ref": "#/types/port:index/EntityProperties:EntityProperties",
                    "description": "The properties of the entity\n"
                },
                "relations": {
                    "$ref": "#/types/port:index/EntityRelations:EntityRelations",
                    "description": "The relations of the entity\n"
                },
                "runId": {
                    "type": "string",
                    "description": "The runID of the action run that created the entity\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The teams the entity belongs to\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the entity\n"
                }
            },
            "requiredInputs": [
                "blueprint"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Entity resources.\n",
                "properties": {
                    "blueprint": {
                        "type": "string",
                        "description": "The blueprint identifier the entity relates to\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation date of the entity\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The creator of the entity\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "The icon of the entity\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "The identifier of the entity\n"
                    },
                    "properties": {
                        "$ref": "#/types/port:index/EntityProperties:EntityProperties",
                        "description": "The properties of the entity\n"
                    },
                    "relations": {
                        "$ref": "#/types/port:index/EntityRelations:EntityRelations",
                        "description": "The relations of the entity\n"
                    },
                    "runId": {
                        "type": "string",
                        "description": "The runID of the action run that created the entity\n"
                    },
                    "teams": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The teams the entity belongs to\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the entity\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last update date of the entity\n"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The last updater of the entity\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/webhook:Webhook": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the webhook\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The creator of the webhook\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the webhook\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the webhook is enabled\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the webhook\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the webhook\n"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/WebhookMapping:WebhookMapping"
                    },
                    "description": "The mappings of the webhook\n"
                },
                "security": {
                    "$ref": "#/types/port:index/WebhookSecurity:WebhookSecurity",
                    "description": "The security of the webhook\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the webhook\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The last update date of the webhook\n"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "The last updater of the webhook\n"
                },
                "url": {
                    "type": "string",
                    "description": "The url of the webhook\n"
                },
                "webhookKey": {
                    "type": "string",
                    "description": "The webhook key of the webhook\n"
                }
            },
            "required": [
                "createdAt",
                "createdBy",
                "enabled",
                "identifier",
                "updatedAt",
                "updatedBy",
                "url",
                "webhookKey"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the webhook\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the webhook is enabled\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the webhook\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the webhook\n"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/WebhookMapping:WebhookMapping"
                    },
                    "description": "The mappings of the webhook\n"
                },
                "security": {
                    "$ref": "#/types/port:index/WebhookSecurity:WebhookSecurity",
                    "description": "The security of the webhook\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the webhook\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Webhook resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation date of the webhook\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The creator of the webhook\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the webhook\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the webhook is enabled\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "The icon of the webhook\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "The identifier of the webhook\n"
                    },
                    "mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/port:index/WebhookMapping:WebhookMapping"
                        },
                        "description": "The mappings of the webhook\n"
                    },
                    "security": {
                        "$ref": "#/types/port:index/WebhookSecurity:WebhookSecurity",
                        "description": "The security of the webhook\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the webhook\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last update date of the webhook\n"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The last updater of the webhook\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The url of the webhook\n"
                    },
                    "webhookKey": {
                        "type": "string",
                        "description": "The webhook key of the webhook\n"
                    }
                },
                "type": "object"
            }
        }
    }
}