{
    "name": "port",
    "displayName": "Port",
    "description": "A Pulumi package for creating and managing Port resources.",
    "keywords": [
        "pulumi",
        "port",
        "category/utility"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`port` Terraform Provider](https://github.com/port-labs/terraform-provider-port).",
    "repository": "https://github.com/port-labs/pulumi-port",
    "pluginDownloadURL": "github://api.github.com/port-labs/pulumi-port",
    "publisher": "port-labs",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "port_labs"
        },
        "go": {
            "importBasePath": "github.com/port-labs/pulumi-port/sdk/go/port",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "nodejs": {
            "packageName": "@port-labs/port",
            "packageDescription": "A Pulumi package for creating and managing Port resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/port-labs/terraform-provider-port)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-port` repo](https://github.com/port-labs/pulumi-port/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-port` repo](https://github.com/port-labs/terraform-provider-port/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "port_pulumi",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/port-labs/terraform-provider-port)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-port` repo](https://github.com/port-labs/pulumi-port/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-port` repo](https://github.com/port-labs/terraform-provider-port/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "baseUrl": {
                "type": "string"
            },
            "clientId": {
                "type": "string",
                "description": "Client ID for Port-labs\n"
            },
            "secret": {
                "type": "string",
                "description": "Client Secret for Port-labs\n",
                "secret": true
            },
            "token": {
                "type": "string",
                "description": "Token for Port-labs\n",
                "secret": true
            }
        }
    },
    "types": {
        "port:index/ActionApprovalEmailNotification:ActionApprovalEmailNotification": {
            "type": "object"
        },
        "port:index/ActionApprovalWebhookNotification:ActionApprovalWebhookNotification": {
            "properties": {
                "format": {
                    "type": "string",
                    "description": "The format to invoke the webhook\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL to invoke the webhook\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "port:index/ActionAzureMethod:ActionAzureMethod": {
            "properties": {
                "org": {
                    "type": "string",
                    "description": "Required when selecting type AZURE. The Azure org that the workflow belongs to\n"
                },
                "webhook": {
                    "type": "string",
                    "description": "Required when selecting type AZURE. The Azure webhook that the workflow belongs to\n"
                }
            },
            "type": "object",
            "required": [
                "org",
                "webhook"
            ]
        },
        "port:index/ActionGithubMethod:ActionGithubMethod": {
            "properties": {
                "omitPayload": {
                    "type": "boolean",
                    "description": "Omit the payload when invoking the action\n"
                },
                "omitUserInputs": {
                    "type": "boolean",
                    "description": "Omit the user inputs when invoking the action\n"
                },
                "org": {
                    "type": "string",
                    "description": "Required when selecting type GITHUB. The GitHub org that the workflow belongs to\n"
                },
                "repo": {
                    "type": "string",
                    "description": "Required when selecting type GITHUB. The GitHub repo that the workflow belongs to\n"
                },
                "reportWorkflowStatus": {
                    "type": "boolean",
                    "description": "Report the workflow status when invoking the action\n"
                },
                "workflow": {
                    "type": "string",
                    "description": "The GitHub workflow that the action belongs to\n"
                }
            },
            "type": "object",
            "required": [
                "org",
                "repo",
                "workflow"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "omitPayload",
                        "omitUserInputs",
                        "org",
                        "repo",
                        "workflow"
                    ]
                }
            }
        },
        "port:index/ActionGitlabMethod:ActionGitlabMethod": {
            "properties": {
                "agent": {
                    "type": "boolean",
                    "description": "Use the agent to invoke the action\n"
                },
                "defaultRef": {
                    "type": "string",
                    "description": "The default ref of the action\n"
                },
                "groupName": {
                    "type": "string",
                    "description": "Required when selecting type GITLAB. The GitLab group name that the workflow belongs to\n"
                },
                "omitPayload": {
                    "type": "boolean",
                    "description": "Omit the payload when invoking the action\n"
                },
                "omitUserInputs": {
                    "type": "boolean",
                    "description": "Omit the user inputs when invoking the action\n"
                },
                "projectName": {
                    "type": "string",
                    "description": "Required when selecting type GITLAB. The GitLab project name that the workflow belongs to\n"
                }
            },
            "type": "object",
            "required": [
                "groupName",
                "projectName"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "agent",
                        "groupName",
                        "omitPayload",
                        "omitUserInputs",
                        "projectName"
                    ]
                }
            }
        },
        "port:index/ActionKafkaMethod:ActionKafkaMethod": {
            "type": "object"
        },
        "port:index/ActionPermissionsPermissions:ActionPermissionsPermissions": {
            "properties": {
                "approve": {
                    "$ref": "#/types/port:index/ActionPermissionsPermissionsApprove:ActionPermissionsPermissionsApprove",
                    "description": "The permission to approve the action's runs\n"
                },
                "execute": {
                    "$ref": "#/types/port:index/ActionPermissionsPermissionsExecute:ActionPermissionsPermissionsExecute",
                    "description": "The permission to execute the action\n"
                }
            },
            "type": "object",
            "required": [
                "approve",
                "execute"
            ]
        },
        "port:index/ActionPermissionsPermissionsApprove:ActionPermissionsPermissionsApprove": {
            "properties": {
                "policy": {
                    "type": "string",
                    "description": "The policy to use for approval\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles with approval permission\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The teams with approval permission\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The users with approval permission\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "roles",
                        "teams",
                        "users"
                    ]
                }
            }
        },
        "port:index/ActionPermissionsPermissionsExecute:ActionPermissionsPermissionsExecute": {
            "properties": {
                "ownedByTeam": {
                    "type": "boolean",
                    "description": "Give execution permission to the teams who own the entity\n"
                },
                "policy": {
                    "type": "string",
                    "description": "The policy to use for execution\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles with execution permission\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The teams with execution permission\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The users with execution permission\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ownedByTeam",
                        "roles",
                        "teams",
                        "users"
                    ]
                }
            }
        },
        "port:index/ActionUserProperties:ActionUserProperties": {
            "properties": {
                "arrayProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/ActionUserPropertiesArrayProps:ActionUserPropertiesArrayProps"
                    },
                    "description": "The array property of the action\n"
                },
                "booleanProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/ActionUserPropertiesBooleanProps:ActionUserPropertiesBooleanProps"
                    },
                    "description": "The boolean property of the action\n"
                },
                "numberProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/ActionUserPropertiesNumberProps:ActionUserPropertiesNumberProps"
                    },
                    "description": "The number property of the action\n"
                },
                "objectProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/ActionUserPropertiesObjectProps:ActionUserPropertiesObjectProps"
                    },
                    "description": "The object property of the action\n"
                },
                "stringProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/ActionUserPropertiesStringProps:ActionUserPropertiesStringProps"
                    },
                    "description": "The string property of the action\n"
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesArrayProps:ActionUserPropertiesArrayProps": {
            "properties": {
                "booleanItems": {
                    "$ref": "#/types/port:index/ActionUserPropertiesArrayPropsBooleanItems:ActionUserPropertiesArrayPropsBooleanItems",
                    "description": "The items of the array property\n"
                },
                "defaultJqQuery": {
                    "type": "string",
                    "description": "The default jq query of the array property\n"
                },
                "dependsOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The properties that this property depends on\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the property\n"
                },
                "maxItems": {
                    "type": "integer",
                    "description": "The max items of the array property\n"
                },
                "minItems": {
                    "type": "integer",
                    "description": "The min items of the array property\n"
                },
                "numberItems": {
                    "$ref": "#/types/port:index/ActionUserPropertiesArrayPropsNumberItems:ActionUserPropertiesArrayPropsNumberItems",
                    "description": "The items of the array property\n"
                },
                "objectItems": {
                    "$ref": "#/types/port:index/ActionUserPropertiesArrayPropsObjectItems:ActionUserPropertiesArrayPropsObjectItems",
                    "description": "The items of the array property\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required, by default not required, this property can't be set at the same time if `required_jq_query` is set, and only supports true as value\n"
                },
                "stringItems": {
                    "$ref": "#/types/port:index/ActionUserPropertiesArrayPropsStringItems:ActionUserPropertiesArrayPropsStringItems",
                    "description": "The items of the array property\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the property\n"
                },
                "visible": {
                    "type": "boolean",
                    "description": "The visibility of the array property\n"
                },
                "visibleJqQuery": {
                    "type": "string",
                    "description": "The visibility condition jq query of the array property\n"
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesArrayPropsBooleanItems:ActionUserPropertiesArrayPropsBooleanItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "description": "The default of the items\n"
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesArrayPropsNumberItems:ActionUserPropertiesArrayPropsNumberItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "The default of the items\n"
                },
                "enumJqQuery": {
                    "type": "string",
                    "description": "The enum jq query of the number items\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "The enum of the items\n"
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesArrayPropsObjectItems:ActionUserPropertiesArrayPropsObjectItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "The default of the items\n"
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesArrayPropsStringItems:ActionUserPropertiesArrayPropsStringItems": {
            "properties": {
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint identifier the property relates to\n"
                },
                "dataset": {
                    "type": "string",
                    "description": "The dataset of an the entity-format items\n"
                },
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The default of the items\n"
                },
                "enumJqQuery": {
                    "type": "string",
                    "description": "The enum jq query of the string items\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The enum of the items\n"
                },
                "format": {
                    "type": "string",
                    "description": "The format of the items\n"
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesBooleanProps:ActionUserPropertiesBooleanProps": {
            "properties": {
                "default": {
                    "type": "boolean",
                    "description": "The default of the boolean property\n"
                },
                "defaultJqQuery": {
                    "type": "string",
                    "description": "The default jq query of the boolean property\n"
                },
                "dependsOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The properties that this property depends on\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the property\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required, by default not required, this property can't be set at the same time if `required_jq_query` is set, and only supports true as value\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the property\n"
                },
                "visible": {
                    "type": "boolean",
                    "description": "The visibility of the boolean property\n"
                },
                "visibleJqQuery": {
                    "type": "string",
                    "description": "The visibility condition jq query of the boolean property\n"
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesNumberProps:ActionUserPropertiesNumberProps": {
            "properties": {
                "default": {
                    "type": "number",
                    "description": "The default of the number property\n"
                },
                "defaultJqQuery": {
                    "type": "string",
                    "description": "The default jq query of the number property\n"
                },
                "dependsOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The properties that this property depends on\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property\n"
                },
                "enumJqQuery": {
                    "type": "string",
                    "description": "The enum jq query of the string property\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "The enum of the number property\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the property\n"
                },
                "maximum": {
                    "type": "number",
                    "description": "The min of the number property\n"
                },
                "minimum": {
                    "type": "number",
                    "description": "The max of the number property\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required, by default not required, this property can't be set at the same time if `required_jq_query` is set, and only supports true as value\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the property\n"
                },
                "visible": {
                    "type": "boolean",
                    "description": "The visibility of the number property\n"
                },
                "visibleJqQuery": {
                    "type": "string",
                    "description": "The visibility condition jq query of the number property\n"
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesObjectProps:ActionUserPropertiesObjectProps": {
            "properties": {
                "default": {
                    "type": "string",
                    "description": "The default of the object property\n"
                },
                "defaultJqQuery": {
                    "type": "string",
                    "description": "The default jq query of the object property\n"
                },
                "dependsOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The properties that this property depends on\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property\n"
                },
                "encryption": {
                    "type": "string",
                    "description": "The algorithm to encrypt the property with\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the property\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required, by default not required, this property can't be set at the same time if `required_jq_query` is set, and only supports true as value\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the property\n"
                },
                "visible": {
                    "type": "boolean",
                    "description": "The visibility of the object property\n"
                },
                "visibleJqQuery": {
                    "type": "string",
                    "description": "The visibility condition jq query of the object property\n"
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesStringProps:ActionUserPropertiesStringProps": {
            "properties": {
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint identifier the string property relates to\n"
                },
                "dataset": {
                    "$ref": "#/types/port:index/ActionUserPropertiesStringPropsDataset:ActionUserPropertiesStringPropsDataset",
                    "description": "The dataset of an the entity-format property\n"
                },
                "default": {
                    "type": "string",
                    "description": "The default of the string property\n"
                },
                "defaultJqQuery": {
                    "type": "string",
                    "description": "The default jq query of the string property\n"
                },
                "dependsOns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The properties that this property depends on\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property\n"
                },
                "encryption": {
                    "type": "string",
                    "description": "The algorithm to encrypt the property with\n"
                },
                "enumJqQuery": {
                    "type": "string",
                    "description": "The enum jq query of the string property\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The enum of the string property\n"
                },
                "format": {
                    "type": "string",
                    "description": "The format of the string property\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the property\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The max length of the string property\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The min length of the string property\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The pattern of the string property\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required, by default not required, this property can't be set at the same time if `required_jq_query` is set, and only supports true as value\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the property\n"
                },
                "visible": {
                    "type": "boolean",
                    "description": "The visibility of the string property\n"
                },
                "visibleJqQuery": {
                    "type": "string",
                    "description": "The visibility condition jq query of the string property\n"
                }
            },
            "type": "object"
        },
        "port:index/ActionUserPropertiesStringPropsDataset:ActionUserPropertiesStringPropsDataset": {
            "properties": {
                "combinator": {
                    "type": "string",
                    "description": "The combinator of the dataset\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/ActionUserPropertiesStringPropsDatasetRule:ActionUserPropertiesStringPropsDatasetRule"
                    },
                    "description": "The rules of the dataset\n"
                }
            },
            "type": "object",
            "required": [
                "combinator",
                "rules"
            ]
        },
        "port:index/ActionUserPropertiesStringPropsDatasetRule:ActionUserPropertiesStringPropsDatasetRule": {
            "properties": {
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint identifier of the rule\n"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator of the rule\n"
                },
                "property": {
                    "type": "string",
                    "description": "The property identifier of the rule\n"
                },
                "value": {
                    "$ref": "#/types/port:index/ActionUserPropertiesStringPropsDatasetRuleValue:ActionUserPropertiesStringPropsDatasetRuleValue",
                    "description": "The value of the rule\n"
                }
            },
            "type": "object",
            "required": [
                "operator",
                "value"
            ]
        },
        "port:index/ActionUserPropertiesStringPropsDatasetRuleValue:ActionUserPropertiesStringPropsDatasetRuleValue": {
            "properties": {
                "jqQuery": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "jqQuery"
            ]
        },
        "port:index/ActionWebhookMethod:ActionWebhookMethod": {
            "properties": {
                "agent": {
                    "type": "boolean",
                    "description": "Use the agent to invoke the action\n"
                },
                "method": {
                    "type": "string",
                    "description": "The HTTP method to invoke the action\n"
                },
                "synchronized": {
                    "type": "boolean",
                    "description": "Synchronize the action\n"
                },
                "url": {
                    "type": "string",
                    "description": "Required when selecting type WEBHOOK. The URL to invoke the action\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "port:index/AggregationPropertiesProperties:AggregationPropertiesProperties": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The description of the aggregation property\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the aggregation property\n"
                },
                "method": {
                    "$ref": "#/types/port:index/AggregationPropertiesPropertiesMethod:AggregationPropertiesPropertiesMethod",
                    "description": "The aggregation method to perform on the target blueprint, one of count_entities, average_entities, average_by_property, aggregate_by_property\n"
                },
                "query": {
                    "type": "string",
                    "description": "Query to filter the target entities\n"
                },
                "targetBlueprintIdentifier": {
                    "type": "string",
                    "description": "The identifier of the blueprint to perform the aggregation on\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the aggregation property\n"
                }
            },
            "type": "object",
            "required": [
                "method",
                "targetBlueprintIdentifier"
            ]
        },
        "port:index/AggregationPropertiesPropertiesMethod:AggregationPropertiesPropertiesMethod": {
            "properties": {
                "aggregateByProperty": {
                    "$ref": "#/types/port:index/AggregationPropertiesPropertiesMethodAggregateByProperty:AggregationPropertiesPropertiesMethodAggregateByProperty",
                    "description": "Function to calculate the aggregate by property value of the target entities, such as sum, min, max, median\n"
                },
                "averageByProperty": {
                    "$ref": "#/types/port:index/AggregationPropertiesPropertiesMethodAverageByProperty:AggregationPropertiesPropertiesMethodAverageByProperty",
                    "description": "Function to calculate the average by property value of the target entities\n"
                },
                "averageEntities": {
                    "$ref": "#/types/port:index/AggregationPropertiesPropertiesMethodAverageEntities:AggregationPropertiesPropertiesMethodAverageEntities",
                    "description": "Function to average the entities of the target entities\n"
                },
                "countEntities": {
                    "type": "boolean",
                    "description": "Function to count the entities of the target entities\n"
                }
            },
            "type": "object"
        },
        "port:index/AggregationPropertiesPropertiesMethodAggregateByProperty:AggregationPropertiesPropertiesMethodAggregateByProperty": {
            "properties": {
                "func": {
                    "type": "string",
                    "description": "The func of the aggregate by property\n"
                },
                "property": {
                    "type": "string",
                    "description": "The property of the aggregate by property\n"
                }
            },
            "type": "object",
            "required": [
                "func",
                "property"
            ]
        },
        "port:index/AggregationPropertiesPropertiesMethodAverageByProperty:AggregationPropertiesPropertiesMethodAverageByProperty": {
            "properties": {
                "averageOf": {
                    "type": "string",
                    "description": "The time periods to calculate the average by, e.g. hour, day, week, month\n"
                },
                "measureTimeBy": {
                    "type": "string",
                    "description": "The property name on which to calculate the the time periods, e.g. $createdAt, $updated_at or any other date property\n"
                },
                "property": {
                    "type": "string",
                    "description": "The property name on which to calculate the average by\n"
                }
            },
            "type": "object",
            "required": [
                "averageOf",
                "measureTimeBy",
                "property"
            ]
        },
        "port:index/AggregationPropertiesPropertiesMethodAverageEntities:AggregationPropertiesPropertiesMethodAverageEntities": {
            "properties": {
                "averageOf": {
                    "type": "string",
                    "description": "The time periods to calculate the average of, e.g. hour, day, week, month\n"
                },
                "measureTimeBy": {
                    "type": "string",
                    "description": "The property name on which to calculate the the time periods, e.g. $createdAt, $updated_at or any other date property\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "averageOf",
                        "measureTimeBy"
                    ]
                }
            }
        },
        "port:index/BlueprintCalculationProperties:BlueprintCalculationProperties": {
            "properties": {
                "calculation": {
                    "type": "string",
                    "description": "The calculation of the calculation property\n"
                },
                "colorized": {
                    "type": "boolean",
                    "description": "The colorized of the calculation property\n"
                },
                "colors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The colors of the calculation property\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the calculation property\n"
                },
                "format": {
                    "type": "string",
                    "description": "The format of the calculation property\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the calculation property\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the calculation property\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the calculation property\n"
                }
            },
            "type": "object",
            "required": [
                "calculation",
                "type"
            ]
        },
        "port:index/BlueprintKafkaChangelogDestination:BlueprintKafkaChangelogDestination": {
            "type": "object"
        },
        "port:index/BlueprintMirrorProperties:BlueprintMirrorProperties": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "The path of the mirror property\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the mirror property\n"
                }
            },
            "type": "object",
            "required": [
                "path"
            ]
        },
        "port:index/BlueprintPermissionsEntities:BlueprintPermissionsEntities": {
            "properties": {
                "register": {
                    "$ref": "#/types/port:index/BlueprintPermissionsEntitiesRegister:BlueprintPermissionsEntitiesRegister",
                    "description": "Manage permissions to register entities of the blueprint\n"
                },
                "unregister": {
                    "$ref": "#/types/port:index/BlueprintPermissionsEntitiesUnregister:BlueprintPermissionsEntitiesUnregister",
                    "description": "Manage permissions to unregister entities of the blueprint\n"
                },
                "update": {
                    "$ref": "#/types/port:index/BlueprintPermissionsEntitiesUpdate:BlueprintPermissionsEntitiesUpdate",
                    "description": "Manage permissions to update entities of the blueprint\n"
                },
                "updateMetadataProperties": {
                    "$ref": "#/types/port:index/BlueprintPermissionsEntitiesUpdateMetadataProperties:BlueprintPermissionsEntitiesUpdateMetadataProperties"
                },
                "updateProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintPermissionsEntitiesUpdateProperties:BlueprintPermissionsEntitiesUpdateProperties"
                    },
                    "description": "Manage permissions to update the entity properties\n"
                },
                "updateRelations": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintPermissionsEntitiesUpdateRelations:BlueprintPermissionsEntitiesUpdateRelations"
                    },
                    "description": "Manage permissions to update the entity relations\n"
                }
            },
            "type": "object",
            "required": [
                "register",
                "unregister",
                "update",
                "updateMetadataProperties"
            ]
        },
        "port:index/BlueprintPermissionsEntitiesRegister:BlueprintPermissionsEntitiesRegister": {
            "properties": {
                "ownedByTeam": {
                    "type": "boolean",
                    "description": "Owned by team\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles with register permissions\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Teams with register permissions\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Users with register permissions\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ownedByTeam"
                    ]
                }
            }
        },
        "port:index/BlueprintPermissionsEntitiesUnregister:BlueprintPermissionsEntitiesUnregister": {
            "properties": {
                "ownedByTeam": {
                    "type": "boolean",
                    "description": "Owned by team\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles with unregister permissions\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Teams with unregister permissions\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Users with unregister permissions\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ownedByTeam"
                    ]
                }
            }
        },
        "port:index/BlueprintPermissionsEntitiesUpdate:BlueprintPermissionsEntitiesUpdate": {
            "properties": {
                "ownedByTeam": {
                    "type": "boolean",
                    "description": "Owned by team\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles with update permissions\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Teams with update permissions\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Users with update permissions\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ownedByTeam"
                    ]
                }
            }
        },
        "port:index/BlueprintPermissionsEntitiesUpdateMetadataProperties:BlueprintPermissionsEntitiesUpdateMetadataProperties": {
            "properties": {
                "icon": {
                    "$ref": "#/types/port:index/BlueprintPermissionsEntitiesUpdateMetadataPropertiesIcon:BlueprintPermissionsEntitiesUpdateMetadataPropertiesIcon",
                    "description": "The entity's icon\n"
                },
                "identifier": {
                    "$ref": "#/types/port:index/BlueprintPermissionsEntitiesUpdateMetadataPropertiesIdentifier:BlueprintPermissionsEntitiesUpdateMetadataPropertiesIdentifier",
                    "description": "Unique Entity identifier, used for API calls, programmatic access and distinguishing between different entities\n"
                },
                "team": {
                    "$ref": "#/types/port:index/BlueprintPermissionsEntitiesUpdateMetadataPropertiesTeam:BlueprintPermissionsEntitiesUpdateMetadataPropertiesTeam",
                    "description": "The team this entity belongs to\n"
                },
                "title": {
                    "$ref": "#/types/port:index/BlueprintPermissionsEntitiesUpdateMetadataPropertiesTitle:BlueprintPermissionsEntitiesUpdateMetadataPropertiesTitle",
                    "description": "A human-readable name for the entity\n"
                }
            },
            "type": "object",
            "required": [
                "icon",
                "identifier",
                "team",
                "title"
            ]
        },
        "port:index/BlueprintPermissionsEntitiesUpdateMetadataPropertiesIcon:BlueprintPermissionsEntitiesUpdateMetadataPropertiesIcon": {
            "properties": {
                "ownedByTeam": {
                    "type": "boolean",
                    "description": "Owned by team\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles with update $icon metadata permissions\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Teams with update $icon metadata permissions\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Users with update $icon metadata permissions\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ownedByTeam"
                    ]
                }
            }
        },
        "port:index/BlueprintPermissionsEntitiesUpdateMetadataPropertiesIdentifier:BlueprintPermissionsEntitiesUpdateMetadataPropertiesIdentifier": {
            "properties": {
                "ownedByTeam": {
                    "type": "boolean",
                    "description": "Owned by team\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles with update $identifier metadata permissions\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Teams with update $identifier metadata permissions\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Users with update $identifier metadata permissions\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ownedByTeam"
                    ]
                }
            }
        },
        "port:index/BlueprintPermissionsEntitiesUpdateMetadataPropertiesTeam:BlueprintPermissionsEntitiesUpdateMetadataPropertiesTeam": {
            "properties": {
                "ownedByTeam": {
                    "type": "boolean",
                    "description": "Owned by team\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles with update $team metadata permissions\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Teams with update $team metadata permissions\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Users with update $team metadata permissions\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ownedByTeam"
                    ]
                }
            }
        },
        "port:index/BlueprintPermissionsEntitiesUpdateMetadataPropertiesTitle:BlueprintPermissionsEntitiesUpdateMetadataPropertiesTitle": {
            "properties": {
                "ownedByTeam": {
                    "type": "boolean",
                    "description": "Owned by team\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles with update $title metadata permissions\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Teams with update $title metadata permissions\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Users with update $title metadata permissions\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ownedByTeam"
                    ]
                }
            }
        },
        "port:index/BlueprintPermissionsEntitiesUpdateProperties:BlueprintPermissionsEntitiesUpdateProperties": {
            "properties": {
                "ownedByTeam": {
                    "type": "boolean",
                    "description": "Owned by team\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles with update specific property permissions\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Teams with update specific property permissions\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Users with update specific property permissions\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ownedByTeam"
                    ]
                }
            }
        },
        "port:index/BlueprintPermissionsEntitiesUpdateRelations:BlueprintPermissionsEntitiesUpdateRelations": {
            "properties": {
                "ownedByTeam": {
                    "type": "boolean",
                    "description": "Owned by team\n"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Roles with update specific relation permissions\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Teams with update specific relation permissions\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Users with update specific relation permissions\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "ownedByTeam"
                    ]
                }
            }
        },
        "port:index/BlueprintProperties:BlueprintProperties": {
            "properties": {
                "arrayProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintPropertiesArrayProps:BlueprintPropertiesArrayProps"
                    },
                    "description": "The array property of the blueprint\n"
                },
                "booleanProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintPropertiesBooleanProps:BlueprintPropertiesBooleanProps"
                    },
                    "description": "The boolean property of the blueprint\n"
                },
                "numberProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintPropertiesNumberProps:BlueprintPropertiesNumberProps"
                    },
                    "description": "The number property of the blueprint\n"
                },
                "objectProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintPropertiesObjectProps:BlueprintPropertiesObjectProps"
                    },
                    "description": "The object property of the blueprint\n"
                },
                "stringProps": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintPropertiesStringProps:BlueprintPropertiesStringProps"
                    },
                    "description": "The string property of the blueprint\n"
                }
            },
            "type": "object"
        },
        "port:index/BlueprintPropertiesArrayProps:BlueprintPropertiesArrayProps": {
            "properties": {
                "booleanItems": {
                    "$ref": "#/types/port:index/BlueprintPropertiesArrayPropsBooleanItems:BlueprintPropertiesArrayPropsBooleanItems",
                    "description": "The items of the array property\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the property\n"
                },
                "maxItems": {
                    "type": "integer",
                    "description": "The max items of the array property\n"
                },
                "minItems": {
                    "type": "integer",
                    "description": "The min items of the array property\n"
                },
                "numberItems": {
                    "$ref": "#/types/port:index/BlueprintPropertiesArrayPropsNumberItems:BlueprintPropertiesArrayPropsNumberItems",
                    "description": "The items of the array property\n"
                },
                "objectItems": {
                    "$ref": "#/types/port:index/BlueprintPropertiesArrayPropsObjectItems:BlueprintPropertiesArrayPropsObjectItems",
                    "description": "The items of the array property\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required\n"
                },
                "stringItems": {
                    "$ref": "#/types/port:index/BlueprintPropertiesArrayPropsStringItems:BlueprintPropertiesArrayPropsStringItems",
                    "description": "The items of the array property\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the property\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/BlueprintPropertiesArrayPropsBooleanItems:BlueprintPropertiesArrayPropsBooleanItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "boolean"
                    },
                    "description": "The default of the items\n"
                }
            },
            "type": "object"
        },
        "port:index/BlueprintPropertiesArrayPropsNumberItems:BlueprintPropertiesArrayPropsNumberItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "The default of the items\n"
                }
            },
            "type": "object"
        },
        "port:index/BlueprintPropertiesArrayPropsObjectItems:BlueprintPropertiesArrayPropsObjectItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The default of the items\n"
                }
            },
            "type": "object"
        },
        "port:index/BlueprintPropertiesArrayPropsStringItems:BlueprintPropertiesArrayPropsStringItems": {
            "properties": {
                "defaults": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The default of the items\n"
                },
                "format": {
                    "type": "string",
                    "description": "The format of the items\n"
                }
            },
            "type": "object"
        },
        "port:index/BlueprintPropertiesBooleanProps:BlueprintPropertiesBooleanProps": {
            "properties": {
                "default": {
                    "type": "boolean",
                    "description": "The default of the boolean property\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the property\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the property\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/BlueprintPropertiesNumberProps:BlueprintPropertiesNumberProps": {
            "properties": {
                "default": {
                    "type": "number",
                    "description": "The default of the number property\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property\n"
                },
                "enumColors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The enum colors of the number property\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    },
                    "description": "The enum of the number property\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the property\n"
                },
                "maximum": {
                    "type": "number",
                    "description": "The min of the number property\n"
                },
                "minimum": {
                    "type": "number",
                    "description": "The max of the number property\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the property\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/BlueprintPropertiesObjectProps:BlueprintPropertiesObjectProps": {
            "properties": {
                "default": {
                    "type": "string",
                    "description": "The default of the object property\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the property\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required\n"
                },
                "spec": {
                    "type": "string",
                    "description": "The spec of the object property\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the property\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/BlueprintPropertiesStringProps:BlueprintPropertiesStringProps": {
            "properties": {
                "default": {
                    "type": "string",
                    "description": "The default of the string property\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property\n"
                },
                "enumColors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The enum colors of the string property\n"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The enum of the string property\n"
                },
                "format": {
                    "type": "string",
                    "description": "The format of the string property\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the property\n"
                },
                "maxLength": {
                    "type": "integer",
                    "description": "The max length of the string property\n"
                },
                "minLength": {
                    "type": "integer",
                    "description": "The min length of the string property\n"
                },
                "pattern": {
                    "type": "string",
                    "description": "The pattern of the string property\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "Whether the property is required\n"
                },
                "spec": {
                    "type": "string",
                    "description": "The spec of the string property\n"
                },
                "specAuthentication": {
                    "$ref": "#/types/port:index/BlueprintPropertiesStringPropsSpecAuthentication:BlueprintPropertiesStringPropsSpecAuthentication",
                    "description": "The spec authentication of the string property\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the property\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "required"
                    ]
                }
            }
        },
        "port:index/BlueprintPropertiesStringPropsSpecAuthentication:BlueprintPropertiesStringPropsSpecAuthentication": {
            "properties": {
                "authorizationUrl": {
                    "type": "string",
                    "description": "The authorizationUrl of the spec authentication\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The clientId of the spec authentication\n"
                },
                "tokenUrl": {
                    "type": "string",
                    "description": "The tokenUrl of the spec authentication\n"
                }
            },
            "type": "object",
            "required": [
                "authorizationUrl",
                "clientId",
                "tokenUrl"
            ]
        },
        "port:index/BlueprintRelations:BlueprintRelations": {
            "properties": {
                "many": {
                    "type": "boolean",
                    "description": "The many of the relation\n"
                },
                "required": {
                    "type": "boolean",
                    "description": "The required of the relation\n"
                },
                "target": {
                    "type": "string",
                    "description": "The target of the relation\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the relation\n"
                }
            },
            "type": "object",
            "required": [
                "target"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "many",
                        "required",
                        "target"
                    ]
                }
            }
        },
        "port:index/BlueprintTeamInheritance:BlueprintTeamInheritance": {
            "properties": {
                "path": {
                    "type": "string",
                    "description": "The path of the team inheritance\n"
                }
            },
            "type": "object",
            "required": [
                "path"
            ]
        },
        "port:index/BlueprintWebhookChangelogDestination:BlueprintWebhookChangelogDestination": {
            "properties": {
                "agent": {
                    "type": "boolean",
                    "description": "The agent of the webhook changelog destination\n"
                },
                "url": {
                    "type": "string",
                    "description": "The url of the webhook changelog destination\n"
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "port:index/EntityProperties:EntityProperties": {
            "properties": {
                "arrayProps": {
                    "$ref": "#/types/port:index/EntityPropertiesArrayProps:EntityPropertiesArrayProps",
                    "description": "The array properties of the entity\n"
                },
                "booleanProps": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "boolean"
                    },
                    "description": "The bool properties of the entity\n"
                },
                "numberProps": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "description": "The number properties of the entity\n"
                },
                "objectProps": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The object properties of the entity\n"
                },
                "stringProps": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The string properties of the entity\n"
                }
            },
            "type": "object"
        },
        "port:index/EntityPropertiesArrayProps:EntityPropertiesArrayProps": {
            "properties": {
                "booleanItems": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "boolean"
                        }
                    }
                },
                "numberItems": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "objectItems": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "stringItems": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "type": "object"
        },
        "port:index/EntityRelations:EntityRelations": {
            "properties": {
                "manyRelations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "description": "The many relation of the entity\n"
                },
                "singleRelations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The single relation of the entity\n"
                }
            },
            "type": "object"
        },
        "port:index/PagePermissionsRead:PagePermissionsRead": {
            "properties": {
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The roles with read permission\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The teams with read permission\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The users with read permission\n"
                }
            },
            "type": "object"
        },
        "port:index/ScorecardRule:ScorecardRule": {
            "properties": {
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the rule\n"
                },
                "level": {
                    "type": "string",
                    "description": "The level of the rule\n"
                },
                "query": {
                    "$ref": "#/types/port:index/ScorecardRuleQuery:ScorecardRuleQuery",
                    "description": "The query of the rule\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the rule\n"
                }
            },
            "type": "object",
            "required": [
                "identifier",
                "level",
                "query",
                "title"
            ]
        },
        "port:index/ScorecardRuleQuery:ScorecardRuleQuery": {
            "properties": {
                "combinator": {
                    "type": "string",
                    "description": "The combinator of the query\n"
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The conditions of the query. Each condition object should be encoded to a string\n"
                }
            },
            "type": "object",
            "required": [
                "combinator",
                "conditions"
            ]
        },
        "port:index/WebhookMapping:WebhookMapping": {
            "properties": {
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint of the mapping\n"
                },
                "entity": {
                    "$ref": "#/types/port:index/WebhookMappingEntity:WebhookMappingEntity",
                    "description": "The entity of the mapping\n"
                },
                "filter": {
                    "type": "string",
                    "description": "The filter of the mapping\n"
                },
                "itemsToParse": {
                    "type": "string",
                    "description": "The items to parser of the mapping\n"
                }
            },
            "type": "object",
            "required": [
                "blueprint",
                "entity"
            ]
        },
        "port:index/WebhookMappingEntity:WebhookMappingEntity": {
            "properties": {
                "icon": {
                    "type": "string",
                    "description": "The icon of the entity\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the entity\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The properties of the entity\n"
                },
                "relations": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The relations of the entity\n"
                },
                "team": {
                    "type": "string",
                    "description": "The team of the entity\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the entity\n"
                }
            },
            "type": "object",
            "required": [
                "identifier"
            ]
        },
        "port:index/WebhookSecurity:WebhookSecurity": {
            "properties": {
                "requestIdentifierPath": {
                    "type": "string",
                    "description": "The request identifier path of the webhook\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The secret of the webhook\n"
                },
                "signatureAlgorithm": {
                    "type": "string",
                    "description": "The signature algorithm of the webhook\n"
                },
                "signatureHeaderName": {
                    "type": "string",
                    "description": "The signature header name of the webhook\n"
                },
                "signaturePrefix": {
                    "type": "string",
                    "description": "The signature prefix of the webhook\n"
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the port package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "baseUrl": {
                "type": "string"
            },
            "clientId": {
                "type": "string",
                "description": "Client ID for Port-labs\n"
            },
            "secret": {
                "type": "string",
                "description": "Client Secret for Port-labs\n",
                "secret": true
            },
            "token": {
                "type": "string",
                "description": "Token for Port-labs\n",
                "secret": true
            }
        },
        "inputProperties": {
            "baseUrl": {
                "type": "string"
            },
            "clientId": {
                "type": "string",
                "description": "Client ID for Port-labs\n"
            },
            "secret": {
                "type": "string",
                "description": "Client Secret for Port-labs\n",
                "secret": true
            },
            "token": {
                "type": "string",
                "description": "Token for Port-labs\n",
                "secret": true
            }
        }
    },
    "resources": {
        "port:index/action:Action": {
            "properties": {
                "approvalEmailNotification": {
                    "$ref": "#/types/port:index/ActionApprovalEmailNotification:ActionApprovalEmailNotification",
                    "description": "The email notification of the approval\n"
                },
                "approvalWebhookNotification": {
                    "$ref": "#/types/port:index/ActionApprovalWebhookNotification:ActionApprovalWebhookNotification",
                    "description": "The webhook notification of the approval\n"
                },
                "azureMethod": {
                    "$ref": "#/types/port:index/ActionAzureMethod:ActionAzureMethod",
                    "description": "The invocation method of the action\n"
                },
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint identifier the action relates to\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "githubMethod": {
                    "$ref": "#/types/port:index/ActionGithubMethod:ActionGithubMethod",
                    "description": "The invocation method of the action\n"
                },
                "gitlabMethod": {
                    "$ref": "#/types/port:index/ActionGitlabMethod:ActionGitlabMethod",
                    "description": "The invocation method of the action\n"
                },
                "icon": {
                    "type": "string",
                    "description": "Icon\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier\n"
                },
                "kafkaMethod": {
                    "$ref": "#/types/port:index/ActionKafkaMethod:ActionKafkaMethod",
                    "description": "The invocation method of the action\n"
                },
                "orderProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Order properties\n"
                },
                "requiredApproval": {
                    "type": "boolean",
                    "description": "Require approval before invoking the action\n"
                },
                "requiredJqQuery": {
                    "type": "string",
                    "description": "The required jq query of the property\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "The trigger type of the action\n"
                },
                "userProperties": {
                    "$ref": "#/types/port:index/ActionUserProperties:ActionUserProperties",
                    "description": "User properties\n"
                },
                "webhookMethod": {
                    "$ref": "#/types/port:index/ActionWebhookMethod:ActionWebhookMethod",
                    "description": "The invocation method of the action\n"
                }
            },
            "required": [
                "blueprint",
                "identifier",
                "title",
                "trigger"
            ],
            "inputProperties": {
                "approvalEmailNotification": {
                    "$ref": "#/types/port:index/ActionApprovalEmailNotification:ActionApprovalEmailNotification",
                    "description": "The email notification of the approval\n"
                },
                "approvalWebhookNotification": {
                    "$ref": "#/types/port:index/ActionApprovalWebhookNotification:ActionApprovalWebhookNotification",
                    "description": "The webhook notification of the approval\n"
                },
                "azureMethod": {
                    "$ref": "#/types/port:index/ActionAzureMethod:ActionAzureMethod",
                    "description": "The invocation method of the action\n"
                },
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint identifier the action relates to\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description\n"
                },
                "githubMethod": {
                    "$ref": "#/types/port:index/ActionGithubMethod:ActionGithubMethod",
                    "description": "The invocation method of the action\n"
                },
                "gitlabMethod": {
                    "$ref": "#/types/port:index/ActionGitlabMethod:ActionGitlabMethod",
                    "description": "The invocation method of the action\n"
                },
                "icon": {
                    "type": "string",
                    "description": "Icon\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "Identifier\n"
                },
                "kafkaMethod": {
                    "$ref": "#/types/port:index/ActionKafkaMethod:ActionKafkaMethod",
                    "description": "The invocation method of the action\n"
                },
                "orderProperties": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Order properties\n"
                },
                "requiredApproval": {
                    "type": "boolean",
                    "description": "Require approval before invoking the action\n"
                },
                "requiredJqQuery": {
                    "type": "string",
                    "description": "The required jq query of the property\n"
                },
                "title": {
                    "type": "string",
                    "description": "Title\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "The trigger type of the action\n"
                },
                "userProperties": {
                    "$ref": "#/types/port:index/ActionUserProperties:ActionUserProperties",
                    "description": "User properties\n"
                },
                "webhookMethod": {
                    "$ref": "#/types/port:index/ActionWebhookMethod:ActionWebhookMethod",
                    "description": "The invocation method of the action\n"
                }
            },
            "requiredInputs": [
                "blueprint",
                "identifier",
                "title",
                "trigger"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Action resources.\n",
                "properties": {
                    "approvalEmailNotification": {
                        "$ref": "#/types/port:index/ActionApprovalEmailNotification:ActionApprovalEmailNotification",
                        "description": "The email notification of the approval\n"
                    },
                    "approvalWebhookNotification": {
                        "$ref": "#/types/port:index/ActionApprovalWebhookNotification:ActionApprovalWebhookNotification",
                        "description": "The webhook notification of the approval\n"
                    },
                    "azureMethod": {
                        "$ref": "#/types/port:index/ActionAzureMethod:ActionAzureMethod",
                        "description": "The invocation method of the action\n"
                    },
                    "blueprint": {
                        "type": "string",
                        "description": "The blueprint identifier the action relates to\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description\n"
                    },
                    "githubMethod": {
                        "$ref": "#/types/port:index/ActionGithubMethod:ActionGithubMethod",
                        "description": "The invocation method of the action\n"
                    },
                    "gitlabMethod": {
                        "$ref": "#/types/port:index/ActionGitlabMethod:ActionGitlabMethod",
                        "description": "The invocation method of the action\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "Icon\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "Identifier\n"
                    },
                    "kafkaMethod": {
                        "$ref": "#/types/port:index/ActionKafkaMethod:ActionKafkaMethod",
                        "description": "The invocation method of the action\n"
                    },
                    "orderProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Order properties\n"
                    },
                    "requiredApproval": {
                        "type": "boolean",
                        "description": "Require approval before invoking the action\n"
                    },
                    "requiredJqQuery": {
                        "type": "string",
                        "description": "The required jq query of the property\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title\n"
                    },
                    "trigger": {
                        "type": "string",
                        "description": "The trigger type of the action\n"
                    },
                    "userProperties": {
                        "$ref": "#/types/port:index/ActionUserProperties:ActionUserProperties",
                        "description": "User properties\n"
                    },
                    "webhookMethod": {
                        "$ref": "#/types/port:index/ActionWebhookMethod:ActionWebhookMethod",
                        "description": "The invocation method of the action\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/actionPermissions:ActionPermissions": {
            "properties": {
                "actionIdentifier": {
                    "type": "string",
                    "description": "The ID of the action\n"
                },
                "blueprintIdentifier": {
                    "type": "string",
                    "description": "The ID of the blueprint\n"
                },
                "permissions": {
                    "$ref": "#/types/port:index/ActionPermissionsPermissions:ActionPermissionsPermissions",
                    "description": "The permissions for the action\n"
                }
            },
            "required": [
                "actionIdentifier",
                "blueprintIdentifier",
                "permissions"
            ],
            "inputProperties": {
                "actionIdentifier": {
                    "type": "string",
                    "description": "The ID of the action\n"
                },
                "blueprintIdentifier": {
                    "type": "string",
                    "description": "The ID of the blueprint\n"
                },
                "permissions": {
                    "$ref": "#/types/port:index/ActionPermissionsPermissions:ActionPermissionsPermissions",
                    "description": "The permissions for the action\n"
                }
            },
            "requiredInputs": [
                "actionIdentifier",
                "blueprintIdentifier",
                "permissions"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ActionPermissions resources.\n",
                "properties": {
                    "actionIdentifier": {
                        "type": "string",
                        "description": "The ID of the action\n"
                    },
                    "blueprintIdentifier": {
                        "type": "string",
                        "description": "The ID of the blueprint\n"
                    },
                    "permissions": {
                        "$ref": "#/types/port:index/ActionPermissionsPermissions:ActionPermissionsPermissions",
                        "description": "The permissions for the action\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/aggregationProperties:AggregationProperties": {
            "properties": {
                "blueprintIdentifier": {
                    "type": "string",
                    "description": "The identifier of the blueprint the aggregation property will be added to\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/AggregationPropertiesProperties:AggregationPropertiesProperties"
                    },
                    "description": "The aggregation property of the blueprint\n"
                }
            },
            "required": [
                "blueprintIdentifier",
                "properties"
            ],
            "inputProperties": {
                "blueprintIdentifier": {
                    "type": "string",
                    "description": "The identifier of the blueprint the aggregation property will be added to\n"
                },
                "properties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/AggregationPropertiesProperties:AggregationPropertiesProperties"
                    },
                    "description": "The aggregation property of the blueprint\n"
                }
            },
            "requiredInputs": [
                "blueprintIdentifier",
                "properties"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AggregationProperties resources.\n",
                "properties": {
                    "blueprintIdentifier": {
                        "type": "string",
                        "description": "The identifier of the blueprint the aggregation property will be added to\n"
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/port:index/AggregationPropertiesProperties:AggregationPropertiesProperties"
                        },
                        "description": "The aggregation property of the blueprint\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/blueprint:Blueprint": {
            "properties": {
                "calculationProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintCalculationProperties:BlueprintCalculationProperties"
                    },
                    "description": "The calculation properties of the blueprint\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the blueprint\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The creator of the blueprint\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the blueprint\n"
                },
                "forceDeleteEntities": {
                    "type": "boolean",
                    "description": "If set to true, the blueprint will be deleted with all its entities, even if they are not managed by Terraform\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the blueprint\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the blueprint\n"
                },
                "kafkaChangelogDestination": {
                    "$ref": "#/types/port:index/BlueprintKafkaChangelogDestination:BlueprintKafkaChangelogDestination",
                    "description": "The changelog destination of the blueprint\n"
                },
                "mirrorProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintMirrorProperties:BlueprintMirrorProperties"
                    },
                    "description": "The mirror properties of the blueprint\n"
                },
                "properties": {
                    "$ref": "#/types/port:index/BlueprintProperties:BlueprintProperties",
                    "description": "The properties of the blueprint\n"
                },
                "relations": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintRelations:BlueprintRelations"
                    },
                    "description": "The relations of the blueprint\n"
                },
                "teamInheritance": {
                    "$ref": "#/types/port:index/BlueprintTeamInheritance:BlueprintTeamInheritance",
                    "description": "The team inheritance of the blueprint\n"
                },
                "title": {
                    "type": "string",
                    "description": "The display name of the blueprint\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The last update date of the blueprint\n"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "The last updater of the blueprint\n"
                },
                "webhookChangelogDestination": {
                    "$ref": "#/types/port:index/BlueprintWebhookChangelogDestination:BlueprintWebhookChangelogDestination",
                    "description": "The webhook changelog destination of the blueprint\n"
                }
            },
            "required": [
                "createdAt",
                "createdBy",
                "forceDeleteEntities",
                "identifier",
                "title",
                "updatedAt",
                "updatedBy"
            ],
            "inputProperties": {
                "calculationProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintCalculationProperties:BlueprintCalculationProperties"
                    },
                    "description": "The calculation properties of the blueprint\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the blueprint\n"
                },
                "forceDeleteEntities": {
                    "type": "boolean",
                    "description": "If set to true, the blueprint will be deleted with all its entities, even if they are not managed by Terraform\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the blueprint\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the blueprint\n"
                },
                "kafkaChangelogDestination": {
                    "$ref": "#/types/port:index/BlueprintKafkaChangelogDestination:BlueprintKafkaChangelogDestination",
                    "description": "The changelog destination of the blueprint\n"
                },
                "mirrorProperties": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintMirrorProperties:BlueprintMirrorProperties"
                    },
                    "description": "The mirror properties of the blueprint\n"
                },
                "properties": {
                    "$ref": "#/types/port:index/BlueprintProperties:BlueprintProperties",
                    "description": "The properties of the blueprint\n"
                },
                "relations": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/port:index/BlueprintRelations:BlueprintRelations"
                    },
                    "description": "The relations of the blueprint\n"
                },
                "teamInheritance": {
                    "$ref": "#/types/port:index/BlueprintTeamInheritance:BlueprintTeamInheritance",
                    "description": "The team inheritance of the blueprint\n"
                },
                "title": {
                    "type": "string",
                    "description": "The display name of the blueprint\n"
                },
                "webhookChangelogDestination": {
                    "$ref": "#/types/port:index/BlueprintWebhookChangelogDestination:BlueprintWebhookChangelogDestination",
                    "description": "The webhook changelog destination of the blueprint\n"
                }
            },
            "requiredInputs": [
                "identifier",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Blueprint resources.\n",
                "properties": {
                    "calculationProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/port:index/BlueprintCalculationProperties:BlueprintCalculationProperties"
                        },
                        "description": "The calculation properties of the blueprint\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation date of the blueprint\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The creator of the blueprint\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the blueprint\n"
                    },
                    "forceDeleteEntities": {
                        "type": "boolean",
                        "description": "If set to true, the blueprint will be deleted with all its entities, even if they are not managed by Terraform\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "The icon of the blueprint\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "The identifier of the blueprint\n"
                    },
                    "kafkaChangelogDestination": {
                        "$ref": "#/types/port:index/BlueprintKafkaChangelogDestination:BlueprintKafkaChangelogDestination",
                        "description": "The changelog destination of the blueprint\n"
                    },
                    "mirrorProperties": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/port:index/BlueprintMirrorProperties:BlueprintMirrorProperties"
                        },
                        "description": "The mirror properties of the blueprint\n"
                    },
                    "properties": {
                        "$ref": "#/types/port:index/BlueprintProperties:BlueprintProperties",
                        "description": "The properties of the blueprint\n"
                    },
                    "relations": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/port:index/BlueprintRelations:BlueprintRelations"
                        },
                        "description": "The relations of the blueprint\n"
                    },
                    "teamInheritance": {
                        "$ref": "#/types/port:index/BlueprintTeamInheritance:BlueprintTeamInheritance",
                        "description": "The team inheritance of the blueprint\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The display name of the blueprint\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last update date of the blueprint\n"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The last updater of the blueprint\n"
                    },
                    "webhookChangelogDestination": {
                        "$ref": "#/types/port:index/BlueprintWebhookChangelogDestination:BlueprintWebhookChangelogDestination",
                        "description": "The webhook changelog destination of the blueprint\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/blueprintPermissions:BlueprintPermissions": {
            "properties": {
                "blueprintIdentifier": {
                    "type": "string"
                },
                "entities": {
                    "$ref": "#/types/port:index/BlueprintPermissionsEntities:BlueprintPermissionsEntities",
                    "description": "Entities permissions to read the blueprint\n"
                }
            },
            "required": [
                "blueprintIdentifier",
                "entities"
            ],
            "inputProperties": {
                "blueprintIdentifier": {
                    "type": "string"
                },
                "entities": {
                    "$ref": "#/types/port:index/BlueprintPermissionsEntities:BlueprintPermissionsEntities",
                    "description": "Entities permissions to read the blueprint\n"
                }
            },
            "requiredInputs": [
                "blueprintIdentifier",
                "entities"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BlueprintPermissions resources.\n",
                "properties": {
                    "blueprintIdentifier": {
                        "type": "string"
                    },
                    "entities": {
                        "$ref": "#/types/port:index/BlueprintPermissionsEntities:BlueprintPermissionsEntities",
                        "description": "Entities permissions to read the blueprint\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/entity:Entity": {
            "properties": {
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint identifier the entity relates to\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the entity\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The creator of the entity\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the entity\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the entity\n"
                },
                "properties": {
                    "$ref": "#/types/port:index/EntityProperties:EntityProperties",
                    "description": "The properties of the entity\n"
                },
                "relations": {
                    "$ref": "#/types/port:index/EntityRelations:EntityRelations",
                    "description": "The relations of the entity\n"
                },
                "runId": {
                    "type": "string",
                    "description": "The runID of the action run that created the entity\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The teams the entity belongs to\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the entity\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The last update date of the entity\n"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "The last updater of the entity\n"
                }
            },
            "required": [
                "blueprint",
                "createdAt",
                "createdBy",
                "identifier",
                "updatedAt",
                "updatedBy"
            ],
            "inputProperties": {
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint identifier the entity relates to\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the entity\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the entity\n"
                },
                "properties": {
                    "$ref": "#/types/port:index/EntityProperties:EntityProperties",
                    "description": "The properties of the entity\n"
                },
                "relations": {
                    "$ref": "#/types/port:index/EntityRelations:EntityRelations",
                    "description": "The relations of the entity\n"
                },
                "runId": {
                    "type": "string",
                    "description": "The runID of the action run that created the entity\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The teams the entity belongs to\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the entity\n"
                }
            },
            "requiredInputs": [
                "blueprint"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Entity resources.\n",
                "properties": {
                    "blueprint": {
                        "type": "string",
                        "description": "The blueprint identifier the entity relates to\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation date of the entity\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The creator of the entity\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "The icon of the entity\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "The identifier of the entity\n"
                    },
                    "properties": {
                        "$ref": "#/types/port:index/EntityProperties:EntityProperties",
                        "description": "The properties of the entity\n"
                    },
                    "relations": {
                        "$ref": "#/types/port:index/EntityRelations:EntityRelations",
                        "description": "The relations of the entity\n"
                    },
                    "runId": {
                        "type": "string",
                        "description": "The runID of the action run that created the entity\n"
                    },
                    "teams": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The teams the entity belongs to\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the entity\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last update date of the entity\n"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The last updater of the entity\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/page:Page": {
            "properties": {
                "after": {
                    "type": "string",
                    "description": "The identifier of the page/folder after which the page should be placed\n"
                },
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint for which the page is created, relevant only for pages of type \"blueprint-entities\"\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the page\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The creator of the page\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the page\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The Identifier of the page\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Whether the page is locked, if true, viewers will not be able to edit the page widgets and filters\n"
                },
                "parent": {
                    "type": "string",
                    "description": "The identifier of the folder in which the page is in, default is the root of the sidebar\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the page\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the page, can be one of \"blueprint-entities\", \"dashboard\" or \"home\"\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The last update date of the page\n"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "The last updater of the page\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The widgets of the page\n"
                }
            },
            "required": [
                "createdAt",
                "createdBy",
                "identifier",
                "type",
                "updatedAt",
                "updatedBy"
            ],
            "inputProperties": {
                "after": {
                    "type": "string",
                    "description": "The identifier of the page/folder after which the page should be placed\n"
                },
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint for which the page is created, relevant only for pages of type \"blueprint-entities\"\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the page\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The Identifier of the page\n"
                },
                "locked": {
                    "type": "boolean",
                    "description": "Whether the page is locked, if true, viewers will not be able to edit the page widgets and filters\n"
                },
                "parent": {
                    "type": "string",
                    "description": "The identifier of the folder in which the page is in, default is the root of the sidebar\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the page\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the page, can be one of \"blueprint-entities\", \"dashboard\" or \"home\"\n"
                },
                "widgets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The widgets of the page\n"
                }
            },
            "requiredInputs": [
                "identifier",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Page resources.\n",
                "properties": {
                    "after": {
                        "type": "string",
                        "description": "The identifier of the page/folder after which the page should be placed\n"
                    },
                    "blueprint": {
                        "type": "string",
                        "description": "The blueprint for which the page is created, relevant only for pages of type \"blueprint-entities\"\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation date of the page\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The creator of the page\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "The icon of the page\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "The Identifier of the page\n"
                    },
                    "locked": {
                        "type": "boolean",
                        "description": "Whether the page is locked, if true, viewers will not be able to edit the page widgets and filters\n"
                    },
                    "parent": {
                        "type": "string",
                        "description": "The identifier of the folder in which the page is in, default is the root of the sidebar\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the page\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the page, can be one of \"blueprint-entities\", \"dashboard\" or \"home\"\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last update date of the page\n"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The last updater of the page\n"
                    },
                    "widgets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The widgets of the page\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/pagePermissions:PagePermissions": {
            "properties": {
                "pageIdentifier": {
                    "type": "string"
                },
                "read": {
                    "$ref": "#/types/port:index/PagePermissionsRead:PagePermissionsRead",
                    "description": "The permission to read the page\n"
                }
            },
            "required": [
                "pageIdentifier",
                "read"
            ],
            "inputProperties": {
                "pageIdentifier": {
                    "type": "string"
                },
                "read": {
                    "$ref": "#/types/port:index/PagePermissionsRead:PagePermissionsRead",
                    "description": "The permission to read the page\n"
                }
            },
            "requiredInputs": [
                "pageIdentifier",
                "read"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PagePermissions resources.\n",
                "properties": {
                    "pageIdentifier": {
                        "type": "string"
                    },
                    "read": {
                        "$ref": "#/types/port:index/PagePermissionsRead:PagePermissionsRead",
                        "description": "The permission to read the page\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/scorecard:Scorecard": {
            "properties": {
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint of the scorecard\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the scorecard\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The creator of the scorecard\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the scorecard\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/ScorecardRule:ScorecardRule"
                    },
                    "description": "The rules of the scorecard\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the scorecard\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The last update date of the scorecard\n"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "The last updater of the scorecard\n"
                }
            },
            "required": [
                "blueprint",
                "createdAt",
                "createdBy",
                "identifier",
                "rules",
                "title",
                "updatedAt",
                "updatedBy"
            ],
            "inputProperties": {
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint of the scorecard\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the scorecard\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/ScorecardRule:ScorecardRule"
                    },
                    "description": "The rules of the scorecard\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the scorecard\n"
                }
            },
            "requiredInputs": [
                "blueprint",
                "identifier",
                "rules",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Scorecard resources.\n",
                "properties": {
                    "blueprint": {
                        "type": "string",
                        "description": "The blueprint of the scorecard\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The creation date of the scorecard\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The creator of the scorecard\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "The identifier of the scorecard\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/port:index/ScorecardRule:ScorecardRule"
                        },
                        "description": "The rules of the scorecard\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the scorecard\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last update date of the scorecard\n"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The last updater of the scorecard\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/team:Team": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the team\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the team\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the team\n"
                },
                "providerName": {
                    "type": "string",
                    "description": "The provider of the team\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The last update date of the team\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The users of the team\n"
                }
            },
            "required": [
                "createdAt",
                "name",
                "providerName",
                "updatedAt"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the team\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the team\n"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The users of the team\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Team resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation date of the team\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the team\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the team\n"
                    },
                    "providerName": {
                        "type": "string",
                        "description": "The provider of the team\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last update date of the team\n"
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The users of the team\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/webhook:Webhook": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the webhook\n"
                },
                "createdBy": {
                    "type": "string",
                    "description": "The creator of the webhook\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the webhook\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the webhook is enabled\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the webhook\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the webhook\n"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/WebhookMapping:WebhookMapping"
                    },
                    "description": "The mappings of the webhook\n"
                },
                "security": {
                    "$ref": "#/types/port:index/WebhookSecurity:WebhookSecurity",
                    "description": "The security of the webhook\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the webhook\n"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The last update date of the webhook\n"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "The last updater of the webhook\n"
                },
                "url": {
                    "type": "string",
                    "description": "The url of the webhook\n"
                },
                "webhookKey": {
                    "type": "string",
                    "description": "The webhook key of the webhook\n"
                }
            },
            "required": [
                "createdAt",
                "createdBy",
                "enabled",
                "identifier",
                "updatedAt",
                "updatedBy",
                "url",
                "webhookKey"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description of the webhook\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the webhook is enabled\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the webhook\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the webhook\n"
                },
                "mappings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/WebhookMapping:WebhookMapping"
                    },
                    "description": "The mappings of the webhook\n"
                },
                "security": {
                    "$ref": "#/types/port:index/WebhookSecurity:WebhookSecurity",
                    "description": "The security of the webhook\n"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the webhook\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Webhook resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The creation date of the webhook\n"
                    },
                    "createdBy": {
                        "type": "string",
                        "description": "The creator of the webhook\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the webhook\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether the webhook is enabled\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "The icon of the webhook\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "The identifier of the webhook\n"
                    },
                    "mappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/port:index/WebhookMapping:WebhookMapping"
                        },
                        "description": "The mappings of the webhook\n"
                    },
                    "security": {
                        "$ref": "#/types/port:index/WebhookSecurity:WebhookSecurity",
                        "description": "The security of the webhook\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The title of the webhook\n"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "The last update date of the webhook\n"
                    },
                    "updatedBy": {
                        "type": "string",
                        "description": "The last updater of the webhook\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "The url of the webhook\n"
                    },
                    "webhookKey": {
                        "type": "string",
                        "description": "The webhook key of the webhook\n"
                    }
                },
                "type": "object"
            }
        }
    }
}