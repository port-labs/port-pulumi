{
    "name": "port",
    "displayName": "Port Pulumi",
    "description": "A Pulumi package for creating and managing Port resources.",
    "keywords": [
        "pulumi",
        "port",
        "category/utility"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`port` Terraform Provider](https://github.com/port-labs/terraform-provider-port).",
    "repository": "https://github.com/port-labs/pulumi",
    "pluginDownloadURL": "github://api.github.com/port-labs/pulumi",
    "publisher": "port-labs",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "rootNamespace": "port_labs"
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/port-labs/pulumi-port/sdk/go/port"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Port resources.",
            "packageName": "@port-labs/pulumi",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/port-labs/terraform-provider-port)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-port` repo](https://github.com/port-labs/pulumi/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-port` repo](https://github.com/port-labs/terraform-provider-port/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "packageName": "port_pulumi",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/port-labs/terraform-provider-port)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-port` repo](https://github.com/port-labs/pulumi/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-port` repo](https://github.com/port-labs/terraform-provider-port/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "baseUrl": {
                "type": "string"
            },
            "clientId": {
                "type": "string"
            },
            "secret": {
                "type": "string",
                "secret": true
            },
            "token": {
                "type": "string",
                "secret": true
            }
        },
        "defaults": [
            "clientId",
            "secret",
            "token"
        ]
    },
    "types": {
        "port:index/ActionInvocationMethod:ActionInvocationMethod": {
            "properties": {
                "agent": {
                    "type": "boolean"
                },
                "azureOrg": {
                    "type": "string"
                },
                "omitPayload": {
                    "type": "boolean"
                },
                "omitUserInputs": {
                    "type": "boolean"
                },
                "org": {
                    "type": "string"
                },
                "repo": {
                    "type": "string"
                },
                "reportWorkflowStatus": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "webhook": {
                    "type": "string"
                },
                "workflow": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "port:index/ActionUserProperty:ActionUserProperty": {
            "properties": {
                "blueprint": {
                    "type": "string"
                },
                "default": {
                    "type": "string"
                },
                "defaultItems": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "format": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "pattern": {
                    "type": "string"
                },
                "required": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "identifier",
                "title",
                "type"
            ]
        },
        "port:index/BlueprintCalculationProperty:BlueprintCalculationProperty": {
            "properties": {
                "calculation": {
                    "type": "string"
                },
                "colorized": {
                    "type": "boolean"
                },
                "colors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "calculation",
                "identifier",
                "type"
            ]
        },
        "port:index/BlueprintChangelogDestination:BlueprintChangelogDestination": {
            "properties": {
                "type": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "type"
            ]
        },
        "port:index/BlueprintMirrorProperty:BlueprintMirrorProperty": {
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "identifier",
                "path"
            ]
        },
        "port:index/BlueprintProperty:BlueprintProperty": {
            "properties": {
                "default": {
                    "type": "string"
                },
                "defaultItems": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "enumColors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "enums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "format": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string"
                },
                "items": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    }
                },
                "required": {
                    "type": "boolean"
                },
                "spec": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "identifier",
                "title",
                "type"
            ]
        },
        "port:index/BlueprintRelation:BlueprintRelation": {
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "many": {
                    "type": "boolean"
                },
                "required": {
                    "type": "boolean"
                },
                "target": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "target",
                "title"
            ]
        },
        "port:index/EntityProperty:EntityProperty": {
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "deprecationMessage": "property type is not required anymore"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "port:index/EntityRelation:EntityRelation": {
            "properties": {
                "identifier": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "identifier",
                "name"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the port package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "baseUrl": {
                "type": "string"
            },
            "clientId": {
                "type": "string"
            },
            "secret": {
                "type": "string",
                "secret": true
            },
            "token": {
                "type": "string",
                "secret": true
            }
        },
        "required": [
            "clientId",
            "secret"
        ],
        "inputProperties": {
            "baseUrl": {
                "type": "string"
            },
            "clientId": {
                "type": "string"
            },
            "secret": {
                "type": "string",
                "secret": true
            },
            "token": {
                "type": "string",
                "secret": true
            }
        },
        "requiredInputs": [
            "clientId",
            "secret"
        ]
    },
    "resources": {
        "port:index/action:Action": {
            "properties": {
                "blueprintIdentifier": {
                    "type": "string",
                    "description": "The identifier of the blueprint\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the action\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the action\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the action\n"
                },
                "invocationMethod": {
                    "$ref": "#/types/port:index/ActionInvocationMethod:ActionInvocationMethod",
                    "description": "The methods the action is dispatched in. Supports WEBHOOK, KAFKA, GITHUB and AZURE-DEVOPS\n"
                },
                "title": {
                    "type": "string",
                    "description": "The display name of the action\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "The type of the action, one of CREATE, DAY-2, DELETE\n"
                },
                "userProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/ActionUserProperty:ActionUserProperty"
                    },
                    "description": "The input properties of the action\n"
                }
            },
            "required": [
                "blueprintIdentifier",
                "identifier",
                "invocationMethod",
                "title",
                "trigger"
            ],
            "inputProperties": {
                "blueprintIdentifier": {
                    "type": "string",
                    "description": "The identifier of the blueprint\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the action\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the action\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the action\n"
                },
                "invocationMethod": {
                    "$ref": "#/types/port:index/ActionInvocationMethod:ActionInvocationMethod",
                    "description": "The methods the action is dispatched in. Supports WEBHOOK, KAFKA, GITHUB and AZURE-DEVOPS\n"
                },
                "title": {
                    "type": "string",
                    "description": "The display name of the action\n"
                },
                "trigger": {
                    "type": "string",
                    "description": "The type of the action, one of CREATE, DAY-2, DELETE\n"
                },
                "userProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/ActionUserProperty:ActionUserProperty"
                    },
                    "description": "The input properties of the action\n"
                }
            },
            "requiredInputs": [
                "blueprintIdentifier",
                "identifier",
                "invocationMethod",
                "title",
                "trigger"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Action resources.\n",
                "properties": {
                    "blueprintIdentifier": {
                        "type": "string",
                        "description": "The identifier of the blueprint\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the action\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "The icon of the action\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "The identifier of the action\n"
                    },
                    "invocationMethod": {
                        "$ref": "#/types/port:index/ActionInvocationMethod:ActionInvocationMethod",
                        "description": "The methods the action is dispatched in. Supports WEBHOOK, KAFKA, GITHUB and AZURE-DEVOPS\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The display name of the action\n"
                    },
                    "trigger": {
                        "type": "string",
                        "description": "The type of the action, one of CREATE, DAY-2, DELETE\n"
                    },
                    "userProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/port:index/ActionUserProperty:ActionUserProperty"
                        },
                        "description": "The input properties of the action\n"
                    }
                },
                "type": "object"
            }
        },
        "port:index/blueprint:Blueprint": {
            "properties": {
                "calculationProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/BlueprintCalculationProperty:BlueprintCalculationProperty"
                    },
                    "description": "A set of properties that are calculated upon entity's regular properties.\n"
                },
                "changelogDestination": {
                    "$ref": "#/types/port:index/BlueprintChangelogDestination:BlueprintChangelogDestination",
                    "description": "Blueprints changelog destination, Supports WEBHOOK and KAFKA\n"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for entities of this blueprint\n",
                    "deprecationMessage": "Data source is ignored"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the blueprint\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the blueprint\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the blueprint\n"
                },
                "mirrorProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/BlueprintMirrorProperty:BlueprintMirrorProperty"
                    },
                    "description": "When two Blueprints are connected via a Relation, a new set of properties becomes available to Entities in the source\nBlueprint.\n"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/BlueprintProperty:BlueprintProperty"
                    },
                    "description": "The metadata of the entity\n"
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/BlueprintRelation:BlueprintRelation"
                    },
                    "description": "The blueprints that are connected to this blueprint\n"
                },
                "title": {
                    "type": "string",
                    "description": "The display name of the blueprint\n"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                }
            },
            "required": [
                "createdAt",
                "createdBy",
                "identifier",
                "properties",
                "title",
                "updatedAt",
                "updatedBy"
            ],
            "inputProperties": {
                "calculationProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/BlueprintCalculationProperty:BlueprintCalculationProperty"
                    },
                    "description": "A set of properties that are calculated upon entity's regular properties.\n"
                },
                "changelogDestination": {
                    "$ref": "#/types/port:index/BlueprintChangelogDestination:BlueprintChangelogDestination",
                    "description": "Blueprints changelog destination, Supports WEBHOOK and KAFKA\n"
                },
                "dataSource": {
                    "type": "string",
                    "description": "The data source for entities of this blueprint\n",
                    "deprecationMessage": "Data source is ignored"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the blueprint\n"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of the blueprint\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the blueprint\n"
                },
                "mirrorProperties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/BlueprintMirrorProperty:BlueprintMirrorProperty"
                    },
                    "description": "When two Blueprints are connected via a Relation, a new set of properties becomes available to Entities in the source\nBlueprint.\n"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/BlueprintProperty:BlueprintProperty"
                    },
                    "description": "The metadata of the entity\n"
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/BlueprintRelation:BlueprintRelation"
                    },
                    "description": "The blueprints that are connected to this blueprint\n"
                },
                "title": {
                    "type": "string",
                    "description": "The display name of the blueprint\n"
                }
            },
            "requiredInputs": [
                "identifier",
                "properties",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Blueprint resources.\n",
                "properties": {
                    "calculationProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/port:index/BlueprintCalculationProperty:BlueprintCalculationProperty"
                        },
                        "description": "A set of properties that are calculated upon entity's regular properties.\n"
                    },
                    "changelogDestination": {
                        "$ref": "#/types/port:index/BlueprintChangelogDestination:BlueprintChangelogDestination",
                        "description": "Blueprints changelog destination, Supports WEBHOOK and KAFKA\n"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "dataSource": {
                        "type": "string",
                        "description": "The data source for entities of this blueprint\n",
                        "deprecationMessage": "Data source is ignored"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the blueprint\n"
                    },
                    "icon": {
                        "type": "string",
                        "description": "The icon of the blueprint\n"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "The identifier of the blueprint\n"
                    },
                    "mirrorProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/port:index/BlueprintMirrorProperty:BlueprintMirrorProperty"
                        },
                        "description": "When two Blueprints are connected via a Relation, a new set of properties becomes available to Entities in the source\nBlueprint.\n"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/port:index/BlueprintProperty:BlueprintProperty"
                        },
                        "description": "The metadata of the entity\n"
                    },
                    "relations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/port:index/BlueprintRelation:BlueprintRelation"
                        },
                        "description": "The blueprints that are connected to this blueprint\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The display name of the blueprint\n"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "updatedBy": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "port:index/entity:Entity": {
            "properties": {
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint identifier the entity relates to\n"
                },
                "createdAt": {
                    "type": "string"
                },
                "createdBy": {
                    "type": "string"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the entity\n"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/EntityProperty:EntityProperty"
                    },
                    "description": "The metadata of the entity\n"
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/EntityRelation:EntityRelation"
                    },
                    "description": "The other entities that are connected\n"
                },
                "runId": {
                    "type": "string",
                    "description": "The runID of the action run that created the entity\n"
                },
                "team": {
                    "type": "string",
                    "description": "The team related to the entity\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The teams related to the entity\n"
                },
                "title": {
                    "type": "string",
                    "description": "The display name of the entity\n"
                },
                "updatedAt": {
                    "type": "string"
                },
                "updatedBy": {
                    "type": "string"
                }
            },
            "required": [
                "blueprint",
                "createdAt",
                "createdBy",
                "properties",
                "title",
                "updatedAt",
                "updatedBy"
            ],
            "inputProperties": {
                "blueprint": {
                    "type": "string",
                    "description": "The blueprint identifier the entity relates to\n"
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the entity\n"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/EntityProperty:EntityProperty"
                    },
                    "description": "The metadata of the entity\n"
                },
                "relations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/port:index/EntityRelation:EntityRelation"
                    },
                    "description": "The other entities that are connected\n"
                },
                "runId": {
                    "type": "string",
                    "description": "The runID of the action run that created the entity\n"
                },
                "team": {
                    "type": "string",
                    "description": "The team related to the entity\n"
                },
                "teams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The teams related to the entity\n"
                },
                "title": {
                    "type": "string",
                    "description": "The display name of the entity\n"
                }
            },
            "requiredInputs": [
                "blueprint",
                "properties",
                "title"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Entity resources.\n",
                "properties": {
                    "blueprint": {
                        "type": "string",
                        "description": "The blueprint identifier the entity relates to\n"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "identifier": {
                        "type": "string",
                        "description": "The identifier of the entity\n"
                    },
                    "properties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/port:index/EntityProperty:EntityProperty"
                        },
                        "description": "The metadata of the entity\n"
                    },
                    "relations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/port:index/EntityRelation:EntityRelation"
                        },
                        "description": "The other entities that are connected\n"
                    },
                    "runId": {
                        "type": "string",
                        "description": "The runID of the action run that created the entity\n"
                    },
                    "team": {
                        "type": "string",
                        "description": "The team related to the entity\n"
                    },
                    "teams": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The teams related to the entity\n"
                    },
                    "title": {
                        "type": "string",
                        "description": "The display name of the entity\n"
                    },
                    "updatedAt": {
                        "type": "string"
                    },
                    "updatedBy": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    }
}