// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package port

import (
	"context"
	"reflect"

	"github.com/port-labs/pulumi-port/sdk/go/port/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type ActionApprovalEmailNotification struct {
}

// ActionApprovalEmailNotificationInput is an input type that accepts ActionApprovalEmailNotificationArgs and ActionApprovalEmailNotificationOutput values.
// You can construct a concrete instance of `ActionApprovalEmailNotificationInput` via:
//
//	ActionApprovalEmailNotificationArgs{...}
type ActionApprovalEmailNotificationInput interface {
	pulumi.Input

	ToActionApprovalEmailNotificationOutput() ActionApprovalEmailNotificationOutput
	ToActionApprovalEmailNotificationOutputWithContext(context.Context) ActionApprovalEmailNotificationOutput
}

type ActionApprovalEmailNotificationArgs struct {
}

func (ActionApprovalEmailNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionApprovalEmailNotification)(nil)).Elem()
}

func (i ActionApprovalEmailNotificationArgs) ToActionApprovalEmailNotificationOutput() ActionApprovalEmailNotificationOutput {
	return i.ToActionApprovalEmailNotificationOutputWithContext(context.Background())
}

func (i ActionApprovalEmailNotificationArgs) ToActionApprovalEmailNotificationOutputWithContext(ctx context.Context) ActionApprovalEmailNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionApprovalEmailNotificationOutput)
}

func (i ActionApprovalEmailNotificationArgs) ToOutput(ctx context.Context) pulumix.Output[ActionApprovalEmailNotification] {
	return pulumix.Output[ActionApprovalEmailNotification]{
		OutputState: i.ToActionApprovalEmailNotificationOutputWithContext(ctx).OutputState,
	}
}

func (i ActionApprovalEmailNotificationArgs) ToActionApprovalEmailNotificationPtrOutput() ActionApprovalEmailNotificationPtrOutput {
	return i.ToActionApprovalEmailNotificationPtrOutputWithContext(context.Background())
}

func (i ActionApprovalEmailNotificationArgs) ToActionApprovalEmailNotificationPtrOutputWithContext(ctx context.Context) ActionApprovalEmailNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionApprovalEmailNotificationOutput).ToActionApprovalEmailNotificationPtrOutputWithContext(ctx)
}

// ActionApprovalEmailNotificationPtrInput is an input type that accepts ActionApprovalEmailNotificationArgs, ActionApprovalEmailNotificationPtr and ActionApprovalEmailNotificationPtrOutput values.
// You can construct a concrete instance of `ActionApprovalEmailNotificationPtrInput` via:
//
//	        ActionApprovalEmailNotificationArgs{...}
//
//	or:
//
//	        nil
type ActionApprovalEmailNotificationPtrInput interface {
	pulumi.Input

	ToActionApprovalEmailNotificationPtrOutput() ActionApprovalEmailNotificationPtrOutput
	ToActionApprovalEmailNotificationPtrOutputWithContext(context.Context) ActionApprovalEmailNotificationPtrOutput
}

type actionApprovalEmailNotificationPtrType ActionApprovalEmailNotificationArgs

func ActionApprovalEmailNotificationPtr(v *ActionApprovalEmailNotificationArgs) ActionApprovalEmailNotificationPtrInput {
	return (*actionApprovalEmailNotificationPtrType)(v)
}

func (*actionApprovalEmailNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionApprovalEmailNotification)(nil)).Elem()
}

func (i *actionApprovalEmailNotificationPtrType) ToActionApprovalEmailNotificationPtrOutput() ActionApprovalEmailNotificationPtrOutput {
	return i.ToActionApprovalEmailNotificationPtrOutputWithContext(context.Background())
}

func (i *actionApprovalEmailNotificationPtrType) ToActionApprovalEmailNotificationPtrOutputWithContext(ctx context.Context) ActionApprovalEmailNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionApprovalEmailNotificationPtrOutput)
}

func (i *actionApprovalEmailNotificationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionApprovalEmailNotification] {
	return pulumix.Output[*ActionApprovalEmailNotification]{
		OutputState: i.ToActionApprovalEmailNotificationPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionApprovalEmailNotificationOutput struct{ *pulumi.OutputState }

func (ActionApprovalEmailNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionApprovalEmailNotification)(nil)).Elem()
}

func (o ActionApprovalEmailNotificationOutput) ToActionApprovalEmailNotificationOutput() ActionApprovalEmailNotificationOutput {
	return o
}

func (o ActionApprovalEmailNotificationOutput) ToActionApprovalEmailNotificationOutputWithContext(ctx context.Context) ActionApprovalEmailNotificationOutput {
	return o
}

func (o ActionApprovalEmailNotificationOutput) ToActionApprovalEmailNotificationPtrOutput() ActionApprovalEmailNotificationPtrOutput {
	return o.ToActionApprovalEmailNotificationPtrOutputWithContext(context.Background())
}

func (o ActionApprovalEmailNotificationOutput) ToActionApprovalEmailNotificationPtrOutputWithContext(ctx context.Context) ActionApprovalEmailNotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionApprovalEmailNotification) *ActionApprovalEmailNotification {
		return &v
	}).(ActionApprovalEmailNotificationPtrOutput)
}

func (o ActionApprovalEmailNotificationOutput) ToOutput(ctx context.Context) pulumix.Output[ActionApprovalEmailNotification] {
	return pulumix.Output[ActionApprovalEmailNotification]{
		OutputState: o.OutputState,
	}
}

type ActionApprovalEmailNotificationPtrOutput struct{ *pulumi.OutputState }

func (ActionApprovalEmailNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionApprovalEmailNotification)(nil)).Elem()
}

func (o ActionApprovalEmailNotificationPtrOutput) ToActionApprovalEmailNotificationPtrOutput() ActionApprovalEmailNotificationPtrOutput {
	return o
}

func (o ActionApprovalEmailNotificationPtrOutput) ToActionApprovalEmailNotificationPtrOutputWithContext(ctx context.Context) ActionApprovalEmailNotificationPtrOutput {
	return o
}

func (o ActionApprovalEmailNotificationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionApprovalEmailNotification] {
	return pulumix.Output[*ActionApprovalEmailNotification]{
		OutputState: o.OutputState,
	}
}

func (o ActionApprovalEmailNotificationPtrOutput) Elem() ActionApprovalEmailNotificationOutput {
	return o.ApplyT(func(v *ActionApprovalEmailNotification) ActionApprovalEmailNotification {
		if v != nil {
			return *v
		}
		var ret ActionApprovalEmailNotification
		return ret
	}).(ActionApprovalEmailNotificationOutput)
}

type ActionApprovalWebhookNotification struct {
	Url string `pulumi:"url"`
}

// ActionApprovalWebhookNotificationInput is an input type that accepts ActionApprovalWebhookNotificationArgs and ActionApprovalWebhookNotificationOutput values.
// You can construct a concrete instance of `ActionApprovalWebhookNotificationInput` via:
//
//	ActionApprovalWebhookNotificationArgs{...}
type ActionApprovalWebhookNotificationInput interface {
	pulumi.Input

	ToActionApprovalWebhookNotificationOutput() ActionApprovalWebhookNotificationOutput
	ToActionApprovalWebhookNotificationOutputWithContext(context.Context) ActionApprovalWebhookNotificationOutput
}

type ActionApprovalWebhookNotificationArgs struct {
	Url pulumi.StringInput `pulumi:"url"`
}

func (ActionApprovalWebhookNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionApprovalWebhookNotification)(nil)).Elem()
}

func (i ActionApprovalWebhookNotificationArgs) ToActionApprovalWebhookNotificationOutput() ActionApprovalWebhookNotificationOutput {
	return i.ToActionApprovalWebhookNotificationOutputWithContext(context.Background())
}

func (i ActionApprovalWebhookNotificationArgs) ToActionApprovalWebhookNotificationOutputWithContext(ctx context.Context) ActionApprovalWebhookNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionApprovalWebhookNotificationOutput)
}

func (i ActionApprovalWebhookNotificationArgs) ToOutput(ctx context.Context) pulumix.Output[ActionApprovalWebhookNotification] {
	return pulumix.Output[ActionApprovalWebhookNotification]{
		OutputState: i.ToActionApprovalWebhookNotificationOutputWithContext(ctx).OutputState,
	}
}

func (i ActionApprovalWebhookNotificationArgs) ToActionApprovalWebhookNotificationPtrOutput() ActionApprovalWebhookNotificationPtrOutput {
	return i.ToActionApprovalWebhookNotificationPtrOutputWithContext(context.Background())
}

func (i ActionApprovalWebhookNotificationArgs) ToActionApprovalWebhookNotificationPtrOutputWithContext(ctx context.Context) ActionApprovalWebhookNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionApprovalWebhookNotificationOutput).ToActionApprovalWebhookNotificationPtrOutputWithContext(ctx)
}

// ActionApprovalWebhookNotificationPtrInput is an input type that accepts ActionApprovalWebhookNotificationArgs, ActionApprovalWebhookNotificationPtr and ActionApprovalWebhookNotificationPtrOutput values.
// You can construct a concrete instance of `ActionApprovalWebhookNotificationPtrInput` via:
//
//	        ActionApprovalWebhookNotificationArgs{...}
//
//	or:
//
//	        nil
type ActionApprovalWebhookNotificationPtrInput interface {
	pulumi.Input

	ToActionApprovalWebhookNotificationPtrOutput() ActionApprovalWebhookNotificationPtrOutput
	ToActionApprovalWebhookNotificationPtrOutputWithContext(context.Context) ActionApprovalWebhookNotificationPtrOutput
}

type actionApprovalWebhookNotificationPtrType ActionApprovalWebhookNotificationArgs

func ActionApprovalWebhookNotificationPtr(v *ActionApprovalWebhookNotificationArgs) ActionApprovalWebhookNotificationPtrInput {
	return (*actionApprovalWebhookNotificationPtrType)(v)
}

func (*actionApprovalWebhookNotificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionApprovalWebhookNotification)(nil)).Elem()
}

func (i *actionApprovalWebhookNotificationPtrType) ToActionApprovalWebhookNotificationPtrOutput() ActionApprovalWebhookNotificationPtrOutput {
	return i.ToActionApprovalWebhookNotificationPtrOutputWithContext(context.Background())
}

func (i *actionApprovalWebhookNotificationPtrType) ToActionApprovalWebhookNotificationPtrOutputWithContext(ctx context.Context) ActionApprovalWebhookNotificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionApprovalWebhookNotificationPtrOutput)
}

func (i *actionApprovalWebhookNotificationPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionApprovalWebhookNotification] {
	return pulumix.Output[*ActionApprovalWebhookNotification]{
		OutputState: i.ToActionApprovalWebhookNotificationPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionApprovalWebhookNotificationOutput struct{ *pulumi.OutputState }

func (ActionApprovalWebhookNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionApprovalWebhookNotification)(nil)).Elem()
}

func (o ActionApprovalWebhookNotificationOutput) ToActionApprovalWebhookNotificationOutput() ActionApprovalWebhookNotificationOutput {
	return o
}

func (o ActionApprovalWebhookNotificationOutput) ToActionApprovalWebhookNotificationOutputWithContext(ctx context.Context) ActionApprovalWebhookNotificationOutput {
	return o
}

func (o ActionApprovalWebhookNotificationOutput) ToActionApprovalWebhookNotificationPtrOutput() ActionApprovalWebhookNotificationPtrOutput {
	return o.ToActionApprovalWebhookNotificationPtrOutputWithContext(context.Background())
}

func (o ActionApprovalWebhookNotificationOutput) ToActionApprovalWebhookNotificationPtrOutputWithContext(ctx context.Context) ActionApprovalWebhookNotificationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionApprovalWebhookNotification) *ActionApprovalWebhookNotification {
		return &v
	}).(ActionApprovalWebhookNotificationPtrOutput)
}

func (o ActionApprovalWebhookNotificationOutput) ToOutput(ctx context.Context) pulumix.Output[ActionApprovalWebhookNotification] {
	return pulumix.Output[ActionApprovalWebhookNotification]{
		OutputState: o.OutputState,
	}
}

func (o ActionApprovalWebhookNotificationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ActionApprovalWebhookNotification) string { return v.Url }).(pulumi.StringOutput)
}

type ActionApprovalWebhookNotificationPtrOutput struct{ *pulumi.OutputState }

func (ActionApprovalWebhookNotificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionApprovalWebhookNotification)(nil)).Elem()
}

func (o ActionApprovalWebhookNotificationPtrOutput) ToActionApprovalWebhookNotificationPtrOutput() ActionApprovalWebhookNotificationPtrOutput {
	return o
}

func (o ActionApprovalWebhookNotificationPtrOutput) ToActionApprovalWebhookNotificationPtrOutputWithContext(ctx context.Context) ActionApprovalWebhookNotificationPtrOutput {
	return o
}

func (o ActionApprovalWebhookNotificationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionApprovalWebhookNotification] {
	return pulumix.Output[*ActionApprovalWebhookNotification]{
		OutputState: o.OutputState,
	}
}

func (o ActionApprovalWebhookNotificationPtrOutput) Elem() ActionApprovalWebhookNotificationOutput {
	return o.ApplyT(func(v *ActionApprovalWebhookNotification) ActionApprovalWebhookNotification {
		if v != nil {
			return *v
		}
		var ret ActionApprovalWebhookNotification
		return ret
	}).(ActionApprovalWebhookNotificationOutput)
}

func (o ActionApprovalWebhookNotificationPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionApprovalWebhookNotification) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type ActionAzureMethod struct {
	Org     string `pulumi:"org"`
	Webhook string `pulumi:"webhook"`
}

// ActionAzureMethodInput is an input type that accepts ActionAzureMethodArgs and ActionAzureMethodOutput values.
// You can construct a concrete instance of `ActionAzureMethodInput` via:
//
//	ActionAzureMethodArgs{...}
type ActionAzureMethodInput interface {
	pulumi.Input

	ToActionAzureMethodOutput() ActionAzureMethodOutput
	ToActionAzureMethodOutputWithContext(context.Context) ActionAzureMethodOutput
}

type ActionAzureMethodArgs struct {
	Org     pulumi.StringInput `pulumi:"org"`
	Webhook pulumi.StringInput `pulumi:"webhook"`
}

func (ActionAzureMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionAzureMethod)(nil)).Elem()
}

func (i ActionAzureMethodArgs) ToActionAzureMethodOutput() ActionAzureMethodOutput {
	return i.ToActionAzureMethodOutputWithContext(context.Background())
}

func (i ActionAzureMethodArgs) ToActionAzureMethodOutputWithContext(ctx context.Context) ActionAzureMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionAzureMethodOutput)
}

func (i ActionAzureMethodArgs) ToOutput(ctx context.Context) pulumix.Output[ActionAzureMethod] {
	return pulumix.Output[ActionAzureMethod]{
		OutputState: i.ToActionAzureMethodOutputWithContext(ctx).OutputState,
	}
}

func (i ActionAzureMethodArgs) ToActionAzureMethodPtrOutput() ActionAzureMethodPtrOutput {
	return i.ToActionAzureMethodPtrOutputWithContext(context.Background())
}

func (i ActionAzureMethodArgs) ToActionAzureMethodPtrOutputWithContext(ctx context.Context) ActionAzureMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionAzureMethodOutput).ToActionAzureMethodPtrOutputWithContext(ctx)
}

// ActionAzureMethodPtrInput is an input type that accepts ActionAzureMethodArgs, ActionAzureMethodPtr and ActionAzureMethodPtrOutput values.
// You can construct a concrete instance of `ActionAzureMethodPtrInput` via:
//
//	        ActionAzureMethodArgs{...}
//
//	or:
//
//	        nil
type ActionAzureMethodPtrInput interface {
	pulumi.Input

	ToActionAzureMethodPtrOutput() ActionAzureMethodPtrOutput
	ToActionAzureMethodPtrOutputWithContext(context.Context) ActionAzureMethodPtrOutput
}

type actionAzureMethodPtrType ActionAzureMethodArgs

func ActionAzureMethodPtr(v *ActionAzureMethodArgs) ActionAzureMethodPtrInput {
	return (*actionAzureMethodPtrType)(v)
}

func (*actionAzureMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionAzureMethod)(nil)).Elem()
}

func (i *actionAzureMethodPtrType) ToActionAzureMethodPtrOutput() ActionAzureMethodPtrOutput {
	return i.ToActionAzureMethodPtrOutputWithContext(context.Background())
}

func (i *actionAzureMethodPtrType) ToActionAzureMethodPtrOutputWithContext(ctx context.Context) ActionAzureMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionAzureMethodPtrOutput)
}

func (i *actionAzureMethodPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionAzureMethod] {
	return pulumix.Output[*ActionAzureMethod]{
		OutputState: i.ToActionAzureMethodPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionAzureMethodOutput struct{ *pulumi.OutputState }

func (ActionAzureMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionAzureMethod)(nil)).Elem()
}

func (o ActionAzureMethodOutput) ToActionAzureMethodOutput() ActionAzureMethodOutput {
	return o
}

func (o ActionAzureMethodOutput) ToActionAzureMethodOutputWithContext(ctx context.Context) ActionAzureMethodOutput {
	return o
}

func (o ActionAzureMethodOutput) ToActionAzureMethodPtrOutput() ActionAzureMethodPtrOutput {
	return o.ToActionAzureMethodPtrOutputWithContext(context.Background())
}

func (o ActionAzureMethodOutput) ToActionAzureMethodPtrOutputWithContext(ctx context.Context) ActionAzureMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionAzureMethod) *ActionAzureMethod {
		return &v
	}).(ActionAzureMethodPtrOutput)
}

func (o ActionAzureMethodOutput) ToOutput(ctx context.Context) pulumix.Output[ActionAzureMethod] {
	return pulumix.Output[ActionAzureMethod]{
		OutputState: o.OutputState,
	}
}

func (o ActionAzureMethodOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v ActionAzureMethod) string { return v.Org }).(pulumi.StringOutput)
}

func (o ActionAzureMethodOutput) Webhook() pulumi.StringOutput {
	return o.ApplyT(func(v ActionAzureMethod) string { return v.Webhook }).(pulumi.StringOutput)
}

type ActionAzureMethodPtrOutput struct{ *pulumi.OutputState }

func (ActionAzureMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionAzureMethod)(nil)).Elem()
}

func (o ActionAzureMethodPtrOutput) ToActionAzureMethodPtrOutput() ActionAzureMethodPtrOutput {
	return o
}

func (o ActionAzureMethodPtrOutput) ToActionAzureMethodPtrOutputWithContext(ctx context.Context) ActionAzureMethodPtrOutput {
	return o
}

func (o ActionAzureMethodPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionAzureMethod] {
	return pulumix.Output[*ActionAzureMethod]{
		OutputState: o.OutputState,
	}
}

func (o ActionAzureMethodPtrOutput) Elem() ActionAzureMethodOutput {
	return o.ApplyT(func(v *ActionAzureMethod) ActionAzureMethod {
		if v != nil {
			return *v
		}
		var ret ActionAzureMethod
		return ret
	}).(ActionAzureMethodOutput)
}

func (o ActionAzureMethodPtrOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionAzureMethod) *string {
		if v == nil {
			return nil
		}
		return &v.Org
	}).(pulumi.StringPtrOutput)
}

func (o ActionAzureMethodPtrOutput) Webhook() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionAzureMethod) *string {
		if v == nil {
			return nil
		}
		return &v.Webhook
	}).(pulumi.StringPtrOutput)
}

type ActionGithubMethod struct {
	OmitPayload          *bool  `pulumi:"omitPayload"`
	OmitUserInputs       *bool  `pulumi:"omitUserInputs"`
	Org                  string `pulumi:"org"`
	Repo                 string `pulumi:"repo"`
	ReportWorkflowStatus *bool  `pulumi:"reportWorkflowStatus"`
	Workflow             string `pulumi:"workflow"`
}

// ActionGithubMethodInput is an input type that accepts ActionGithubMethodArgs and ActionGithubMethodOutput values.
// You can construct a concrete instance of `ActionGithubMethodInput` via:
//
//	ActionGithubMethodArgs{...}
type ActionGithubMethodInput interface {
	pulumi.Input

	ToActionGithubMethodOutput() ActionGithubMethodOutput
	ToActionGithubMethodOutputWithContext(context.Context) ActionGithubMethodOutput
}

type ActionGithubMethodArgs struct {
	OmitPayload          pulumi.BoolPtrInput `pulumi:"omitPayload"`
	OmitUserInputs       pulumi.BoolPtrInput `pulumi:"omitUserInputs"`
	Org                  pulumi.StringInput  `pulumi:"org"`
	Repo                 pulumi.StringInput  `pulumi:"repo"`
	ReportWorkflowStatus pulumi.BoolPtrInput `pulumi:"reportWorkflowStatus"`
	Workflow             pulumi.StringInput  `pulumi:"workflow"`
}

func (ActionGithubMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionGithubMethod)(nil)).Elem()
}

func (i ActionGithubMethodArgs) ToActionGithubMethodOutput() ActionGithubMethodOutput {
	return i.ToActionGithubMethodOutputWithContext(context.Background())
}

func (i ActionGithubMethodArgs) ToActionGithubMethodOutputWithContext(ctx context.Context) ActionGithubMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGithubMethodOutput)
}

func (i ActionGithubMethodArgs) ToOutput(ctx context.Context) pulumix.Output[ActionGithubMethod] {
	return pulumix.Output[ActionGithubMethod]{
		OutputState: i.ToActionGithubMethodOutputWithContext(ctx).OutputState,
	}
}

func (i ActionGithubMethodArgs) ToActionGithubMethodPtrOutput() ActionGithubMethodPtrOutput {
	return i.ToActionGithubMethodPtrOutputWithContext(context.Background())
}

func (i ActionGithubMethodArgs) ToActionGithubMethodPtrOutputWithContext(ctx context.Context) ActionGithubMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGithubMethodOutput).ToActionGithubMethodPtrOutputWithContext(ctx)
}

// ActionGithubMethodPtrInput is an input type that accepts ActionGithubMethodArgs, ActionGithubMethodPtr and ActionGithubMethodPtrOutput values.
// You can construct a concrete instance of `ActionGithubMethodPtrInput` via:
//
//	        ActionGithubMethodArgs{...}
//
//	or:
//
//	        nil
type ActionGithubMethodPtrInput interface {
	pulumi.Input

	ToActionGithubMethodPtrOutput() ActionGithubMethodPtrOutput
	ToActionGithubMethodPtrOutputWithContext(context.Context) ActionGithubMethodPtrOutput
}

type actionGithubMethodPtrType ActionGithubMethodArgs

func ActionGithubMethodPtr(v *ActionGithubMethodArgs) ActionGithubMethodPtrInput {
	return (*actionGithubMethodPtrType)(v)
}

func (*actionGithubMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionGithubMethod)(nil)).Elem()
}

func (i *actionGithubMethodPtrType) ToActionGithubMethodPtrOutput() ActionGithubMethodPtrOutput {
	return i.ToActionGithubMethodPtrOutputWithContext(context.Background())
}

func (i *actionGithubMethodPtrType) ToActionGithubMethodPtrOutputWithContext(ctx context.Context) ActionGithubMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGithubMethodPtrOutput)
}

func (i *actionGithubMethodPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionGithubMethod] {
	return pulumix.Output[*ActionGithubMethod]{
		OutputState: i.ToActionGithubMethodPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionGithubMethodOutput struct{ *pulumi.OutputState }

func (ActionGithubMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionGithubMethod)(nil)).Elem()
}

func (o ActionGithubMethodOutput) ToActionGithubMethodOutput() ActionGithubMethodOutput {
	return o
}

func (o ActionGithubMethodOutput) ToActionGithubMethodOutputWithContext(ctx context.Context) ActionGithubMethodOutput {
	return o
}

func (o ActionGithubMethodOutput) ToActionGithubMethodPtrOutput() ActionGithubMethodPtrOutput {
	return o.ToActionGithubMethodPtrOutputWithContext(context.Background())
}

func (o ActionGithubMethodOutput) ToActionGithubMethodPtrOutputWithContext(ctx context.Context) ActionGithubMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionGithubMethod) *ActionGithubMethod {
		return &v
	}).(ActionGithubMethodPtrOutput)
}

func (o ActionGithubMethodOutput) ToOutput(ctx context.Context) pulumix.Output[ActionGithubMethod] {
	return pulumix.Output[ActionGithubMethod]{
		OutputState: o.OutputState,
	}
}

func (o ActionGithubMethodOutput) OmitPayload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionGithubMethod) *bool { return v.OmitPayload }).(pulumi.BoolPtrOutput)
}

func (o ActionGithubMethodOutput) OmitUserInputs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionGithubMethod) *bool { return v.OmitUserInputs }).(pulumi.BoolPtrOutput)
}

func (o ActionGithubMethodOutput) Org() pulumi.StringOutput {
	return o.ApplyT(func(v ActionGithubMethod) string { return v.Org }).(pulumi.StringOutput)
}

func (o ActionGithubMethodOutput) Repo() pulumi.StringOutput {
	return o.ApplyT(func(v ActionGithubMethod) string { return v.Repo }).(pulumi.StringOutput)
}

func (o ActionGithubMethodOutput) ReportWorkflowStatus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionGithubMethod) *bool { return v.ReportWorkflowStatus }).(pulumi.BoolPtrOutput)
}

func (o ActionGithubMethodOutput) Workflow() pulumi.StringOutput {
	return o.ApplyT(func(v ActionGithubMethod) string { return v.Workflow }).(pulumi.StringOutput)
}

type ActionGithubMethodPtrOutput struct{ *pulumi.OutputState }

func (ActionGithubMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionGithubMethod)(nil)).Elem()
}

func (o ActionGithubMethodPtrOutput) ToActionGithubMethodPtrOutput() ActionGithubMethodPtrOutput {
	return o
}

func (o ActionGithubMethodPtrOutput) ToActionGithubMethodPtrOutputWithContext(ctx context.Context) ActionGithubMethodPtrOutput {
	return o
}

func (o ActionGithubMethodPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionGithubMethod] {
	return pulumix.Output[*ActionGithubMethod]{
		OutputState: o.OutputState,
	}
}

func (o ActionGithubMethodPtrOutput) Elem() ActionGithubMethodOutput {
	return o.ApplyT(func(v *ActionGithubMethod) ActionGithubMethod {
		if v != nil {
			return *v
		}
		var ret ActionGithubMethod
		return ret
	}).(ActionGithubMethodOutput)
}

func (o ActionGithubMethodPtrOutput) OmitPayload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionGithubMethod) *bool {
		if v == nil {
			return nil
		}
		return v.OmitPayload
	}).(pulumi.BoolPtrOutput)
}

func (o ActionGithubMethodPtrOutput) OmitUserInputs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionGithubMethod) *bool {
		if v == nil {
			return nil
		}
		return v.OmitUserInputs
	}).(pulumi.BoolPtrOutput)
}

func (o ActionGithubMethodPtrOutput) Org() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionGithubMethod) *string {
		if v == nil {
			return nil
		}
		return &v.Org
	}).(pulumi.StringPtrOutput)
}

func (o ActionGithubMethodPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionGithubMethod) *string {
		if v == nil {
			return nil
		}
		return &v.Repo
	}).(pulumi.StringPtrOutput)
}

func (o ActionGithubMethodPtrOutput) ReportWorkflowStatus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionGithubMethod) *bool {
		if v == nil {
			return nil
		}
		return v.ReportWorkflowStatus
	}).(pulumi.BoolPtrOutput)
}

func (o ActionGithubMethodPtrOutput) Workflow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionGithubMethod) *string {
		if v == nil {
			return nil
		}
		return &v.Workflow
	}).(pulumi.StringPtrOutput)
}

type ActionGitlabMethod struct {
	Agent          *bool   `pulumi:"agent"`
	DefaultRef     *string `pulumi:"defaultRef"`
	GroupName      string  `pulumi:"groupName"`
	OmitPayload    *bool   `pulumi:"omitPayload"`
	OmitUserInputs *bool   `pulumi:"omitUserInputs"`
	ProjectName    string  `pulumi:"projectName"`
}

// ActionGitlabMethodInput is an input type that accepts ActionGitlabMethodArgs and ActionGitlabMethodOutput values.
// You can construct a concrete instance of `ActionGitlabMethodInput` via:
//
//	ActionGitlabMethodArgs{...}
type ActionGitlabMethodInput interface {
	pulumi.Input

	ToActionGitlabMethodOutput() ActionGitlabMethodOutput
	ToActionGitlabMethodOutputWithContext(context.Context) ActionGitlabMethodOutput
}

type ActionGitlabMethodArgs struct {
	Agent          pulumi.BoolPtrInput   `pulumi:"agent"`
	DefaultRef     pulumi.StringPtrInput `pulumi:"defaultRef"`
	GroupName      pulumi.StringInput    `pulumi:"groupName"`
	OmitPayload    pulumi.BoolPtrInput   `pulumi:"omitPayload"`
	OmitUserInputs pulumi.BoolPtrInput   `pulumi:"omitUserInputs"`
	ProjectName    pulumi.StringInput    `pulumi:"projectName"`
}

func (ActionGitlabMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionGitlabMethod)(nil)).Elem()
}

func (i ActionGitlabMethodArgs) ToActionGitlabMethodOutput() ActionGitlabMethodOutput {
	return i.ToActionGitlabMethodOutputWithContext(context.Background())
}

func (i ActionGitlabMethodArgs) ToActionGitlabMethodOutputWithContext(ctx context.Context) ActionGitlabMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGitlabMethodOutput)
}

func (i ActionGitlabMethodArgs) ToOutput(ctx context.Context) pulumix.Output[ActionGitlabMethod] {
	return pulumix.Output[ActionGitlabMethod]{
		OutputState: i.ToActionGitlabMethodOutputWithContext(ctx).OutputState,
	}
}

func (i ActionGitlabMethodArgs) ToActionGitlabMethodPtrOutput() ActionGitlabMethodPtrOutput {
	return i.ToActionGitlabMethodPtrOutputWithContext(context.Background())
}

func (i ActionGitlabMethodArgs) ToActionGitlabMethodPtrOutputWithContext(ctx context.Context) ActionGitlabMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGitlabMethodOutput).ToActionGitlabMethodPtrOutputWithContext(ctx)
}

// ActionGitlabMethodPtrInput is an input type that accepts ActionGitlabMethodArgs, ActionGitlabMethodPtr and ActionGitlabMethodPtrOutput values.
// You can construct a concrete instance of `ActionGitlabMethodPtrInput` via:
//
//	        ActionGitlabMethodArgs{...}
//
//	or:
//
//	        nil
type ActionGitlabMethodPtrInput interface {
	pulumi.Input

	ToActionGitlabMethodPtrOutput() ActionGitlabMethodPtrOutput
	ToActionGitlabMethodPtrOutputWithContext(context.Context) ActionGitlabMethodPtrOutput
}

type actionGitlabMethodPtrType ActionGitlabMethodArgs

func ActionGitlabMethodPtr(v *ActionGitlabMethodArgs) ActionGitlabMethodPtrInput {
	return (*actionGitlabMethodPtrType)(v)
}

func (*actionGitlabMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionGitlabMethod)(nil)).Elem()
}

func (i *actionGitlabMethodPtrType) ToActionGitlabMethodPtrOutput() ActionGitlabMethodPtrOutput {
	return i.ToActionGitlabMethodPtrOutputWithContext(context.Background())
}

func (i *actionGitlabMethodPtrType) ToActionGitlabMethodPtrOutputWithContext(ctx context.Context) ActionGitlabMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionGitlabMethodPtrOutput)
}

func (i *actionGitlabMethodPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionGitlabMethod] {
	return pulumix.Output[*ActionGitlabMethod]{
		OutputState: i.ToActionGitlabMethodPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionGitlabMethodOutput struct{ *pulumi.OutputState }

func (ActionGitlabMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionGitlabMethod)(nil)).Elem()
}

func (o ActionGitlabMethodOutput) ToActionGitlabMethodOutput() ActionGitlabMethodOutput {
	return o
}

func (o ActionGitlabMethodOutput) ToActionGitlabMethodOutputWithContext(ctx context.Context) ActionGitlabMethodOutput {
	return o
}

func (o ActionGitlabMethodOutput) ToActionGitlabMethodPtrOutput() ActionGitlabMethodPtrOutput {
	return o.ToActionGitlabMethodPtrOutputWithContext(context.Background())
}

func (o ActionGitlabMethodOutput) ToActionGitlabMethodPtrOutputWithContext(ctx context.Context) ActionGitlabMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionGitlabMethod) *ActionGitlabMethod {
		return &v
	}).(ActionGitlabMethodPtrOutput)
}

func (o ActionGitlabMethodOutput) ToOutput(ctx context.Context) pulumix.Output[ActionGitlabMethod] {
	return pulumix.Output[ActionGitlabMethod]{
		OutputState: o.OutputState,
	}
}

func (o ActionGitlabMethodOutput) Agent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionGitlabMethod) *bool { return v.Agent }).(pulumi.BoolPtrOutput)
}

func (o ActionGitlabMethodOutput) DefaultRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionGitlabMethod) *string { return v.DefaultRef }).(pulumi.StringPtrOutput)
}

func (o ActionGitlabMethodOutput) GroupName() pulumi.StringOutput {
	return o.ApplyT(func(v ActionGitlabMethod) string { return v.GroupName }).(pulumi.StringOutput)
}

func (o ActionGitlabMethodOutput) OmitPayload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionGitlabMethod) *bool { return v.OmitPayload }).(pulumi.BoolPtrOutput)
}

func (o ActionGitlabMethodOutput) OmitUserInputs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionGitlabMethod) *bool { return v.OmitUserInputs }).(pulumi.BoolPtrOutput)
}

func (o ActionGitlabMethodOutput) ProjectName() pulumi.StringOutput {
	return o.ApplyT(func(v ActionGitlabMethod) string { return v.ProjectName }).(pulumi.StringOutput)
}

type ActionGitlabMethodPtrOutput struct{ *pulumi.OutputState }

func (ActionGitlabMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionGitlabMethod)(nil)).Elem()
}

func (o ActionGitlabMethodPtrOutput) ToActionGitlabMethodPtrOutput() ActionGitlabMethodPtrOutput {
	return o
}

func (o ActionGitlabMethodPtrOutput) ToActionGitlabMethodPtrOutputWithContext(ctx context.Context) ActionGitlabMethodPtrOutput {
	return o
}

func (o ActionGitlabMethodPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionGitlabMethod] {
	return pulumix.Output[*ActionGitlabMethod]{
		OutputState: o.OutputState,
	}
}

func (o ActionGitlabMethodPtrOutput) Elem() ActionGitlabMethodOutput {
	return o.ApplyT(func(v *ActionGitlabMethod) ActionGitlabMethod {
		if v != nil {
			return *v
		}
		var ret ActionGitlabMethod
		return ret
	}).(ActionGitlabMethodOutput)
}

func (o ActionGitlabMethodPtrOutput) Agent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionGitlabMethod) *bool {
		if v == nil {
			return nil
		}
		return v.Agent
	}).(pulumi.BoolPtrOutput)
}

func (o ActionGitlabMethodPtrOutput) DefaultRef() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionGitlabMethod) *string {
		if v == nil {
			return nil
		}
		return v.DefaultRef
	}).(pulumi.StringPtrOutput)
}

func (o ActionGitlabMethodPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionGitlabMethod) *string {
		if v == nil {
			return nil
		}
		return &v.GroupName
	}).(pulumi.StringPtrOutput)
}

func (o ActionGitlabMethodPtrOutput) OmitPayload() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionGitlabMethod) *bool {
		if v == nil {
			return nil
		}
		return v.OmitPayload
	}).(pulumi.BoolPtrOutput)
}

func (o ActionGitlabMethodPtrOutput) OmitUserInputs() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionGitlabMethod) *bool {
		if v == nil {
			return nil
		}
		return v.OmitUserInputs
	}).(pulumi.BoolPtrOutput)
}

func (o ActionGitlabMethodPtrOutput) ProjectName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionGitlabMethod) *string {
		if v == nil {
			return nil
		}
		return &v.ProjectName
	}).(pulumi.StringPtrOutput)
}

type ActionKafkaMethod struct {
}

// ActionKafkaMethodInput is an input type that accepts ActionKafkaMethodArgs and ActionKafkaMethodOutput values.
// You can construct a concrete instance of `ActionKafkaMethodInput` via:
//
//	ActionKafkaMethodArgs{...}
type ActionKafkaMethodInput interface {
	pulumi.Input

	ToActionKafkaMethodOutput() ActionKafkaMethodOutput
	ToActionKafkaMethodOutputWithContext(context.Context) ActionKafkaMethodOutput
}

type ActionKafkaMethodArgs struct {
}

func (ActionKafkaMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionKafkaMethod)(nil)).Elem()
}

func (i ActionKafkaMethodArgs) ToActionKafkaMethodOutput() ActionKafkaMethodOutput {
	return i.ToActionKafkaMethodOutputWithContext(context.Background())
}

func (i ActionKafkaMethodArgs) ToActionKafkaMethodOutputWithContext(ctx context.Context) ActionKafkaMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionKafkaMethodOutput)
}

func (i ActionKafkaMethodArgs) ToOutput(ctx context.Context) pulumix.Output[ActionKafkaMethod] {
	return pulumix.Output[ActionKafkaMethod]{
		OutputState: i.ToActionKafkaMethodOutputWithContext(ctx).OutputState,
	}
}

func (i ActionKafkaMethodArgs) ToActionKafkaMethodPtrOutput() ActionKafkaMethodPtrOutput {
	return i.ToActionKafkaMethodPtrOutputWithContext(context.Background())
}

func (i ActionKafkaMethodArgs) ToActionKafkaMethodPtrOutputWithContext(ctx context.Context) ActionKafkaMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionKafkaMethodOutput).ToActionKafkaMethodPtrOutputWithContext(ctx)
}

// ActionKafkaMethodPtrInput is an input type that accepts ActionKafkaMethodArgs, ActionKafkaMethodPtr and ActionKafkaMethodPtrOutput values.
// You can construct a concrete instance of `ActionKafkaMethodPtrInput` via:
//
//	        ActionKafkaMethodArgs{...}
//
//	or:
//
//	        nil
type ActionKafkaMethodPtrInput interface {
	pulumi.Input

	ToActionKafkaMethodPtrOutput() ActionKafkaMethodPtrOutput
	ToActionKafkaMethodPtrOutputWithContext(context.Context) ActionKafkaMethodPtrOutput
}

type actionKafkaMethodPtrType ActionKafkaMethodArgs

func ActionKafkaMethodPtr(v *ActionKafkaMethodArgs) ActionKafkaMethodPtrInput {
	return (*actionKafkaMethodPtrType)(v)
}

func (*actionKafkaMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionKafkaMethod)(nil)).Elem()
}

func (i *actionKafkaMethodPtrType) ToActionKafkaMethodPtrOutput() ActionKafkaMethodPtrOutput {
	return i.ToActionKafkaMethodPtrOutputWithContext(context.Background())
}

func (i *actionKafkaMethodPtrType) ToActionKafkaMethodPtrOutputWithContext(ctx context.Context) ActionKafkaMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionKafkaMethodPtrOutput)
}

func (i *actionKafkaMethodPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionKafkaMethod] {
	return pulumix.Output[*ActionKafkaMethod]{
		OutputState: i.ToActionKafkaMethodPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionKafkaMethodOutput struct{ *pulumi.OutputState }

func (ActionKafkaMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionKafkaMethod)(nil)).Elem()
}

func (o ActionKafkaMethodOutput) ToActionKafkaMethodOutput() ActionKafkaMethodOutput {
	return o
}

func (o ActionKafkaMethodOutput) ToActionKafkaMethodOutputWithContext(ctx context.Context) ActionKafkaMethodOutput {
	return o
}

func (o ActionKafkaMethodOutput) ToActionKafkaMethodPtrOutput() ActionKafkaMethodPtrOutput {
	return o.ToActionKafkaMethodPtrOutputWithContext(context.Background())
}

func (o ActionKafkaMethodOutput) ToActionKafkaMethodPtrOutputWithContext(ctx context.Context) ActionKafkaMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionKafkaMethod) *ActionKafkaMethod {
		return &v
	}).(ActionKafkaMethodPtrOutput)
}

func (o ActionKafkaMethodOutput) ToOutput(ctx context.Context) pulumix.Output[ActionKafkaMethod] {
	return pulumix.Output[ActionKafkaMethod]{
		OutputState: o.OutputState,
	}
}

type ActionKafkaMethodPtrOutput struct{ *pulumi.OutputState }

func (ActionKafkaMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionKafkaMethod)(nil)).Elem()
}

func (o ActionKafkaMethodPtrOutput) ToActionKafkaMethodPtrOutput() ActionKafkaMethodPtrOutput {
	return o
}

func (o ActionKafkaMethodPtrOutput) ToActionKafkaMethodPtrOutputWithContext(ctx context.Context) ActionKafkaMethodPtrOutput {
	return o
}

func (o ActionKafkaMethodPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionKafkaMethod] {
	return pulumix.Output[*ActionKafkaMethod]{
		OutputState: o.OutputState,
	}
}

func (o ActionKafkaMethodPtrOutput) Elem() ActionKafkaMethodOutput {
	return o.ApplyT(func(v *ActionKafkaMethod) ActionKafkaMethod {
		if v != nil {
			return *v
		}
		var ret ActionKafkaMethod
		return ret
	}).(ActionKafkaMethodOutput)
}

type ActionUserProperties struct {
	ArrayProps   map[string]ActionUserPropertiesArrayProps   `pulumi:"arrayProps"`
	BooleanProps map[string]ActionUserPropertiesBooleanProps `pulumi:"booleanProps"`
	NumberProps  map[string]ActionUserPropertiesNumberProps  `pulumi:"numberProps"`
	ObjectProps  map[string]ActionUserPropertiesObjectProps  `pulumi:"objectProps"`
	StringProps  map[string]ActionUserPropertiesStringProps  `pulumi:"stringProps"`
}

// ActionUserPropertiesInput is an input type that accepts ActionUserPropertiesArgs and ActionUserPropertiesOutput values.
// You can construct a concrete instance of `ActionUserPropertiesInput` via:
//
//	ActionUserPropertiesArgs{...}
type ActionUserPropertiesInput interface {
	pulumi.Input

	ToActionUserPropertiesOutput() ActionUserPropertiesOutput
	ToActionUserPropertiesOutputWithContext(context.Context) ActionUserPropertiesOutput
}

type ActionUserPropertiesArgs struct {
	ArrayProps   ActionUserPropertiesArrayPropsMapInput   `pulumi:"arrayProps"`
	BooleanProps ActionUserPropertiesBooleanPropsMapInput `pulumi:"booleanProps"`
	NumberProps  ActionUserPropertiesNumberPropsMapInput  `pulumi:"numberProps"`
	ObjectProps  ActionUserPropertiesObjectPropsMapInput  `pulumi:"objectProps"`
	StringProps  ActionUserPropertiesStringPropsMapInput  `pulumi:"stringProps"`
}

func (ActionUserPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserProperties)(nil)).Elem()
}

func (i ActionUserPropertiesArgs) ToActionUserPropertiesOutput() ActionUserPropertiesOutput {
	return i.ToActionUserPropertiesOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArgs) ToActionUserPropertiesOutputWithContext(ctx context.Context) ActionUserPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesOutput)
}

func (i ActionUserPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserProperties] {
	return pulumix.Output[ActionUserProperties]{
		OutputState: i.ToActionUserPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i ActionUserPropertiesArgs) ToActionUserPropertiesPtrOutput() ActionUserPropertiesPtrOutput {
	return i.ToActionUserPropertiesPtrOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArgs) ToActionUserPropertiesPtrOutputWithContext(ctx context.Context) ActionUserPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesOutput).ToActionUserPropertiesPtrOutputWithContext(ctx)
}

// ActionUserPropertiesPtrInput is an input type that accepts ActionUserPropertiesArgs, ActionUserPropertiesPtr and ActionUserPropertiesPtrOutput values.
// You can construct a concrete instance of `ActionUserPropertiesPtrInput` via:
//
//	        ActionUserPropertiesArgs{...}
//
//	or:
//
//	        nil
type ActionUserPropertiesPtrInput interface {
	pulumi.Input

	ToActionUserPropertiesPtrOutput() ActionUserPropertiesPtrOutput
	ToActionUserPropertiesPtrOutputWithContext(context.Context) ActionUserPropertiesPtrOutput
}

type actionUserPropertiesPtrType ActionUserPropertiesArgs

func ActionUserPropertiesPtr(v *ActionUserPropertiesArgs) ActionUserPropertiesPtrInput {
	return (*actionUserPropertiesPtrType)(v)
}

func (*actionUserPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserProperties)(nil)).Elem()
}

func (i *actionUserPropertiesPtrType) ToActionUserPropertiesPtrOutput() ActionUserPropertiesPtrOutput {
	return i.ToActionUserPropertiesPtrOutputWithContext(context.Background())
}

func (i *actionUserPropertiesPtrType) ToActionUserPropertiesPtrOutputWithContext(ctx context.Context) ActionUserPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesPtrOutput)
}

func (i *actionUserPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionUserProperties] {
	return pulumix.Output[*ActionUserProperties]{
		OutputState: i.ToActionUserPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserProperties)(nil)).Elem()
}

func (o ActionUserPropertiesOutput) ToActionUserPropertiesOutput() ActionUserPropertiesOutput {
	return o
}

func (o ActionUserPropertiesOutput) ToActionUserPropertiesOutputWithContext(ctx context.Context) ActionUserPropertiesOutput {
	return o
}

func (o ActionUserPropertiesOutput) ToActionUserPropertiesPtrOutput() ActionUserPropertiesPtrOutput {
	return o.ToActionUserPropertiesPtrOutputWithContext(context.Background())
}

func (o ActionUserPropertiesOutput) ToActionUserPropertiesPtrOutputWithContext(ctx context.Context) ActionUserPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionUserProperties) *ActionUserProperties {
		return &v
	}).(ActionUserPropertiesPtrOutput)
}

func (o ActionUserPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserProperties] {
	return pulumix.Output[ActionUserProperties]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesOutput) ArrayProps() ActionUserPropertiesArrayPropsMapOutput {
	return o.ApplyT(func(v ActionUserProperties) map[string]ActionUserPropertiesArrayProps { return v.ArrayProps }).(ActionUserPropertiesArrayPropsMapOutput)
}

func (o ActionUserPropertiesOutput) BooleanProps() ActionUserPropertiesBooleanPropsMapOutput {
	return o.ApplyT(func(v ActionUserProperties) map[string]ActionUserPropertiesBooleanProps { return v.BooleanProps }).(ActionUserPropertiesBooleanPropsMapOutput)
}

func (o ActionUserPropertiesOutput) NumberProps() ActionUserPropertiesNumberPropsMapOutput {
	return o.ApplyT(func(v ActionUserProperties) map[string]ActionUserPropertiesNumberProps { return v.NumberProps }).(ActionUserPropertiesNumberPropsMapOutput)
}

func (o ActionUserPropertiesOutput) ObjectProps() ActionUserPropertiesObjectPropsMapOutput {
	return o.ApplyT(func(v ActionUserProperties) map[string]ActionUserPropertiesObjectProps { return v.ObjectProps }).(ActionUserPropertiesObjectPropsMapOutput)
}

func (o ActionUserPropertiesOutput) StringProps() ActionUserPropertiesStringPropsMapOutput {
	return o.ApplyT(func(v ActionUserProperties) map[string]ActionUserPropertiesStringProps { return v.StringProps }).(ActionUserPropertiesStringPropsMapOutput)
}

type ActionUserPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserProperties)(nil)).Elem()
}

func (o ActionUserPropertiesPtrOutput) ToActionUserPropertiesPtrOutput() ActionUserPropertiesPtrOutput {
	return o
}

func (o ActionUserPropertiesPtrOutput) ToActionUserPropertiesPtrOutputWithContext(ctx context.Context) ActionUserPropertiesPtrOutput {
	return o
}

func (o ActionUserPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionUserProperties] {
	return pulumix.Output[*ActionUserProperties]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesPtrOutput) Elem() ActionUserPropertiesOutput {
	return o.ApplyT(func(v *ActionUserProperties) ActionUserProperties {
		if v != nil {
			return *v
		}
		var ret ActionUserProperties
		return ret
	}).(ActionUserPropertiesOutput)
}

func (o ActionUserPropertiesPtrOutput) ArrayProps() ActionUserPropertiesArrayPropsMapOutput {
	return o.ApplyT(func(v *ActionUserProperties) map[string]ActionUserPropertiesArrayProps {
		if v == nil {
			return nil
		}
		return v.ArrayProps
	}).(ActionUserPropertiesArrayPropsMapOutput)
}

func (o ActionUserPropertiesPtrOutput) BooleanProps() ActionUserPropertiesBooleanPropsMapOutput {
	return o.ApplyT(func(v *ActionUserProperties) map[string]ActionUserPropertiesBooleanProps {
		if v == nil {
			return nil
		}
		return v.BooleanProps
	}).(ActionUserPropertiesBooleanPropsMapOutput)
}

func (o ActionUserPropertiesPtrOutput) NumberProps() ActionUserPropertiesNumberPropsMapOutput {
	return o.ApplyT(func(v *ActionUserProperties) map[string]ActionUserPropertiesNumberProps {
		if v == nil {
			return nil
		}
		return v.NumberProps
	}).(ActionUserPropertiesNumberPropsMapOutput)
}

func (o ActionUserPropertiesPtrOutput) ObjectProps() ActionUserPropertiesObjectPropsMapOutput {
	return o.ApplyT(func(v *ActionUserProperties) map[string]ActionUserPropertiesObjectProps {
		if v == nil {
			return nil
		}
		return v.ObjectProps
	}).(ActionUserPropertiesObjectPropsMapOutput)
}

func (o ActionUserPropertiesPtrOutput) StringProps() ActionUserPropertiesStringPropsMapOutput {
	return o.ApplyT(func(v *ActionUserProperties) map[string]ActionUserPropertiesStringProps {
		if v == nil {
			return nil
		}
		return v.StringProps
	}).(ActionUserPropertiesStringPropsMapOutput)
}

type ActionUserPropertiesArrayProps struct {
	BooleanItems   *ActionUserPropertiesArrayPropsBooleanItems `pulumi:"booleanItems"`
	Dataset        *ActionUserPropertiesArrayPropsDataset      `pulumi:"dataset"`
	DefaultJqQuery *string                                     `pulumi:"defaultJqQuery"`
	DependsOns     []string                                    `pulumi:"dependsOns"`
	Description    *string                                     `pulumi:"description"`
	Icon           *string                                     `pulumi:"icon"`
	MaxItems       *int                                        `pulumi:"maxItems"`
	MinItems       *int                                        `pulumi:"minItems"`
	NumberItems    *ActionUserPropertiesArrayPropsNumberItems  `pulumi:"numberItems"`
	ObjectItems    *ActionUserPropertiesArrayPropsObjectItems  `pulumi:"objectItems"`
	Required       *bool                                       `pulumi:"required"`
	StringItems    *ActionUserPropertiesArrayPropsStringItems  `pulumi:"stringItems"`
	Title          *string                                     `pulumi:"title"`
}

// ActionUserPropertiesArrayPropsInput is an input type that accepts ActionUserPropertiesArrayPropsArgs and ActionUserPropertiesArrayPropsOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsInput` via:
//
//	ActionUserPropertiesArrayPropsArgs{...}
type ActionUserPropertiesArrayPropsInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsOutput() ActionUserPropertiesArrayPropsOutput
	ToActionUserPropertiesArrayPropsOutputWithContext(context.Context) ActionUserPropertiesArrayPropsOutput
}

type ActionUserPropertiesArrayPropsArgs struct {
	BooleanItems   ActionUserPropertiesArrayPropsBooleanItemsPtrInput `pulumi:"booleanItems"`
	Dataset        ActionUserPropertiesArrayPropsDatasetPtrInput      `pulumi:"dataset"`
	DefaultJqQuery pulumi.StringPtrInput                              `pulumi:"defaultJqQuery"`
	DependsOns     pulumi.StringArrayInput                            `pulumi:"dependsOns"`
	Description    pulumi.StringPtrInput                              `pulumi:"description"`
	Icon           pulumi.StringPtrInput                              `pulumi:"icon"`
	MaxItems       pulumi.IntPtrInput                                 `pulumi:"maxItems"`
	MinItems       pulumi.IntPtrInput                                 `pulumi:"minItems"`
	NumberItems    ActionUserPropertiesArrayPropsNumberItemsPtrInput  `pulumi:"numberItems"`
	ObjectItems    ActionUserPropertiesArrayPropsObjectItemsPtrInput  `pulumi:"objectItems"`
	Required       pulumi.BoolPtrInput                                `pulumi:"required"`
	StringItems    ActionUserPropertiesArrayPropsStringItemsPtrInput  `pulumi:"stringItems"`
	Title          pulumi.StringPtrInput                              `pulumi:"title"`
}

func (ActionUserPropertiesArrayPropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayProps)(nil)).Elem()
}

func (i ActionUserPropertiesArrayPropsArgs) ToActionUserPropertiesArrayPropsOutput() ActionUserPropertiesArrayPropsOutput {
	return i.ToActionUserPropertiesArrayPropsOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsArgs) ToActionUserPropertiesArrayPropsOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsOutput)
}

func (i ActionUserPropertiesArrayPropsArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayProps] {
	return pulumix.Output[ActionUserPropertiesArrayProps]{
		OutputState: i.ToActionUserPropertiesArrayPropsOutputWithContext(ctx).OutputState,
	}
}

// ActionUserPropertiesArrayPropsMapInput is an input type that accepts ActionUserPropertiesArrayPropsMap and ActionUserPropertiesArrayPropsMapOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsMapInput` via:
//
//	ActionUserPropertiesArrayPropsMap{ "key": ActionUserPropertiesArrayPropsArgs{...} }
type ActionUserPropertiesArrayPropsMapInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsMapOutput() ActionUserPropertiesArrayPropsMapOutput
	ToActionUserPropertiesArrayPropsMapOutputWithContext(context.Context) ActionUserPropertiesArrayPropsMapOutput
}

type ActionUserPropertiesArrayPropsMap map[string]ActionUserPropertiesArrayPropsInput

func (ActionUserPropertiesArrayPropsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ActionUserPropertiesArrayProps)(nil)).Elem()
}

func (i ActionUserPropertiesArrayPropsMap) ToActionUserPropertiesArrayPropsMapOutput() ActionUserPropertiesArrayPropsMapOutput {
	return i.ToActionUserPropertiesArrayPropsMapOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsMap) ToActionUserPropertiesArrayPropsMapOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsMapOutput)
}

func (i ActionUserPropertiesArrayPropsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]ActionUserPropertiesArrayProps] {
	return pulumix.Output[map[string]ActionUserPropertiesArrayProps]{
		OutputState: i.ToActionUserPropertiesArrayPropsMapOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesArrayPropsOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayProps)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsOutput) ToActionUserPropertiesArrayPropsOutput() ActionUserPropertiesArrayPropsOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsOutput) ToActionUserPropertiesArrayPropsOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayProps] {
	return pulumix.Output[ActionUserPropertiesArrayProps]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsOutput) BooleanItems() ActionUserPropertiesArrayPropsBooleanItemsPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayProps) *ActionUserPropertiesArrayPropsBooleanItems {
		return v.BooleanItems
	}).(ActionUserPropertiesArrayPropsBooleanItemsPtrOutput)
}

func (o ActionUserPropertiesArrayPropsOutput) Dataset() ActionUserPropertiesArrayPropsDatasetPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayProps) *ActionUserPropertiesArrayPropsDataset { return v.Dataset }).(ActionUserPropertiesArrayPropsDatasetPtrOutput)
}

func (o ActionUserPropertiesArrayPropsOutput) DefaultJqQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayProps) *string { return v.DefaultJqQuery }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesArrayPropsOutput) DependsOns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayProps) []string { return v.DependsOns }).(pulumi.StringArrayOutput)
}

func (o ActionUserPropertiesArrayPropsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayProps) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesArrayPropsOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayProps) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesArrayPropsOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayProps) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

func (o ActionUserPropertiesArrayPropsOutput) MinItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayProps) *int { return v.MinItems }).(pulumi.IntPtrOutput)
}

func (o ActionUserPropertiesArrayPropsOutput) NumberItems() ActionUserPropertiesArrayPropsNumberItemsPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayProps) *ActionUserPropertiesArrayPropsNumberItems {
		return v.NumberItems
	}).(ActionUserPropertiesArrayPropsNumberItemsPtrOutput)
}

func (o ActionUserPropertiesArrayPropsOutput) ObjectItems() ActionUserPropertiesArrayPropsObjectItemsPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayProps) *ActionUserPropertiesArrayPropsObjectItems {
		return v.ObjectItems
	}).(ActionUserPropertiesArrayPropsObjectItemsPtrOutput)
}

func (o ActionUserPropertiesArrayPropsOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayProps) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o ActionUserPropertiesArrayPropsOutput) StringItems() ActionUserPropertiesArrayPropsStringItemsPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayProps) *ActionUserPropertiesArrayPropsStringItems {
		return v.StringItems
	}).(ActionUserPropertiesArrayPropsStringItemsPtrOutput)
}

func (o ActionUserPropertiesArrayPropsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayProps) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ActionUserPropertiesArrayPropsMapOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ActionUserPropertiesArrayProps)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsMapOutput) ToActionUserPropertiesArrayPropsMapOutput() ActionUserPropertiesArrayPropsMapOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsMapOutput) ToActionUserPropertiesArrayPropsMapOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsMapOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]ActionUserPropertiesArrayProps] {
	return pulumix.Output[map[string]ActionUserPropertiesArrayProps]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsMapOutput) MapIndex(k pulumi.StringInput) ActionUserPropertiesArrayPropsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ActionUserPropertiesArrayProps {
		return vs[0].(map[string]ActionUserPropertiesArrayProps)[vs[1].(string)]
	}).(ActionUserPropertiesArrayPropsOutput)
}

type ActionUserPropertiesArrayPropsBooleanItems struct {
	Defaults []bool `pulumi:"defaults"`
}

// ActionUserPropertiesArrayPropsBooleanItemsInput is an input type that accepts ActionUserPropertiesArrayPropsBooleanItemsArgs and ActionUserPropertiesArrayPropsBooleanItemsOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsBooleanItemsInput` via:
//
//	ActionUserPropertiesArrayPropsBooleanItemsArgs{...}
type ActionUserPropertiesArrayPropsBooleanItemsInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsBooleanItemsOutput() ActionUserPropertiesArrayPropsBooleanItemsOutput
	ToActionUserPropertiesArrayPropsBooleanItemsOutputWithContext(context.Context) ActionUserPropertiesArrayPropsBooleanItemsOutput
}

type ActionUserPropertiesArrayPropsBooleanItemsArgs struct {
	Defaults pulumi.BoolArrayInput `pulumi:"defaults"`
}

func (ActionUserPropertiesArrayPropsBooleanItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsBooleanItems)(nil)).Elem()
}

func (i ActionUserPropertiesArrayPropsBooleanItemsArgs) ToActionUserPropertiesArrayPropsBooleanItemsOutput() ActionUserPropertiesArrayPropsBooleanItemsOutput {
	return i.ToActionUserPropertiesArrayPropsBooleanItemsOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsBooleanItemsArgs) ToActionUserPropertiesArrayPropsBooleanItemsOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsBooleanItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsBooleanItemsOutput)
}

func (i ActionUserPropertiesArrayPropsBooleanItemsArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsBooleanItems] {
	return pulumix.Output[ActionUserPropertiesArrayPropsBooleanItems]{
		OutputState: i.ToActionUserPropertiesArrayPropsBooleanItemsOutputWithContext(ctx).OutputState,
	}
}

func (i ActionUserPropertiesArrayPropsBooleanItemsArgs) ToActionUserPropertiesArrayPropsBooleanItemsPtrOutput() ActionUserPropertiesArrayPropsBooleanItemsPtrOutput {
	return i.ToActionUserPropertiesArrayPropsBooleanItemsPtrOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsBooleanItemsArgs) ToActionUserPropertiesArrayPropsBooleanItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsBooleanItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsBooleanItemsOutput).ToActionUserPropertiesArrayPropsBooleanItemsPtrOutputWithContext(ctx)
}

// ActionUserPropertiesArrayPropsBooleanItemsPtrInput is an input type that accepts ActionUserPropertiesArrayPropsBooleanItemsArgs, ActionUserPropertiesArrayPropsBooleanItemsPtr and ActionUserPropertiesArrayPropsBooleanItemsPtrOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsBooleanItemsPtrInput` via:
//
//	        ActionUserPropertiesArrayPropsBooleanItemsArgs{...}
//
//	or:
//
//	        nil
type ActionUserPropertiesArrayPropsBooleanItemsPtrInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsBooleanItemsPtrOutput() ActionUserPropertiesArrayPropsBooleanItemsPtrOutput
	ToActionUserPropertiesArrayPropsBooleanItemsPtrOutputWithContext(context.Context) ActionUserPropertiesArrayPropsBooleanItemsPtrOutput
}

type actionUserPropertiesArrayPropsBooleanItemsPtrType ActionUserPropertiesArrayPropsBooleanItemsArgs

func ActionUserPropertiesArrayPropsBooleanItemsPtr(v *ActionUserPropertiesArrayPropsBooleanItemsArgs) ActionUserPropertiesArrayPropsBooleanItemsPtrInput {
	return (*actionUserPropertiesArrayPropsBooleanItemsPtrType)(v)
}

func (*actionUserPropertiesArrayPropsBooleanItemsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesArrayPropsBooleanItems)(nil)).Elem()
}

func (i *actionUserPropertiesArrayPropsBooleanItemsPtrType) ToActionUserPropertiesArrayPropsBooleanItemsPtrOutput() ActionUserPropertiesArrayPropsBooleanItemsPtrOutput {
	return i.ToActionUserPropertiesArrayPropsBooleanItemsPtrOutputWithContext(context.Background())
}

func (i *actionUserPropertiesArrayPropsBooleanItemsPtrType) ToActionUserPropertiesArrayPropsBooleanItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsBooleanItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsBooleanItemsPtrOutput)
}

func (i *actionUserPropertiesArrayPropsBooleanItemsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesArrayPropsBooleanItems] {
	return pulumix.Output[*ActionUserPropertiesArrayPropsBooleanItems]{
		OutputState: i.ToActionUserPropertiesArrayPropsBooleanItemsPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesArrayPropsBooleanItemsOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsBooleanItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsBooleanItems)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsBooleanItemsOutput) ToActionUserPropertiesArrayPropsBooleanItemsOutput() ActionUserPropertiesArrayPropsBooleanItemsOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsBooleanItemsOutput) ToActionUserPropertiesArrayPropsBooleanItemsOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsBooleanItemsOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsBooleanItemsOutput) ToActionUserPropertiesArrayPropsBooleanItemsPtrOutput() ActionUserPropertiesArrayPropsBooleanItemsPtrOutput {
	return o.ToActionUserPropertiesArrayPropsBooleanItemsPtrOutputWithContext(context.Background())
}

func (o ActionUserPropertiesArrayPropsBooleanItemsOutput) ToActionUserPropertiesArrayPropsBooleanItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsBooleanItemsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionUserPropertiesArrayPropsBooleanItems) *ActionUserPropertiesArrayPropsBooleanItems {
		return &v
	}).(ActionUserPropertiesArrayPropsBooleanItemsPtrOutput)
}

func (o ActionUserPropertiesArrayPropsBooleanItemsOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsBooleanItems] {
	return pulumix.Output[ActionUserPropertiesArrayPropsBooleanItems]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsBooleanItemsOutput) Defaults() pulumi.BoolArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsBooleanItems) []bool { return v.Defaults }).(pulumi.BoolArrayOutput)
}

type ActionUserPropertiesArrayPropsBooleanItemsPtrOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsBooleanItemsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesArrayPropsBooleanItems)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsBooleanItemsPtrOutput) ToActionUserPropertiesArrayPropsBooleanItemsPtrOutput() ActionUserPropertiesArrayPropsBooleanItemsPtrOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsBooleanItemsPtrOutput) ToActionUserPropertiesArrayPropsBooleanItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsBooleanItemsPtrOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsBooleanItemsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesArrayPropsBooleanItems] {
	return pulumix.Output[*ActionUserPropertiesArrayPropsBooleanItems]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsBooleanItemsPtrOutput) Elem() ActionUserPropertiesArrayPropsBooleanItemsOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsBooleanItems) ActionUserPropertiesArrayPropsBooleanItems {
		if v != nil {
			return *v
		}
		var ret ActionUserPropertiesArrayPropsBooleanItems
		return ret
	}).(ActionUserPropertiesArrayPropsBooleanItemsOutput)
}

func (o ActionUserPropertiesArrayPropsBooleanItemsPtrOutput) Defaults() pulumi.BoolArrayOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsBooleanItems) []bool {
		if v == nil {
			return nil
		}
		return v.Defaults
	}).(pulumi.BoolArrayOutput)
}

type ActionUserPropertiesArrayPropsDataset struct {
	Combinator string                                      `pulumi:"combinator"`
	Rules      []ActionUserPropertiesArrayPropsDatasetRule `pulumi:"rules"`
}

// ActionUserPropertiesArrayPropsDatasetInput is an input type that accepts ActionUserPropertiesArrayPropsDatasetArgs and ActionUserPropertiesArrayPropsDatasetOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsDatasetInput` via:
//
//	ActionUserPropertiesArrayPropsDatasetArgs{...}
type ActionUserPropertiesArrayPropsDatasetInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsDatasetOutput() ActionUserPropertiesArrayPropsDatasetOutput
	ToActionUserPropertiesArrayPropsDatasetOutputWithContext(context.Context) ActionUserPropertiesArrayPropsDatasetOutput
}

type ActionUserPropertiesArrayPropsDatasetArgs struct {
	Combinator pulumi.StringInput                                  `pulumi:"combinator"`
	Rules      ActionUserPropertiesArrayPropsDatasetRuleArrayInput `pulumi:"rules"`
}

func (ActionUserPropertiesArrayPropsDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsDataset)(nil)).Elem()
}

func (i ActionUserPropertiesArrayPropsDatasetArgs) ToActionUserPropertiesArrayPropsDatasetOutput() ActionUserPropertiesArrayPropsDatasetOutput {
	return i.ToActionUserPropertiesArrayPropsDatasetOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsDatasetArgs) ToActionUserPropertiesArrayPropsDatasetOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsDatasetOutput)
}

func (i ActionUserPropertiesArrayPropsDatasetArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsDataset] {
	return pulumix.Output[ActionUserPropertiesArrayPropsDataset]{
		OutputState: i.ToActionUserPropertiesArrayPropsDatasetOutputWithContext(ctx).OutputState,
	}
}

func (i ActionUserPropertiesArrayPropsDatasetArgs) ToActionUserPropertiesArrayPropsDatasetPtrOutput() ActionUserPropertiesArrayPropsDatasetPtrOutput {
	return i.ToActionUserPropertiesArrayPropsDatasetPtrOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsDatasetArgs) ToActionUserPropertiesArrayPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsDatasetOutput).ToActionUserPropertiesArrayPropsDatasetPtrOutputWithContext(ctx)
}

// ActionUserPropertiesArrayPropsDatasetPtrInput is an input type that accepts ActionUserPropertiesArrayPropsDatasetArgs, ActionUserPropertiesArrayPropsDatasetPtr and ActionUserPropertiesArrayPropsDatasetPtrOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsDatasetPtrInput` via:
//
//	        ActionUserPropertiesArrayPropsDatasetArgs{...}
//
//	or:
//
//	        nil
type ActionUserPropertiesArrayPropsDatasetPtrInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsDatasetPtrOutput() ActionUserPropertiesArrayPropsDatasetPtrOutput
	ToActionUserPropertiesArrayPropsDatasetPtrOutputWithContext(context.Context) ActionUserPropertiesArrayPropsDatasetPtrOutput
}

type actionUserPropertiesArrayPropsDatasetPtrType ActionUserPropertiesArrayPropsDatasetArgs

func ActionUserPropertiesArrayPropsDatasetPtr(v *ActionUserPropertiesArrayPropsDatasetArgs) ActionUserPropertiesArrayPropsDatasetPtrInput {
	return (*actionUserPropertiesArrayPropsDatasetPtrType)(v)
}

func (*actionUserPropertiesArrayPropsDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesArrayPropsDataset)(nil)).Elem()
}

func (i *actionUserPropertiesArrayPropsDatasetPtrType) ToActionUserPropertiesArrayPropsDatasetPtrOutput() ActionUserPropertiesArrayPropsDatasetPtrOutput {
	return i.ToActionUserPropertiesArrayPropsDatasetPtrOutputWithContext(context.Background())
}

func (i *actionUserPropertiesArrayPropsDatasetPtrType) ToActionUserPropertiesArrayPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsDatasetPtrOutput)
}

func (i *actionUserPropertiesArrayPropsDatasetPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesArrayPropsDataset] {
	return pulumix.Output[*ActionUserPropertiesArrayPropsDataset]{
		OutputState: i.ToActionUserPropertiesArrayPropsDatasetPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesArrayPropsDatasetOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsDataset)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsDatasetOutput) ToActionUserPropertiesArrayPropsDatasetOutput() ActionUserPropertiesArrayPropsDatasetOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsDatasetOutput) ToActionUserPropertiesArrayPropsDatasetOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsDatasetOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsDatasetOutput) ToActionUserPropertiesArrayPropsDatasetPtrOutput() ActionUserPropertiesArrayPropsDatasetPtrOutput {
	return o.ToActionUserPropertiesArrayPropsDatasetPtrOutputWithContext(context.Background())
}

func (o ActionUserPropertiesArrayPropsDatasetOutput) ToActionUserPropertiesArrayPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionUserPropertiesArrayPropsDataset) *ActionUserPropertiesArrayPropsDataset {
		return &v
	}).(ActionUserPropertiesArrayPropsDatasetPtrOutput)
}

func (o ActionUserPropertiesArrayPropsDatasetOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsDataset] {
	return pulumix.Output[ActionUserPropertiesArrayPropsDataset]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsDatasetOutput) Combinator() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsDataset) string { return v.Combinator }).(pulumi.StringOutput)
}

func (o ActionUserPropertiesArrayPropsDatasetOutput) Rules() ActionUserPropertiesArrayPropsDatasetRuleArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsDataset) []ActionUserPropertiesArrayPropsDatasetRule {
		return v.Rules
	}).(ActionUserPropertiesArrayPropsDatasetRuleArrayOutput)
}

type ActionUserPropertiesArrayPropsDatasetPtrOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesArrayPropsDataset)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsDatasetPtrOutput) ToActionUserPropertiesArrayPropsDatasetPtrOutput() ActionUserPropertiesArrayPropsDatasetPtrOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsDatasetPtrOutput) ToActionUserPropertiesArrayPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsDatasetPtrOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsDatasetPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesArrayPropsDataset] {
	return pulumix.Output[*ActionUserPropertiesArrayPropsDataset]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsDatasetPtrOutput) Elem() ActionUserPropertiesArrayPropsDatasetOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsDataset) ActionUserPropertiesArrayPropsDataset {
		if v != nil {
			return *v
		}
		var ret ActionUserPropertiesArrayPropsDataset
		return ret
	}).(ActionUserPropertiesArrayPropsDatasetOutput)
}

func (o ActionUserPropertiesArrayPropsDatasetPtrOutput) Combinator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Combinator
	}).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesArrayPropsDatasetPtrOutput) Rules() ActionUserPropertiesArrayPropsDatasetRuleArrayOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsDataset) []ActionUserPropertiesArrayPropsDatasetRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ActionUserPropertiesArrayPropsDatasetRuleArrayOutput)
}

type ActionUserPropertiesArrayPropsDatasetRule struct {
	Blueprint *string                                        `pulumi:"blueprint"`
	Operator  string                                         `pulumi:"operator"`
	Property  *string                                        `pulumi:"property"`
	Value     ActionUserPropertiesArrayPropsDatasetRuleValue `pulumi:"value"`
}

// ActionUserPropertiesArrayPropsDatasetRuleInput is an input type that accepts ActionUserPropertiesArrayPropsDatasetRuleArgs and ActionUserPropertiesArrayPropsDatasetRuleOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsDatasetRuleInput` via:
//
//	ActionUserPropertiesArrayPropsDatasetRuleArgs{...}
type ActionUserPropertiesArrayPropsDatasetRuleInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsDatasetRuleOutput() ActionUserPropertiesArrayPropsDatasetRuleOutput
	ToActionUserPropertiesArrayPropsDatasetRuleOutputWithContext(context.Context) ActionUserPropertiesArrayPropsDatasetRuleOutput
}

type ActionUserPropertiesArrayPropsDatasetRuleArgs struct {
	Blueprint pulumi.StringPtrInput                               `pulumi:"blueprint"`
	Operator  pulumi.StringInput                                  `pulumi:"operator"`
	Property  pulumi.StringPtrInput                               `pulumi:"property"`
	Value     ActionUserPropertiesArrayPropsDatasetRuleValueInput `pulumi:"value"`
}

func (ActionUserPropertiesArrayPropsDatasetRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsDatasetRule)(nil)).Elem()
}

func (i ActionUserPropertiesArrayPropsDatasetRuleArgs) ToActionUserPropertiesArrayPropsDatasetRuleOutput() ActionUserPropertiesArrayPropsDatasetRuleOutput {
	return i.ToActionUserPropertiesArrayPropsDatasetRuleOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsDatasetRuleArgs) ToActionUserPropertiesArrayPropsDatasetRuleOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsDatasetRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsDatasetRuleOutput)
}

func (i ActionUserPropertiesArrayPropsDatasetRuleArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsDatasetRule] {
	return pulumix.Output[ActionUserPropertiesArrayPropsDatasetRule]{
		OutputState: i.ToActionUserPropertiesArrayPropsDatasetRuleOutputWithContext(ctx).OutputState,
	}
}

// ActionUserPropertiesArrayPropsDatasetRuleArrayInput is an input type that accepts ActionUserPropertiesArrayPropsDatasetRuleArray and ActionUserPropertiesArrayPropsDatasetRuleArrayOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsDatasetRuleArrayInput` via:
//
//	ActionUserPropertiesArrayPropsDatasetRuleArray{ ActionUserPropertiesArrayPropsDatasetRuleArgs{...} }
type ActionUserPropertiesArrayPropsDatasetRuleArrayInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsDatasetRuleArrayOutput() ActionUserPropertiesArrayPropsDatasetRuleArrayOutput
	ToActionUserPropertiesArrayPropsDatasetRuleArrayOutputWithContext(context.Context) ActionUserPropertiesArrayPropsDatasetRuleArrayOutput
}

type ActionUserPropertiesArrayPropsDatasetRuleArray []ActionUserPropertiesArrayPropsDatasetRuleInput

func (ActionUserPropertiesArrayPropsDatasetRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionUserPropertiesArrayPropsDatasetRule)(nil)).Elem()
}

func (i ActionUserPropertiesArrayPropsDatasetRuleArray) ToActionUserPropertiesArrayPropsDatasetRuleArrayOutput() ActionUserPropertiesArrayPropsDatasetRuleArrayOutput {
	return i.ToActionUserPropertiesArrayPropsDatasetRuleArrayOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsDatasetRuleArray) ToActionUserPropertiesArrayPropsDatasetRuleArrayOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsDatasetRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsDatasetRuleArrayOutput)
}

func (i ActionUserPropertiesArrayPropsDatasetRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]ActionUserPropertiesArrayPropsDatasetRule] {
	return pulumix.Output[[]ActionUserPropertiesArrayPropsDatasetRule]{
		OutputState: i.ToActionUserPropertiesArrayPropsDatasetRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesArrayPropsDatasetRuleOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsDatasetRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsDatasetRule)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsDatasetRuleOutput) ToActionUserPropertiesArrayPropsDatasetRuleOutput() ActionUserPropertiesArrayPropsDatasetRuleOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsDatasetRuleOutput) ToActionUserPropertiesArrayPropsDatasetRuleOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsDatasetRuleOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsDatasetRuleOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsDatasetRule] {
	return pulumix.Output[ActionUserPropertiesArrayPropsDatasetRule]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsDatasetRuleOutput) Blueprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsDatasetRule) *string { return v.Blueprint }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesArrayPropsDatasetRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsDatasetRule) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ActionUserPropertiesArrayPropsDatasetRuleOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsDatasetRule) *string { return v.Property }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesArrayPropsDatasetRuleOutput) Value() ActionUserPropertiesArrayPropsDatasetRuleValueOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsDatasetRule) ActionUserPropertiesArrayPropsDatasetRuleValue {
		return v.Value
	}).(ActionUserPropertiesArrayPropsDatasetRuleValueOutput)
}

type ActionUserPropertiesArrayPropsDatasetRuleArrayOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsDatasetRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionUserPropertiesArrayPropsDatasetRule)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsDatasetRuleArrayOutput) ToActionUserPropertiesArrayPropsDatasetRuleArrayOutput() ActionUserPropertiesArrayPropsDatasetRuleArrayOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsDatasetRuleArrayOutput) ToActionUserPropertiesArrayPropsDatasetRuleArrayOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsDatasetRuleArrayOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsDatasetRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ActionUserPropertiesArrayPropsDatasetRule] {
	return pulumix.Output[[]ActionUserPropertiesArrayPropsDatasetRule]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsDatasetRuleArrayOutput) Index(i pulumi.IntInput) ActionUserPropertiesArrayPropsDatasetRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionUserPropertiesArrayPropsDatasetRule {
		return vs[0].([]ActionUserPropertiesArrayPropsDatasetRule)[vs[1].(int)]
	}).(ActionUserPropertiesArrayPropsDatasetRuleOutput)
}

type ActionUserPropertiesArrayPropsDatasetRuleValue struct {
	JqQuery string `pulumi:"jqQuery"`
}

// ActionUserPropertiesArrayPropsDatasetRuleValueInput is an input type that accepts ActionUserPropertiesArrayPropsDatasetRuleValueArgs and ActionUserPropertiesArrayPropsDatasetRuleValueOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsDatasetRuleValueInput` via:
//
//	ActionUserPropertiesArrayPropsDatasetRuleValueArgs{...}
type ActionUserPropertiesArrayPropsDatasetRuleValueInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsDatasetRuleValueOutput() ActionUserPropertiesArrayPropsDatasetRuleValueOutput
	ToActionUserPropertiesArrayPropsDatasetRuleValueOutputWithContext(context.Context) ActionUserPropertiesArrayPropsDatasetRuleValueOutput
}

type ActionUserPropertiesArrayPropsDatasetRuleValueArgs struct {
	JqQuery pulumi.StringInput `pulumi:"jqQuery"`
}

func (ActionUserPropertiesArrayPropsDatasetRuleValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsDatasetRuleValue)(nil)).Elem()
}

func (i ActionUserPropertiesArrayPropsDatasetRuleValueArgs) ToActionUserPropertiesArrayPropsDatasetRuleValueOutput() ActionUserPropertiesArrayPropsDatasetRuleValueOutput {
	return i.ToActionUserPropertiesArrayPropsDatasetRuleValueOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsDatasetRuleValueArgs) ToActionUserPropertiesArrayPropsDatasetRuleValueOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsDatasetRuleValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsDatasetRuleValueOutput)
}

func (i ActionUserPropertiesArrayPropsDatasetRuleValueArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsDatasetRuleValue] {
	return pulumix.Output[ActionUserPropertiesArrayPropsDatasetRuleValue]{
		OutputState: i.ToActionUserPropertiesArrayPropsDatasetRuleValueOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesArrayPropsDatasetRuleValueOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsDatasetRuleValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsDatasetRuleValue)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsDatasetRuleValueOutput) ToActionUserPropertiesArrayPropsDatasetRuleValueOutput() ActionUserPropertiesArrayPropsDatasetRuleValueOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsDatasetRuleValueOutput) ToActionUserPropertiesArrayPropsDatasetRuleValueOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsDatasetRuleValueOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsDatasetRuleValueOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsDatasetRuleValue] {
	return pulumix.Output[ActionUserPropertiesArrayPropsDatasetRuleValue]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsDatasetRuleValueOutput) JqQuery() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsDatasetRuleValue) string { return v.JqQuery }).(pulumi.StringOutput)
}

type ActionUserPropertiesArrayPropsNumberItems struct {
	Defaults    []float64 `pulumi:"defaults"`
	EnumJqQuery *string   `pulumi:"enumJqQuery"`
	Enums       []float64 `pulumi:"enums"`
}

// ActionUserPropertiesArrayPropsNumberItemsInput is an input type that accepts ActionUserPropertiesArrayPropsNumberItemsArgs and ActionUserPropertiesArrayPropsNumberItemsOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsNumberItemsInput` via:
//
//	ActionUserPropertiesArrayPropsNumberItemsArgs{...}
type ActionUserPropertiesArrayPropsNumberItemsInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsNumberItemsOutput() ActionUserPropertiesArrayPropsNumberItemsOutput
	ToActionUserPropertiesArrayPropsNumberItemsOutputWithContext(context.Context) ActionUserPropertiesArrayPropsNumberItemsOutput
}

type ActionUserPropertiesArrayPropsNumberItemsArgs struct {
	Defaults    pulumi.Float64ArrayInput `pulumi:"defaults"`
	EnumJqQuery pulumi.StringPtrInput    `pulumi:"enumJqQuery"`
	Enums       pulumi.Float64ArrayInput `pulumi:"enums"`
}

func (ActionUserPropertiesArrayPropsNumberItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsNumberItems)(nil)).Elem()
}

func (i ActionUserPropertiesArrayPropsNumberItemsArgs) ToActionUserPropertiesArrayPropsNumberItemsOutput() ActionUserPropertiesArrayPropsNumberItemsOutput {
	return i.ToActionUserPropertiesArrayPropsNumberItemsOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsNumberItemsArgs) ToActionUserPropertiesArrayPropsNumberItemsOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsNumberItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsNumberItemsOutput)
}

func (i ActionUserPropertiesArrayPropsNumberItemsArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsNumberItems] {
	return pulumix.Output[ActionUserPropertiesArrayPropsNumberItems]{
		OutputState: i.ToActionUserPropertiesArrayPropsNumberItemsOutputWithContext(ctx).OutputState,
	}
}

func (i ActionUserPropertiesArrayPropsNumberItemsArgs) ToActionUserPropertiesArrayPropsNumberItemsPtrOutput() ActionUserPropertiesArrayPropsNumberItemsPtrOutput {
	return i.ToActionUserPropertiesArrayPropsNumberItemsPtrOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsNumberItemsArgs) ToActionUserPropertiesArrayPropsNumberItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsNumberItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsNumberItemsOutput).ToActionUserPropertiesArrayPropsNumberItemsPtrOutputWithContext(ctx)
}

// ActionUserPropertiesArrayPropsNumberItemsPtrInput is an input type that accepts ActionUserPropertiesArrayPropsNumberItemsArgs, ActionUserPropertiesArrayPropsNumberItemsPtr and ActionUserPropertiesArrayPropsNumberItemsPtrOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsNumberItemsPtrInput` via:
//
//	        ActionUserPropertiesArrayPropsNumberItemsArgs{...}
//
//	or:
//
//	        nil
type ActionUserPropertiesArrayPropsNumberItemsPtrInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsNumberItemsPtrOutput() ActionUserPropertiesArrayPropsNumberItemsPtrOutput
	ToActionUserPropertiesArrayPropsNumberItemsPtrOutputWithContext(context.Context) ActionUserPropertiesArrayPropsNumberItemsPtrOutput
}

type actionUserPropertiesArrayPropsNumberItemsPtrType ActionUserPropertiesArrayPropsNumberItemsArgs

func ActionUserPropertiesArrayPropsNumberItemsPtr(v *ActionUserPropertiesArrayPropsNumberItemsArgs) ActionUserPropertiesArrayPropsNumberItemsPtrInput {
	return (*actionUserPropertiesArrayPropsNumberItemsPtrType)(v)
}

func (*actionUserPropertiesArrayPropsNumberItemsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesArrayPropsNumberItems)(nil)).Elem()
}

func (i *actionUserPropertiesArrayPropsNumberItemsPtrType) ToActionUserPropertiesArrayPropsNumberItemsPtrOutput() ActionUserPropertiesArrayPropsNumberItemsPtrOutput {
	return i.ToActionUserPropertiesArrayPropsNumberItemsPtrOutputWithContext(context.Background())
}

func (i *actionUserPropertiesArrayPropsNumberItemsPtrType) ToActionUserPropertiesArrayPropsNumberItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsNumberItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsNumberItemsPtrOutput)
}

func (i *actionUserPropertiesArrayPropsNumberItemsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesArrayPropsNumberItems] {
	return pulumix.Output[*ActionUserPropertiesArrayPropsNumberItems]{
		OutputState: i.ToActionUserPropertiesArrayPropsNumberItemsPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesArrayPropsNumberItemsOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsNumberItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsNumberItems)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsNumberItemsOutput) ToActionUserPropertiesArrayPropsNumberItemsOutput() ActionUserPropertiesArrayPropsNumberItemsOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsNumberItemsOutput) ToActionUserPropertiesArrayPropsNumberItemsOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsNumberItemsOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsNumberItemsOutput) ToActionUserPropertiesArrayPropsNumberItemsPtrOutput() ActionUserPropertiesArrayPropsNumberItemsPtrOutput {
	return o.ToActionUserPropertiesArrayPropsNumberItemsPtrOutputWithContext(context.Background())
}

func (o ActionUserPropertiesArrayPropsNumberItemsOutput) ToActionUserPropertiesArrayPropsNumberItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsNumberItemsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionUserPropertiesArrayPropsNumberItems) *ActionUserPropertiesArrayPropsNumberItems {
		return &v
	}).(ActionUserPropertiesArrayPropsNumberItemsPtrOutput)
}

func (o ActionUserPropertiesArrayPropsNumberItemsOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsNumberItems] {
	return pulumix.Output[ActionUserPropertiesArrayPropsNumberItems]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsNumberItemsOutput) Defaults() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsNumberItems) []float64 { return v.Defaults }).(pulumi.Float64ArrayOutput)
}

func (o ActionUserPropertiesArrayPropsNumberItemsOutput) EnumJqQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsNumberItems) *string { return v.EnumJqQuery }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesArrayPropsNumberItemsOutput) Enums() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsNumberItems) []float64 { return v.Enums }).(pulumi.Float64ArrayOutput)
}

type ActionUserPropertiesArrayPropsNumberItemsPtrOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsNumberItemsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesArrayPropsNumberItems)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsNumberItemsPtrOutput) ToActionUserPropertiesArrayPropsNumberItemsPtrOutput() ActionUserPropertiesArrayPropsNumberItemsPtrOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsNumberItemsPtrOutput) ToActionUserPropertiesArrayPropsNumberItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsNumberItemsPtrOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsNumberItemsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesArrayPropsNumberItems] {
	return pulumix.Output[*ActionUserPropertiesArrayPropsNumberItems]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsNumberItemsPtrOutput) Elem() ActionUserPropertiesArrayPropsNumberItemsOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsNumberItems) ActionUserPropertiesArrayPropsNumberItems {
		if v != nil {
			return *v
		}
		var ret ActionUserPropertiesArrayPropsNumberItems
		return ret
	}).(ActionUserPropertiesArrayPropsNumberItemsOutput)
}

func (o ActionUserPropertiesArrayPropsNumberItemsPtrOutput) Defaults() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsNumberItems) []float64 {
		if v == nil {
			return nil
		}
		return v.Defaults
	}).(pulumi.Float64ArrayOutput)
}

func (o ActionUserPropertiesArrayPropsNumberItemsPtrOutput) EnumJqQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsNumberItems) *string {
		if v == nil {
			return nil
		}
		return v.EnumJqQuery
	}).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesArrayPropsNumberItemsPtrOutput) Enums() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsNumberItems) []float64 {
		if v == nil {
			return nil
		}
		return v.Enums
	}).(pulumi.Float64ArrayOutput)
}

type ActionUserPropertiesArrayPropsObjectItems struct {
	Defaults []map[string]string `pulumi:"defaults"`
}

// ActionUserPropertiesArrayPropsObjectItemsInput is an input type that accepts ActionUserPropertiesArrayPropsObjectItemsArgs and ActionUserPropertiesArrayPropsObjectItemsOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsObjectItemsInput` via:
//
//	ActionUserPropertiesArrayPropsObjectItemsArgs{...}
type ActionUserPropertiesArrayPropsObjectItemsInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsObjectItemsOutput() ActionUserPropertiesArrayPropsObjectItemsOutput
	ToActionUserPropertiesArrayPropsObjectItemsOutputWithContext(context.Context) ActionUserPropertiesArrayPropsObjectItemsOutput
}

type ActionUserPropertiesArrayPropsObjectItemsArgs struct {
	Defaults pulumi.StringMapArrayInput `pulumi:"defaults"`
}

func (ActionUserPropertiesArrayPropsObjectItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsObjectItems)(nil)).Elem()
}

func (i ActionUserPropertiesArrayPropsObjectItemsArgs) ToActionUserPropertiesArrayPropsObjectItemsOutput() ActionUserPropertiesArrayPropsObjectItemsOutput {
	return i.ToActionUserPropertiesArrayPropsObjectItemsOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsObjectItemsArgs) ToActionUserPropertiesArrayPropsObjectItemsOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsObjectItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsObjectItemsOutput)
}

func (i ActionUserPropertiesArrayPropsObjectItemsArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsObjectItems] {
	return pulumix.Output[ActionUserPropertiesArrayPropsObjectItems]{
		OutputState: i.ToActionUserPropertiesArrayPropsObjectItemsOutputWithContext(ctx).OutputState,
	}
}

func (i ActionUserPropertiesArrayPropsObjectItemsArgs) ToActionUserPropertiesArrayPropsObjectItemsPtrOutput() ActionUserPropertiesArrayPropsObjectItemsPtrOutput {
	return i.ToActionUserPropertiesArrayPropsObjectItemsPtrOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsObjectItemsArgs) ToActionUserPropertiesArrayPropsObjectItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsObjectItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsObjectItemsOutput).ToActionUserPropertiesArrayPropsObjectItemsPtrOutputWithContext(ctx)
}

// ActionUserPropertiesArrayPropsObjectItemsPtrInput is an input type that accepts ActionUserPropertiesArrayPropsObjectItemsArgs, ActionUserPropertiesArrayPropsObjectItemsPtr and ActionUserPropertiesArrayPropsObjectItemsPtrOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsObjectItemsPtrInput` via:
//
//	        ActionUserPropertiesArrayPropsObjectItemsArgs{...}
//
//	or:
//
//	        nil
type ActionUserPropertiesArrayPropsObjectItemsPtrInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsObjectItemsPtrOutput() ActionUserPropertiesArrayPropsObjectItemsPtrOutput
	ToActionUserPropertiesArrayPropsObjectItemsPtrOutputWithContext(context.Context) ActionUserPropertiesArrayPropsObjectItemsPtrOutput
}

type actionUserPropertiesArrayPropsObjectItemsPtrType ActionUserPropertiesArrayPropsObjectItemsArgs

func ActionUserPropertiesArrayPropsObjectItemsPtr(v *ActionUserPropertiesArrayPropsObjectItemsArgs) ActionUserPropertiesArrayPropsObjectItemsPtrInput {
	return (*actionUserPropertiesArrayPropsObjectItemsPtrType)(v)
}

func (*actionUserPropertiesArrayPropsObjectItemsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesArrayPropsObjectItems)(nil)).Elem()
}

func (i *actionUserPropertiesArrayPropsObjectItemsPtrType) ToActionUserPropertiesArrayPropsObjectItemsPtrOutput() ActionUserPropertiesArrayPropsObjectItemsPtrOutput {
	return i.ToActionUserPropertiesArrayPropsObjectItemsPtrOutputWithContext(context.Background())
}

func (i *actionUserPropertiesArrayPropsObjectItemsPtrType) ToActionUserPropertiesArrayPropsObjectItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsObjectItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsObjectItemsPtrOutput)
}

func (i *actionUserPropertiesArrayPropsObjectItemsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesArrayPropsObjectItems] {
	return pulumix.Output[*ActionUserPropertiesArrayPropsObjectItems]{
		OutputState: i.ToActionUserPropertiesArrayPropsObjectItemsPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesArrayPropsObjectItemsOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsObjectItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsObjectItems)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsObjectItemsOutput) ToActionUserPropertiesArrayPropsObjectItemsOutput() ActionUserPropertiesArrayPropsObjectItemsOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsObjectItemsOutput) ToActionUserPropertiesArrayPropsObjectItemsOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsObjectItemsOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsObjectItemsOutput) ToActionUserPropertiesArrayPropsObjectItemsPtrOutput() ActionUserPropertiesArrayPropsObjectItemsPtrOutput {
	return o.ToActionUserPropertiesArrayPropsObjectItemsPtrOutputWithContext(context.Background())
}

func (o ActionUserPropertiesArrayPropsObjectItemsOutput) ToActionUserPropertiesArrayPropsObjectItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsObjectItemsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionUserPropertiesArrayPropsObjectItems) *ActionUserPropertiesArrayPropsObjectItems {
		return &v
	}).(ActionUserPropertiesArrayPropsObjectItemsPtrOutput)
}

func (o ActionUserPropertiesArrayPropsObjectItemsOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsObjectItems] {
	return pulumix.Output[ActionUserPropertiesArrayPropsObjectItems]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsObjectItemsOutput) Defaults() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsObjectItems) []map[string]string { return v.Defaults }).(pulumi.StringMapArrayOutput)
}

type ActionUserPropertiesArrayPropsObjectItemsPtrOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsObjectItemsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesArrayPropsObjectItems)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsObjectItemsPtrOutput) ToActionUserPropertiesArrayPropsObjectItemsPtrOutput() ActionUserPropertiesArrayPropsObjectItemsPtrOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsObjectItemsPtrOutput) ToActionUserPropertiesArrayPropsObjectItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsObjectItemsPtrOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsObjectItemsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesArrayPropsObjectItems] {
	return pulumix.Output[*ActionUserPropertiesArrayPropsObjectItems]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsObjectItemsPtrOutput) Elem() ActionUserPropertiesArrayPropsObjectItemsOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsObjectItems) ActionUserPropertiesArrayPropsObjectItems {
		if v != nil {
			return *v
		}
		var ret ActionUserPropertiesArrayPropsObjectItems
		return ret
	}).(ActionUserPropertiesArrayPropsObjectItemsOutput)
}

func (o ActionUserPropertiesArrayPropsObjectItemsPtrOutput) Defaults() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsObjectItems) []map[string]string {
		if v == nil {
			return nil
		}
		return v.Defaults
	}).(pulumi.StringMapArrayOutput)
}

type ActionUserPropertiesArrayPropsStringItems struct {
	Blueprint   *string  `pulumi:"blueprint"`
	Defaults    []string `pulumi:"defaults"`
	EnumJqQuery *string  `pulumi:"enumJqQuery"`
	Enums       []string `pulumi:"enums"`
	Format      *string  `pulumi:"format"`
}

// ActionUserPropertiesArrayPropsStringItemsInput is an input type that accepts ActionUserPropertiesArrayPropsStringItemsArgs and ActionUserPropertiesArrayPropsStringItemsOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsStringItemsInput` via:
//
//	ActionUserPropertiesArrayPropsStringItemsArgs{...}
type ActionUserPropertiesArrayPropsStringItemsInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsStringItemsOutput() ActionUserPropertiesArrayPropsStringItemsOutput
	ToActionUserPropertiesArrayPropsStringItemsOutputWithContext(context.Context) ActionUserPropertiesArrayPropsStringItemsOutput
}

type ActionUserPropertiesArrayPropsStringItemsArgs struct {
	Blueprint   pulumi.StringPtrInput   `pulumi:"blueprint"`
	Defaults    pulumi.StringArrayInput `pulumi:"defaults"`
	EnumJqQuery pulumi.StringPtrInput   `pulumi:"enumJqQuery"`
	Enums       pulumi.StringArrayInput `pulumi:"enums"`
	Format      pulumi.StringPtrInput   `pulumi:"format"`
}

func (ActionUserPropertiesArrayPropsStringItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsStringItems)(nil)).Elem()
}

func (i ActionUserPropertiesArrayPropsStringItemsArgs) ToActionUserPropertiesArrayPropsStringItemsOutput() ActionUserPropertiesArrayPropsStringItemsOutput {
	return i.ToActionUserPropertiesArrayPropsStringItemsOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsStringItemsArgs) ToActionUserPropertiesArrayPropsStringItemsOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsStringItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsStringItemsOutput)
}

func (i ActionUserPropertiesArrayPropsStringItemsArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsStringItems] {
	return pulumix.Output[ActionUserPropertiesArrayPropsStringItems]{
		OutputState: i.ToActionUserPropertiesArrayPropsStringItemsOutputWithContext(ctx).OutputState,
	}
}

func (i ActionUserPropertiesArrayPropsStringItemsArgs) ToActionUserPropertiesArrayPropsStringItemsPtrOutput() ActionUserPropertiesArrayPropsStringItemsPtrOutput {
	return i.ToActionUserPropertiesArrayPropsStringItemsPtrOutputWithContext(context.Background())
}

func (i ActionUserPropertiesArrayPropsStringItemsArgs) ToActionUserPropertiesArrayPropsStringItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsStringItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsStringItemsOutput).ToActionUserPropertiesArrayPropsStringItemsPtrOutputWithContext(ctx)
}

// ActionUserPropertiesArrayPropsStringItemsPtrInput is an input type that accepts ActionUserPropertiesArrayPropsStringItemsArgs, ActionUserPropertiesArrayPropsStringItemsPtr and ActionUserPropertiesArrayPropsStringItemsPtrOutput values.
// You can construct a concrete instance of `ActionUserPropertiesArrayPropsStringItemsPtrInput` via:
//
//	        ActionUserPropertiesArrayPropsStringItemsArgs{...}
//
//	or:
//
//	        nil
type ActionUserPropertiesArrayPropsStringItemsPtrInput interface {
	pulumi.Input

	ToActionUserPropertiesArrayPropsStringItemsPtrOutput() ActionUserPropertiesArrayPropsStringItemsPtrOutput
	ToActionUserPropertiesArrayPropsStringItemsPtrOutputWithContext(context.Context) ActionUserPropertiesArrayPropsStringItemsPtrOutput
}

type actionUserPropertiesArrayPropsStringItemsPtrType ActionUserPropertiesArrayPropsStringItemsArgs

func ActionUserPropertiesArrayPropsStringItemsPtr(v *ActionUserPropertiesArrayPropsStringItemsArgs) ActionUserPropertiesArrayPropsStringItemsPtrInput {
	return (*actionUserPropertiesArrayPropsStringItemsPtrType)(v)
}

func (*actionUserPropertiesArrayPropsStringItemsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesArrayPropsStringItems)(nil)).Elem()
}

func (i *actionUserPropertiesArrayPropsStringItemsPtrType) ToActionUserPropertiesArrayPropsStringItemsPtrOutput() ActionUserPropertiesArrayPropsStringItemsPtrOutput {
	return i.ToActionUserPropertiesArrayPropsStringItemsPtrOutputWithContext(context.Background())
}

func (i *actionUserPropertiesArrayPropsStringItemsPtrType) ToActionUserPropertiesArrayPropsStringItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsStringItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesArrayPropsStringItemsPtrOutput)
}

func (i *actionUserPropertiesArrayPropsStringItemsPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesArrayPropsStringItems] {
	return pulumix.Output[*ActionUserPropertiesArrayPropsStringItems]{
		OutputState: i.ToActionUserPropertiesArrayPropsStringItemsPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesArrayPropsStringItemsOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsStringItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesArrayPropsStringItems)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsStringItemsOutput) ToActionUserPropertiesArrayPropsStringItemsOutput() ActionUserPropertiesArrayPropsStringItemsOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsStringItemsOutput) ToActionUserPropertiesArrayPropsStringItemsOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsStringItemsOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsStringItemsOutput) ToActionUserPropertiesArrayPropsStringItemsPtrOutput() ActionUserPropertiesArrayPropsStringItemsPtrOutput {
	return o.ToActionUserPropertiesArrayPropsStringItemsPtrOutputWithContext(context.Background())
}

func (o ActionUserPropertiesArrayPropsStringItemsOutput) ToActionUserPropertiesArrayPropsStringItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsStringItemsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionUserPropertiesArrayPropsStringItems) *ActionUserPropertiesArrayPropsStringItems {
		return &v
	}).(ActionUserPropertiesArrayPropsStringItemsPtrOutput)
}

func (o ActionUserPropertiesArrayPropsStringItemsOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesArrayPropsStringItems] {
	return pulumix.Output[ActionUserPropertiesArrayPropsStringItems]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsStringItemsOutput) Blueprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsStringItems) *string { return v.Blueprint }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesArrayPropsStringItemsOutput) Defaults() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsStringItems) []string { return v.Defaults }).(pulumi.StringArrayOutput)
}

func (o ActionUserPropertiesArrayPropsStringItemsOutput) EnumJqQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsStringItems) *string { return v.EnumJqQuery }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesArrayPropsStringItemsOutput) Enums() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsStringItems) []string { return v.Enums }).(pulumi.StringArrayOutput)
}

func (o ActionUserPropertiesArrayPropsStringItemsOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesArrayPropsStringItems) *string { return v.Format }).(pulumi.StringPtrOutput)
}

type ActionUserPropertiesArrayPropsStringItemsPtrOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesArrayPropsStringItemsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesArrayPropsStringItems)(nil)).Elem()
}

func (o ActionUserPropertiesArrayPropsStringItemsPtrOutput) ToActionUserPropertiesArrayPropsStringItemsPtrOutput() ActionUserPropertiesArrayPropsStringItemsPtrOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsStringItemsPtrOutput) ToActionUserPropertiesArrayPropsStringItemsPtrOutputWithContext(ctx context.Context) ActionUserPropertiesArrayPropsStringItemsPtrOutput {
	return o
}

func (o ActionUserPropertiesArrayPropsStringItemsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesArrayPropsStringItems] {
	return pulumix.Output[*ActionUserPropertiesArrayPropsStringItems]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesArrayPropsStringItemsPtrOutput) Elem() ActionUserPropertiesArrayPropsStringItemsOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsStringItems) ActionUserPropertiesArrayPropsStringItems {
		if v != nil {
			return *v
		}
		var ret ActionUserPropertiesArrayPropsStringItems
		return ret
	}).(ActionUserPropertiesArrayPropsStringItemsOutput)
}

func (o ActionUserPropertiesArrayPropsStringItemsPtrOutput) Blueprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsStringItems) *string {
		if v == nil {
			return nil
		}
		return v.Blueprint
	}).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesArrayPropsStringItemsPtrOutput) Defaults() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsStringItems) []string {
		if v == nil {
			return nil
		}
		return v.Defaults
	}).(pulumi.StringArrayOutput)
}

func (o ActionUserPropertiesArrayPropsStringItemsPtrOutput) EnumJqQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsStringItems) *string {
		if v == nil {
			return nil
		}
		return v.EnumJqQuery
	}).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesArrayPropsStringItemsPtrOutput) Enums() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsStringItems) []string {
		if v == nil {
			return nil
		}
		return v.Enums
	}).(pulumi.StringArrayOutput)
}

func (o ActionUserPropertiesArrayPropsStringItemsPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionUserPropertiesArrayPropsStringItems) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

type ActionUserPropertiesBooleanProps struct {
	Dataset        *ActionUserPropertiesBooleanPropsDataset `pulumi:"dataset"`
	Default        *bool                                    `pulumi:"default"`
	DefaultJqQuery *string                                  `pulumi:"defaultJqQuery"`
	DependsOns     []string                                 `pulumi:"dependsOns"`
	Description    *string                                  `pulumi:"description"`
	Icon           *string                                  `pulumi:"icon"`
	Required       *bool                                    `pulumi:"required"`
	Title          *string                                  `pulumi:"title"`
}

// ActionUserPropertiesBooleanPropsInput is an input type that accepts ActionUserPropertiesBooleanPropsArgs and ActionUserPropertiesBooleanPropsOutput values.
// You can construct a concrete instance of `ActionUserPropertiesBooleanPropsInput` via:
//
//	ActionUserPropertiesBooleanPropsArgs{...}
type ActionUserPropertiesBooleanPropsInput interface {
	pulumi.Input

	ToActionUserPropertiesBooleanPropsOutput() ActionUserPropertiesBooleanPropsOutput
	ToActionUserPropertiesBooleanPropsOutputWithContext(context.Context) ActionUserPropertiesBooleanPropsOutput
}

type ActionUserPropertiesBooleanPropsArgs struct {
	Dataset        ActionUserPropertiesBooleanPropsDatasetPtrInput `pulumi:"dataset"`
	Default        pulumi.BoolPtrInput                             `pulumi:"default"`
	DefaultJqQuery pulumi.StringPtrInput                           `pulumi:"defaultJqQuery"`
	DependsOns     pulumi.StringArrayInput                         `pulumi:"dependsOns"`
	Description    pulumi.StringPtrInput                           `pulumi:"description"`
	Icon           pulumi.StringPtrInput                           `pulumi:"icon"`
	Required       pulumi.BoolPtrInput                             `pulumi:"required"`
	Title          pulumi.StringPtrInput                           `pulumi:"title"`
}

func (ActionUserPropertiesBooleanPropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesBooleanProps)(nil)).Elem()
}

func (i ActionUserPropertiesBooleanPropsArgs) ToActionUserPropertiesBooleanPropsOutput() ActionUserPropertiesBooleanPropsOutput {
	return i.ToActionUserPropertiesBooleanPropsOutputWithContext(context.Background())
}

func (i ActionUserPropertiesBooleanPropsArgs) ToActionUserPropertiesBooleanPropsOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesBooleanPropsOutput)
}

func (i ActionUserPropertiesBooleanPropsArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesBooleanProps] {
	return pulumix.Output[ActionUserPropertiesBooleanProps]{
		OutputState: i.ToActionUserPropertiesBooleanPropsOutputWithContext(ctx).OutputState,
	}
}

// ActionUserPropertiesBooleanPropsMapInput is an input type that accepts ActionUserPropertiesBooleanPropsMap and ActionUserPropertiesBooleanPropsMapOutput values.
// You can construct a concrete instance of `ActionUserPropertiesBooleanPropsMapInput` via:
//
//	ActionUserPropertiesBooleanPropsMap{ "key": ActionUserPropertiesBooleanPropsArgs{...} }
type ActionUserPropertiesBooleanPropsMapInput interface {
	pulumi.Input

	ToActionUserPropertiesBooleanPropsMapOutput() ActionUserPropertiesBooleanPropsMapOutput
	ToActionUserPropertiesBooleanPropsMapOutputWithContext(context.Context) ActionUserPropertiesBooleanPropsMapOutput
}

type ActionUserPropertiesBooleanPropsMap map[string]ActionUserPropertiesBooleanPropsInput

func (ActionUserPropertiesBooleanPropsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ActionUserPropertiesBooleanProps)(nil)).Elem()
}

func (i ActionUserPropertiesBooleanPropsMap) ToActionUserPropertiesBooleanPropsMapOutput() ActionUserPropertiesBooleanPropsMapOutput {
	return i.ToActionUserPropertiesBooleanPropsMapOutputWithContext(context.Background())
}

func (i ActionUserPropertiesBooleanPropsMap) ToActionUserPropertiesBooleanPropsMapOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesBooleanPropsMapOutput)
}

func (i ActionUserPropertiesBooleanPropsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]ActionUserPropertiesBooleanProps] {
	return pulumix.Output[map[string]ActionUserPropertiesBooleanProps]{
		OutputState: i.ToActionUserPropertiesBooleanPropsMapOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesBooleanPropsOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesBooleanPropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesBooleanProps)(nil)).Elem()
}

func (o ActionUserPropertiesBooleanPropsOutput) ToActionUserPropertiesBooleanPropsOutput() ActionUserPropertiesBooleanPropsOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsOutput) ToActionUserPropertiesBooleanPropsOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesBooleanProps] {
	return pulumix.Output[ActionUserPropertiesBooleanProps]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesBooleanPropsOutput) Dataset() ActionUserPropertiesBooleanPropsDatasetPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanProps) *ActionUserPropertiesBooleanPropsDataset { return v.Dataset }).(ActionUserPropertiesBooleanPropsDatasetPtrOutput)
}

func (o ActionUserPropertiesBooleanPropsOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanProps) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

func (o ActionUserPropertiesBooleanPropsOutput) DefaultJqQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanProps) *string { return v.DefaultJqQuery }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesBooleanPropsOutput) DependsOns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanProps) []string { return v.DependsOns }).(pulumi.StringArrayOutput)
}

func (o ActionUserPropertiesBooleanPropsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanProps) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesBooleanPropsOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanProps) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesBooleanPropsOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanProps) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o ActionUserPropertiesBooleanPropsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanProps) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ActionUserPropertiesBooleanPropsMapOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesBooleanPropsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ActionUserPropertiesBooleanProps)(nil)).Elem()
}

func (o ActionUserPropertiesBooleanPropsMapOutput) ToActionUserPropertiesBooleanPropsMapOutput() ActionUserPropertiesBooleanPropsMapOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsMapOutput) ToActionUserPropertiesBooleanPropsMapOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsMapOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]ActionUserPropertiesBooleanProps] {
	return pulumix.Output[map[string]ActionUserPropertiesBooleanProps]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesBooleanPropsMapOutput) MapIndex(k pulumi.StringInput) ActionUserPropertiesBooleanPropsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ActionUserPropertiesBooleanProps {
		return vs[0].(map[string]ActionUserPropertiesBooleanProps)[vs[1].(string)]
	}).(ActionUserPropertiesBooleanPropsOutput)
}

type ActionUserPropertiesBooleanPropsDataset struct {
	Combinator string                                        `pulumi:"combinator"`
	Rules      []ActionUserPropertiesBooleanPropsDatasetRule `pulumi:"rules"`
}

// ActionUserPropertiesBooleanPropsDatasetInput is an input type that accepts ActionUserPropertiesBooleanPropsDatasetArgs and ActionUserPropertiesBooleanPropsDatasetOutput values.
// You can construct a concrete instance of `ActionUserPropertiesBooleanPropsDatasetInput` via:
//
//	ActionUserPropertiesBooleanPropsDatasetArgs{...}
type ActionUserPropertiesBooleanPropsDatasetInput interface {
	pulumi.Input

	ToActionUserPropertiesBooleanPropsDatasetOutput() ActionUserPropertiesBooleanPropsDatasetOutput
	ToActionUserPropertiesBooleanPropsDatasetOutputWithContext(context.Context) ActionUserPropertiesBooleanPropsDatasetOutput
}

type ActionUserPropertiesBooleanPropsDatasetArgs struct {
	Combinator pulumi.StringInput                                    `pulumi:"combinator"`
	Rules      ActionUserPropertiesBooleanPropsDatasetRuleArrayInput `pulumi:"rules"`
}

func (ActionUserPropertiesBooleanPropsDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesBooleanPropsDataset)(nil)).Elem()
}

func (i ActionUserPropertiesBooleanPropsDatasetArgs) ToActionUserPropertiesBooleanPropsDatasetOutput() ActionUserPropertiesBooleanPropsDatasetOutput {
	return i.ToActionUserPropertiesBooleanPropsDatasetOutputWithContext(context.Background())
}

func (i ActionUserPropertiesBooleanPropsDatasetArgs) ToActionUserPropertiesBooleanPropsDatasetOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesBooleanPropsDatasetOutput)
}

func (i ActionUserPropertiesBooleanPropsDatasetArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesBooleanPropsDataset] {
	return pulumix.Output[ActionUserPropertiesBooleanPropsDataset]{
		OutputState: i.ToActionUserPropertiesBooleanPropsDatasetOutputWithContext(ctx).OutputState,
	}
}

func (i ActionUserPropertiesBooleanPropsDatasetArgs) ToActionUserPropertiesBooleanPropsDatasetPtrOutput() ActionUserPropertiesBooleanPropsDatasetPtrOutput {
	return i.ToActionUserPropertiesBooleanPropsDatasetPtrOutputWithContext(context.Background())
}

func (i ActionUserPropertiesBooleanPropsDatasetArgs) ToActionUserPropertiesBooleanPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesBooleanPropsDatasetOutput).ToActionUserPropertiesBooleanPropsDatasetPtrOutputWithContext(ctx)
}

// ActionUserPropertiesBooleanPropsDatasetPtrInput is an input type that accepts ActionUserPropertiesBooleanPropsDatasetArgs, ActionUserPropertiesBooleanPropsDatasetPtr and ActionUserPropertiesBooleanPropsDatasetPtrOutput values.
// You can construct a concrete instance of `ActionUserPropertiesBooleanPropsDatasetPtrInput` via:
//
//	        ActionUserPropertiesBooleanPropsDatasetArgs{...}
//
//	or:
//
//	        nil
type ActionUserPropertiesBooleanPropsDatasetPtrInput interface {
	pulumi.Input

	ToActionUserPropertiesBooleanPropsDatasetPtrOutput() ActionUserPropertiesBooleanPropsDatasetPtrOutput
	ToActionUserPropertiesBooleanPropsDatasetPtrOutputWithContext(context.Context) ActionUserPropertiesBooleanPropsDatasetPtrOutput
}

type actionUserPropertiesBooleanPropsDatasetPtrType ActionUserPropertiesBooleanPropsDatasetArgs

func ActionUserPropertiesBooleanPropsDatasetPtr(v *ActionUserPropertiesBooleanPropsDatasetArgs) ActionUserPropertiesBooleanPropsDatasetPtrInput {
	return (*actionUserPropertiesBooleanPropsDatasetPtrType)(v)
}

func (*actionUserPropertiesBooleanPropsDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesBooleanPropsDataset)(nil)).Elem()
}

func (i *actionUserPropertiesBooleanPropsDatasetPtrType) ToActionUserPropertiesBooleanPropsDatasetPtrOutput() ActionUserPropertiesBooleanPropsDatasetPtrOutput {
	return i.ToActionUserPropertiesBooleanPropsDatasetPtrOutputWithContext(context.Background())
}

func (i *actionUserPropertiesBooleanPropsDatasetPtrType) ToActionUserPropertiesBooleanPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesBooleanPropsDatasetPtrOutput)
}

func (i *actionUserPropertiesBooleanPropsDatasetPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesBooleanPropsDataset] {
	return pulumix.Output[*ActionUserPropertiesBooleanPropsDataset]{
		OutputState: i.ToActionUserPropertiesBooleanPropsDatasetPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesBooleanPropsDatasetOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesBooleanPropsDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesBooleanPropsDataset)(nil)).Elem()
}

func (o ActionUserPropertiesBooleanPropsDatasetOutput) ToActionUserPropertiesBooleanPropsDatasetOutput() ActionUserPropertiesBooleanPropsDatasetOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsDatasetOutput) ToActionUserPropertiesBooleanPropsDatasetOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsDatasetOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsDatasetOutput) ToActionUserPropertiesBooleanPropsDatasetPtrOutput() ActionUserPropertiesBooleanPropsDatasetPtrOutput {
	return o.ToActionUserPropertiesBooleanPropsDatasetPtrOutputWithContext(context.Background())
}

func (o ActionUserPropertiesBooleanPropsDatasetOutput) ToActionUserPropertiesBooleanPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionUserPropertiesBooleanPropsDataset) *ActionUserPropertiesBooleanPropsDataset {
		return &v
	}).(ActionUserPropertiesBooleanPropsDatasetPtrOutput)
}

func (o ActionUserPropertiesBooleanPropsDatasetOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesBooleanPropsDataset] {
	return pulumix.Output[ActionUserPropertiesBooleanPropsDataset]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesBooleanPropsDatasetOutput) Combinator() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanPropsDataset) string { return v.Combinator }).(pulumi.StringOutput)
}

func (o ActionUserPropertiesBooleanPropsDatasetOutput) Rules() ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanPropsDataset) []ActionUserPropertiesBooleanPropsDatasetRule {
		return v.Rules
	}).(ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput)
}

type ActionUserPropertiesBooleanPropsDatasetPtrOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesBooleanPropsDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesBooleanPropsDataset)(nil)).Elem()
}

func (o ActionUserPropertiesBooleanPropsDatasetPtrOutput) ToActionUserPropertiesBooleanPropsDatasetPtrOutput() ActionUserPropertiesBooleanPropsDatasetPtrOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsDatasetPtrOutput) ToActionUserPropertiesBooleanPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsDatasetPtrOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsDatasetPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesBooleanPropsDataset] {
	return pulumix.Output[*ActionUserPropertiesBooleanPropsDataset]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesBooleanPropsDatasetPtrOutput) Elem() ActionUserPropertiesBooleanPropsDatasetOutput {
	return o.ApplyT(func(v *ActionUserPropertiesBooleanPropsDataset) ActionUserPropertiesBooleanPropsDataset {
		if v != nil {
			return *v
		}
		var ret ActionUserPropertiesBooleanPropsDataset
		return ret
	}).(ActionUserPropertiesBooleanPropsDatasetOutput)
}

func (o ActionUserPropertiesBooleanPropsDatasetPtrOutput) Combinator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionUserPropertiesBooleanPropsDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Combinator
	}).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesBooleanPropsDatasetPtrOutput) Rules() ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput {
	return o.ApplyT(func(v *ActionUserPropertiesBooleanPropsDataset) []ActionUserPropertiesBooleanPropsDatasetRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput)
}

type ActionUserPropertiesBooleanPropsDatasetRule struct {
	Blueprint *string                                          `pulumi:"blueprint"`
	Operator  string                                           `pulumi:"operator"`
	Property  *string                                          `pulumi:"property"`
	Value     ActionUserPropertiesBooleanPropsDatasetRuleValue `pulumi:"value"`
}

// ActionUserPropertiesBooleanPropsDatasetRuleInput is an input type that accepts ActionUserPropertiesBooleanPropsDatasetRuleArgs and ActionUserPropertiesBooleanPropsDatasetRuleOutput values.
// You can construct a concrete instance of `ActionUserPropertiesBooleanPropsDatasetRuleInput` via:
//
//	ActionUserPropertiesBooleanPropsDatasetRuleArgs{...}
type ActionUserPropertiesBooleanPropsDatasetRuleInput interface {
	pulumi.Input

	ToActionUserPropertiesBooleanPropsDatasetRuleOutput() ActionUserPropertiesBooleanPropsDatasetRuleOutput
	ToActionUserPropertiesBooleanPropsDatasetRuleOutputWithContext(context.Context) ActionUserPropertiesBooleanPropsDatasetRuleOutput
}

type ActionUserPropertiesBooleanPropsDatasetRuleArgs struct {
	Blueprint pulumi.StringPtrInput                                 `pulumi:"blueprint"`
	Operator  pulumi.StringInput                                    `pulumi:"operator"`
	Property  pulumi.StringPtrInput                                 `pulumi:"property"`
	Value     ActionUserPropertiesBooleanPropsDatasetRuleValueInput `pulumi:"value"`
}

func (ActionUserPropertiesBooleanPropsDatasetRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesBooleanPropsDatasetRule)(nil)).Elem()
}

func (i ActionUserPropertiesBooleanPropsDatasetRuleArgs) ToActionUserPropertiesBooleanPropsDatasetRuleOutput() ActionUserPropertiesBooleanPropsDatasetRuleOutput {
	return i.ToActionUserPropertiesBooleanPropsDatasetRuleOutputWithContext(context.Background())
}

func (i ActionUserPropertiesBooleanPropsDatasetRuleArgs) ToActionUserPropertiesBooleanPropsDatasetRuleOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsDatasetRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesBooleanPropsDatasetRuleOutput)
}

func (i ActionUserPropertiesBooleanPropsDatasetRuleArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesBooleanPropsDatasetRule] {
	return pulumix.Output[ActionUserPropertiesBooleanPropsDatasetRule]{
		OutputState: i.ToActionUserPropertiesBooleanPropsDatasetRuleOutputWithContext(ctx).OutputState,
	}
}

// ActionUserPropertiesBooleanPropsDatasetRuleArrayInput is an input type that accepts ActionUserPropertiesBooleanPropsDatasetRuleArray and ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput values.
// You can construct a concrete instance of `ActionUserPropertiesBooleanPropsDatasetRuleArrayInput` via:
//
//	ActionUserPropertiesBooleanPropsDatasetRuleArray{ ActionUserPropertiesBooleanPropsDatasetRuleArgs{...} }
type ActionUserPropertiesBooleanPropsDatasetRuleArrayInput interface {
	pulumi.Input

	ToActionUserPropertiesBooleanPropsDatasetRuleArrayOutput() ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput
	ToActionUserPropertiesBooleanPropsDatasetRuleArrayOutputWithContext(context.Context) ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput
}

type ActionUserPropertiesBooleanPropsDatasetRuleArray []ActionUserPropertiesBooleanPropsDatasetRuleInput

func (ActionUserPropertiesBooleanPropsDatasetRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionUserPropertiesBooleanPropsDatasetRule)(nil)).Elem()
}

func (i ActionUserPropertiesBooleanPropsDatasetRuleArray) ToActionUserPropertiesBooleanPropsDatasetRuleArrayOutput() ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput {
	return i.ToActionUserPropertiesBooleanPropsDatasetRuleArrayOutputWithContext(context.Background())
}

func (i ActionUserPropertiesBooleanPropsDatasetRuleArray) ToActionUserPropertiesBooleanPropsDatasetRuleArrayOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput)
}

func (i ActionUserPropertiesBooleanPropsDatasetRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]ActionUserPropertiesBooleanPropsDatasetRule] {
	return pulumix.Output[[]ActionUserPropertiesBooleanPropsDatasetRule]{
		OutputState: i.ToActionUserPropertiesBooleanPropsDatasetRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesBooleanPropsDatasetRuleOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesBooleanPropsDatasetRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesBooleanPropsDatasetRule)(nil)).Elem()
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleOutput) ToActionUserPropertiesBooleanPropsDatasetRuleOutput() ActionUserPropertiesBooleanPropsDatasetRuleOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleOutput) ToActionUserPropertiesBooleanPropsDatasetRuleOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsDatasetRuleOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesBooleanPropsDatasetRule] {
	return pulumix.Output[ActionUserPropertiesBooleanPropsDatasetRule]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleOutput) Blueprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanPropsDatasetRule) *string { return v.Blueprint }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanPropsDatasetRule) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanPropsDatasetRule) *string { return v.Property }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleOutput) Value() ActionUserPropertiesBooleanPropsDatasetRuleValueOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanPropsDatasetRule) ActionUserPropertiesBooleanPropsDatasetRuleValue {
		return v.Value
	}).(ActionUserPropertiesBooleanPropsDatasetRuleValueOutput)
}

type ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionUserPropertiesBooleanPropsDatasetRule)(nil)).Elem()
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput) ToActionUserPropertiesBooleanPropsDatasetRuleArrayOutput() ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput) ToActionUserPropertiesBooleanPropsDatasetRuleArrayOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ActionUserPropertiesBooleanPropsDatasetRule] {
	return pulumix.Output[[]ActionUserPropertiesBooleanPropsDatasetRule]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput) Index(i pulumi.IntInput) ActionUserPropertiesBooleanPropsDatasetRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionUserPropertiesBooleanPropsDatasetRule {
		return vs[0].([]ActionUserPropertiesBooleanPropsDatasetRule)[vs[1].(int)]
	}).(ActionUserPropertiesBooleanPropsDatasetRuleOutput)
}

type ActionUserPropertiesBooleanPropsDatasetRuleValue struct {
	JqQuery string `pulumi:"jqQuery"`
}

// ActionUserPropertiesBooleanPropsDatasetRuleValueInput is an input type that accepts ActionUserPropertiesBooleanPropsDatasetRuleValueArgs and ActionUserPropertiesBooleanPropsDatasetRuleValueOutput values.
// You can construct a concrete instance of `ActionUserPropertiesBooleanPropsDatasetRuleValueInput` via:
//
//	ActionUserPropertiesBooleanPropsDatasetRuleValueArgs{...}
type ActionUserPropertiesBooleanPropsDatasetRuleValueInput interface {
	pulumi.Input

	ToActionUserPropertiesBooleanPropsDatasetRuleValueOutput() ActionUserPropertiesBooleanPropsDatasetRuleValueOutput
	ToActionUserPropertiesBooleanPropsDatasetRuleValueOutputWithContext(context.Context) ActionUserPropertiesBooleanPropsDatasetRuleValueOutput
}

type ActionUserPropertiesBooleanPropsDatasetRuleValueArgs struct {
	JqQuery pulumi.StringInput `pulumi:"jqQuery"`
}

func (ActionUserPropertiesBooleanPropsDatasetRuleValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesBooleanPropsDatasetRuleValue)(nil)).Elem()
}

func (i ActionUserPropertiesBooleanPropsDatasetRuleValueArgs) ToActionUserPropertiesBooleanPropsDatasetRuleValueOutput() ActionUserPropertiesBooleanPropsDatasetRuleValueOutput {
	return i.ToActionUserPropertiesBooleanPropsDatasetRuleValueOutputWithContext(context.Background())
}

func (i ActionUserPropertiesBooleanPropsDatasetRuleValueArgs) ToActionUserPropertiesBooleanPropsDatasetRuleValueOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsDatasetRuleValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesBooleanPropsDatasetRuleValueOutput)
}

func (i ActionUserPropertiesBooleanPropsDatasetRuleValueArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesBooleanPropsDatasetRuleValue] {
	return pulumix.Output[ActionUserPropertiesBooleanPropsDatasetRuleValue]{
		OutputState: i.ToActionUserPropertiesBooleanPropsDatasetRuleValueOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesBooleanPropsDatasetRuleValueOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesBooleanPropsDatasetRuleValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesBooleanPropsDatasetRuleValue)(nil)).Elem()
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleValueOutput) ToActionUserPropertiesBooleanPropsDatasetRuleValueOutput() ActionUserPropertiesBooleanPropsDatasetRuleValueOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleValueOutput) ToActionUserPropertiesBooleanPropsDatasetRuleValueOutputWithContext(ctx context.Context) ActionUserPropertiesBooleanPropsDatasetRuleValueOutput {
	return o
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleValueOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesBooleanPropsDatasetRuleValue] {
	return pulumix.Output[ActionUserPropertiesBooleanPropsDatasetRuleValue]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesBooleanPropsDatasetRuleValueOutput) JqQuery() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesBooleanPropsDatasetRuleValue) string { return v.JqQuery }).(pulumi.StringOutput)
}

type ActionUserPropertiesNumberProps struct {
	Dataset        *ActionUserPropertiesNumberPropsDataset `pulumi:"dataset"`
	Default        *float64                                `pulumi:"default"`
	DefaultJqQuery *string                                 `pulumi:"defaultJqQuery"`
	DependsOns     []string                                `pulumi:"dependsOns"`
	Description    *string                                 `pulumi:"description"`
	EnumJqQuery    *string                                 `pulumi:"enumJqQuery"`
	Enums          []float64                               `pulumi:"enums"`
	Icon           *string                                 `pulumi:"icon"`
	Maximum        *float64                                `pulumi:"maximum"`
	Minimum        *float64                                `pulumi:"minimum"`
	Required       *bool                                   `pulumi:"required"`
	Title          *string                                 `pulumi:"title"`
}

// ActionUserPropertiesNumberPropsInput is an input type that accepts ActionUserPropertiesNumberPropsArgs and ActionUserPropertiesNumberPropsOutput values.
// You can construct a concrete instance of `ActionUserPropertiesNumberPropsInput` via:
//
//	ActionUserPropertiesNumberPropsArgs{...}
type ActionUserPropertiesNumberPropsInput interface {
	pulumi.Input

	ToActionUserPropertiesNumberPropsOutput() ActionUserPropertiesNumberPropsOutput
	ToActionUserPropertiesNumberPropsOutputWithContext(context.Context) ActionUserPropertiesNumberPropsOutput
}

type ActionUserPropertiesNumberPropsArgs struct {
	Dataset        ActionUserPropertiesNumberPropsDatasetPtrInput `pulumi:"dataset"`
	Default        pulumi.Float64PtrInput                         `pulumi:"default"`
	DefaultJqQuery pulumi.StringPtrInput                          `pulumi:"defaultJqQuery"`
	DependsOns     pulumi.StringArrayInput                        `pulumi:"dependsOns"`
	Description    pulumi.StringPtrInput                          `pulumi:"description"`
	EnumJqQuery    pulumi.StringPtrInput                          `pulumi:"enumJqQuery"`
	Enums          pulumi.Float64ArrayInput                       `pulumi:"enums"`
	Icon           pulumi.StringPtrInput                          `pulumi:"icon"`
	Maximum        pulumi.Float64PtrInput                         `pulumi:"maximum"`
	Minimum        pulumi.Float64PtrInput                         `pulumi:"minimum"`
	Required       pulumi.BoolPtrInput                            `pulumi:"required"`
	Title          pulumi.StringPtrInput                          `pulumi:"title"`
}

func (ActionUserPropertiesNumberPropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesNumberProps)(nil)).Elem()
}

func (i ActionUserPropertiesNumberPropsArgs) ToActionUserPropertiesNumberPropsOutput() ActionUserPropertiesNumberPropsOutput {
	return i.ToActionUserPropertiesNumberPropsOutputWithContext(context.Background())
}

func (i ActionUserPropertiesNumberPropsArgs) ToActionUserPropertiesNumberPropsOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesNumberPropsOutput)
}

func (i ActionUserPropertiesNumberPropsArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesNumberProps] {
	return pulumix.Output[ActionUserPropertiesNumberProps]{
		OutputState: i.ToActionUserPropertiesNumberPropsOutputWithContext(ctx).OutputState,
	}
}

// ActionUserPropertiesNumberPropsMapInput is an input type that accepts ActionUserPropertiesNumberPropsMap and ActionUserPropertiesNumberPropsMapOutput values.
// You can construct a concrete instance of `ActionUserPropertiesNumberPropsMapInput` via:
//
//	ActionUserPropertiesNumberPropsMap{ "key": ActionUserPropertiesNumberPropsArgs{...} }
type ActionUserPropertiesNumberPropsMapInput interface {
	pulumi.Input

	ToActionUserPropertiesNumberPropsMapOutput() ActionUserPropertiesNumberPropsMapOutput
	ToActionUserPropertiesNumberPropsMapOutputWithContext(context.Context) ActionUserPropertiesNumberPropsMapOutput
}

type ActionUserPropertiesNumberPropsMap map[string]ActionUserPropertiesNumberPropsInput

func (ActionUserPropertiesNumberPropsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ActionUserPropertiesNumberProps)(nil)).Elem()
}

func (i ActionUserPropertiesNumberPropsMap) ToActionUserPropertiesNumberPropsMapOutput() ActionUserPropertiesNumberPropsMapOutput {
	return i.ToActionUserPropertiesNumberPropsMapOutputWithContext(context.Background())
}

func (i ActionUserPropertiesNumberPropsMap) ToActionUserPropertiesNumberPropsMapOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesNumberPropsMapOutput)
}

func (i ActionUserPropertiesNumberPropsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]ActionUserPropertiesNumberProps] {
	return pulumix.Output[map[string]ActionUserPropertiesNumberProps]{
		OutputState: i.ToActionUserPropertiesNumberPropsMapOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesNumberPropsOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesNumberPropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesNumberProps)(nil)).Elem()
}

func (o ActionUserPropertiesNumberPropsOutput) ToActionUserPropertiesNumberPropsOutput() ActionUserPropertiesNumberPropsOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsOutput) ToActionUserPropertiesNumberPropsOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesNumberProps] {
	return pulumix.Output[ActionUserPropertiesNumberProps]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesNumberPropsOutput) Dataset() ActionUserPropertiesNumberPropsDatasetPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberProps) *ActionUserPropertiesNumberPropsDataset { return v.Dataset }).(ActionUserPropertiesNumberPropsDatasetPtrOutput)
}

func (o ActionUserPropertiesNumberPropsOutput) Default() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberProps) *float64 { return v.Default }).(pulumi.Float64PtrOutput)
}

func (o ActionUserPropertiesNumberPropsOutput) DefaultJqQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberProps) *string { return v.DefaultJqQuery }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesNumberPropsOutput) DependsOns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberProps) []string { return v.DependsOns }).(pulumi.StringArrayOutput)
}

func (o ActionUserPropertiesNumberPropsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberProps) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesNumberPropsOutput) EnumJqQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberProps) *string { return v.EnumJqQuery }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesNumberPropsOutput) Enums() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberProps) []float64 { return v.Enums }).(pulumi.Float64ArrayOutput)
}

func (o ActionUserPropertiesNumberPropsOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberProps) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesNumberPropsOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberProps) *float64 { return v.Maximum }).(pulumi.Float64PtrOutput)
}

func (o ActionUserPropertiesNumberPropsOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberProps) *float64 { return v.Minimum }).(pulumi.Float64PtrOutput)
}

func (o ActionUserPropertiesNumberPropsOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberProps) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o ActionUserPropertiesNumberPropsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberProps) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ActionUserPropertiesNumberPropsMapOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesNumberPropsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ActionUserPropertiesNumberProps)(nil)).Elem()
}

func (o ActionUserPropertiesNumberPropsMapOutput) ToActionUserPropertiesNumberPropsMapOutput() ActionUserPropertiesNumberPropsMapOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsMapOutput) ToActionUserPropertiesNumberPropsMapOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsMapOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]ActionUserPropertiesNumberProps] {
	return pulumix.Output[map[string]ActionUserPropertiesNumberProps]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesNumberPropsMapOutput) MapIndex(k pulumi.StringInput) ActionUserPropertiesNumberPropsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ActionUserPropertiesNumberProps {
		return vs[0].(map[string]ActionUserPropertiesNumberProps)[vs[1].(string)]
	}).(ActionUserPropertiesNumberPropsOutput)
}

type ActionUserPropertiesNumberPropsDataset struct {
	Combinator string                                       `pulumi:"combinator"`
	Rules      []ActionUserPropertiesNumberPropsDatasetRule `pulumi:"rules"`
}

// ActionUserPropertiesNumberPropsDatasetInput is an input type that accepts ActionUserPropertiesNumberPropsDatasetArgs and ActionUserPropertiesNumberPropsDatasetOutput values.
// You can construct a concrete instance of `ActionUserPropertiesNumberPropsDatasetInput` via:
//
//	ActionUserPropertiesNumberPropsDatasetArgs{...}
type ActionUserPropertiesNumberPropsDatasetInput interface {
	pulumi.Input

	ToActionUserPropertiesNumberPropsDatasetOutput() ActionUserPropertiesNumberPropsDatasetOutput
	ToActionUserPropertiesNumberPropsDatasetOutputWithContext(context.Context) ActionUserPropertiesNumberPropsDatasetOutput
}

type ActionUserPropertiesNumberPropsDatasetArgs struct {
	Combinator pulumi.StringInput                                   `pulumi:"combinator"`
	Rules      ActionUserPropertiesNumberPropsDatasetRuleArrayInput `pulumi:"rules"`
}

func (ActionUserPropertiesNumberPropsDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesNumberPropsDataset)(nil)).Elem()
}

func (i ActionUserPropertiesNumberPropsDatasetArgs) ToActionUserPropertiesNumberPropsDatasetOutput() ActionUserPropertiesNumberPropsDatasetOutput {
	return i.ToActionUserPropertiesNumberPropsDatasetOutputWithContext(context.Background())
}

func (i ActionUserPropertiesNumberPropsDatasetArgs) ToActionUserPropertiesNumberPropsDatasetOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesNumberPropsDatasetOutput)
}

func (i ActionUserPropertiesNumberPropsDatasetArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesNumberPropsDataset] {
	return pulumix.Output[ActionUserPropertiesNumberPropsDataset]{
		OutputState: i.ToActionUserPropertiesNumberPropsDatasetOutputWithContext(ctx).OutputState,
	}
}

func (i ActionUserPropertiesNumberPropsDatasetArgs) ToActionUserPropertiesNumberPropsDatasetPtrOutput() ActionUserPropertiesNumberPropsDatasetPtrOutput {
	return i.ToActionUserPropertiesNumberPropsDatasetPtrOutputWithContext(context.Background())
}

func (i ActionUserPropertiesNumberPropsDatasetArgs) ToActionUserPropertiesNumberPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesNumberPropsDatasetOutput).ToActionUserPropertiesNumberPropsDatasetPtrOutputWithContext(ctx)
}

// ActionUserPropertiesNumberPropsDatasetPtrInput is an input type that accepts ActionUserPropertiesNumberPropsDatasetArgs, ActionUserPropertiesNumberPropsDatasetPtr and ActionUserPropertiesNumberPropsDatasetPtrOutput values.
// You can construct a concrete instance of `ActionUserPropertiesNumberPropsDatasetPtrInput` via:
//
//	        ActionUserPropertiesNumberPropsDatasetArgs{...}
//
//	or:
//
//	        nil
type ActionUserPropertiesNumberPropsDatasetPtrInput interface {
	pulumi.Input

	ToActionUserPropertiesNumberPropsDatasetPtrOutput() ActionUserPropertiesNumberPropsDatasetPtrOutput
	ToActionUserPropertiesNumberPropsDatasetPtrOutputWithContext(context.Context) ActionUserPropertiesNumberPropsDatasetPtrOutput
}

type actionUserPropertiesNumberPropsDatasetPtrType ActionUserPropertiesNumberPropsDatasetArgs

func ActionUserPropertiesNumberPropsDatasetPtr(v *ActionUserPropertiesNumberPropsDatasetArgs) ActionUserPropertiesNumberPropsDatasetPtrInput {
	return (*actionUserPropertiesNumberPropsDatasetPtrType)(v)
}

func (*actionUserPropertiesNumberPropsDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesNumberPropsDataset)(nil)).Elem()
}

func (i *actionUserPropertiesNumberPropsDatasetPtrType) ToActionUserPropertiesNumberPropsDatasetPtrOutput() ActionUserPropertiesNumberPropsDatasetPtrOutput {
	return i.ToActionUserPropertiesNumberPropsDatasetPtrOutputWithContext(context.Background())
}

func (i *actionUserPropertiesNumberPropsDatasetPtrType) ToActionUserPropertiesNumberPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesNumberPropsDatasetPtrOutput)
}

func (i *actionUserPropertiesNumberPropsDatasetPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesNumberPropsDataset] {
	return pulumix.Output[*ActionUserPropertiesNumberPropsDataset]{
		OutputState: i.ToActionUserPropertiesNumberPropsDatasetPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesNumberPropsDatasetOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesNumberPropsDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesNumberPropsDataset)(nil)).Elem()
}

func (o ActionUserPropertiesNumberPropsDatasetOutput) ToActionUserPropertiesNumberPropsDatasetOutput() ActionUserPropertiesNumberPropsDatasetOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsDatasetOutput) ToActionUserPropertiesNumberPropsDatasetOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsDatasetOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsDatasetOutput) ToActionUserPropertiesNumberPropsDatasetPtrOutput() ActionUserPropertiesNumberPropsDatasetPtrOutput {
	return o.ToActionUserPropertiesNumberPropsDatasetPtrOutputWithContext(context.Background())
}

func (o ActionUserPropertiesNumberPropsDatasetOutput) ToActionUserPropertiesNumberPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionUserPropertiesNumberPropsDataset) *ActionUserPropertiesNumberPropsDataset {
		return &v
	}).(ActionUserPropertiesNumberPropsDatasetPtrOutput)
}

func (o ActionUserPropertiesNumberPropsDatasetOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesNumberPropsDataset] {
	return pulumix.Output[ActionUserPropertiesNumberPropsDataset]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesNumberPropsDatasetOutput) Combinator() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberPropsDataset) string { return v.Combinator }).(pulumi.StringOutput)
}

func (o ActionUserPropertiesNumberPropsDatasetOutput) Rules() ActionUserPropertiesNumberPropsDatasetRuleArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberPropsDataset) []ActionUserPropertiesNumberPropsDatasetRule {
		return v.Rules
	}).(ActionUserPropertiesNumberPropsDatasetRuleArrayOutput)
}

type ActionUserPropertiesNumberPropsDatasetPtrOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesNumberPropsDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesNumberPropsDataset)(nil)).Elem()
}

func (o ActionUserPropertiesNumberPropsDatasetPtrOutput) ToActionUserPropertiesNumberPropsDatasetPtrOutput() ActionUserPropertiesNumberPropsDatasetPtrOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsDatasetPtrOutput) ToActionUserPropertiesNumberPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsDatasetPtrOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsDatasetPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesNumberPropsDataset] {
	return pulumix.Output[*ActionUserPropertiesNumberPropsDataset]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesNumberPropsDatasetPtrOutput) Elem() ActionUserPropertiesNumberPropsDatasetOutput {
	return o.ApplyT(func(v *ActionUserPropertiesNumberPropsDataset) ActionUserPropertiesNumberPropsDataset {
		if v != nil {
			return *v
		}
		var ret ActionUserPropertiesNumberPropsDataset
		return ret
	}).(ActionUserPropertiesNumberPropsDatasetOutput)
}

func (o ActionUserPropertiesNumberPropsDatasetPtrOutput) Combinator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionUserPropertiesNumberPropsDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Combinator
	}).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesNumberPropsDatasetPtrOutput) Rules() ActionUserPropertiesNumberPropsDatasetRuleArrayOutput {
	return o.ApplyT(func(v *ActionUserPropertiesNumberPropsDataset) []ActionUserPropertiesNumberPropsDatasetRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ActionUserPropertiesNumberPropsDatasetRuleArrayOutput)
}

type ActionUserPropertiesNumberPropsDatasetRule struct {
	Blueprint *string                                         `pulumi:"blueprint"`
	Operator  string                                          `pulumi:"operator"`
	Property  *string                                         `pulumi:"property"`
	Value     ActionUserPropertiesNumberPropsDatasetRuleValue `pulumi:"value"`
}

// ActionUserPropertiesNumberPropsDatasetRuleInput is an input type that accepts ActionUserPropertiesNumberPropsDatasetRuleArgs and ActionUserPropertiesNumberPropsDatasetRuleOutput values.
// You can construct a concrete instance of `ActionUserPropertiesNumberPropsDatasetRuleInput` via:
//
//	ActionUserPropertiesNumberPropsDatasetRuleArgs{...}
type ActionUserPropertiesNumberPropsDatasetRuleInput interface {
	pulumi.Input

	ToActionUserPropertiesNumberPropsDatasetRuleOutput() ActionUserPropertiesNumberPropsDatasetRuleOutput
	ToActionUserPropertiesNumberPropsDatasetRuleOutputWithContext(context.Context) ActionUserPropertiesNumberPropsDatasetRuleOutput
}

type ActionUserPropertiesNumberPropsDatasetRuleArgs struct {
	Blueprint pulumi.StringPtrInput                                `pulumi:"blueprint"`
	Operator  pulumi.StringInput                                   `pulumi:"operator"`
	Property  pulumi.StringPtrInput                                `pulumi:"property"`
	Value     ActionUserPropertiesNumberPropsDatasetRuleValueInput `pulumi:"value"`
}

func (ActionUserPropertiesNumberPropsDatasetRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesNumberPropsDatasetRule)(nil)).Elem()
}

func (i ActionUserPropertiesNumberPropsDatasetRuleArgs) ToActionUserPropertiesNumberPropsDatasetRuleOutput() ActionUserPropertiesNumberPropsDatasetRuleOutput {
	return i.ToActionUserPropertiesNumberPropsDatasetRuleOutputWithContext(context.Background())
}

func (i ActionUserPropertiesNumberPropsDatasetRuleArgs) ToActionUserPropertiesNumberPropsDatasetRuleOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsDatasetRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesNumberPropsDatasetRuleOutput)
}

func (i ActionUserPropertiesNumberPropsDatasetRuleArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesNumberPropsDatasetRule] {
	return pulumix.Output[ActionUserPropertiesNumberPropsDatasetRule]{
		OutputState: i.ToActionUserPropertiesNumberPropsDatasetRuleOutputWithContext(ctx).OutputState,
	}
}

// ActionUserPropertiesNumberPropsDatasetRuleArrayInput is an input type that accepts ActionUserPropertiesNumberPropsDatasetRuleArray and ActionUserPropertiesNumberPropsDatasetRuleArrayOutput values.
// You can construct a concrete instance of `ActionUserPropertiesNumberPropsDatasetRuleArrayInput` via:
//
//	ActionUserPropertiesNumberPropsDatasetRuleArray{ ActionUserPropertiesNumberPropsDatasetRuleArgs{...} }
type ActionUserPropertiesNumberPropsDatasetRuleArrayInput interface {
	pulumi.Input

	ToActionUserPropertiesNumberPropsDatasetRuleArrayOutput() ActionUserPropertiesNumberPropsDatasetRuleArrayOutput
	ToActionUserPropertiesNumberPropsDatasetRuleArrayOutputWithContext(context.Context) ActionUserPropertiesNumberPropsDatasetRuleArrayOutput
}

type ActionUserPropertiesNumberPropsDatasetRuleArray []ActionUserPropertiesNumberPropsDatasetRuleInput

func (ActionUserPropertiesNumberPropsDatasetRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionUserPropertiesNumberPropsDatasetRule)(nil)).Elem()
}

func (i ActionUserPropertiesNumberPropsDatasetRuleArray) ToActionUserPropertiesNumberPropsDatasetRuleArrayOutput() ActionUserPropertiesNumberPropsDatasetRuleArrayOutput {
	return i.ToActionUserPropertiesNumberPropsDatasetRuleArrayOutputWithContext(context.Background())
}

func (i ActionUserPropertiesNumberPropsDatasetRuleArray) ToActionUserPropertiesNumberPropsDatasetRuleArrayOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsDatasetRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesNumberPropsDatasetRuleArrayOutput)
}

func (i ActionUserPropertiesNumberPropsDatasetRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]ActionUserPropertiesNumberPropsDatasetRule] {
	return pulumix.Output[[]ActionUserPropertiesNumberPropsDatasetRule]{
		OutputState: i.ToActionUserPropertiesNumberPropsDatasetRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesNumberPropsDatasetRuleOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesNumberPropsDatasetRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesNumberPropsDatasetRule)(nil)).Elem()
}

func (o ActionUserPropertiesNumberPropsDatasetRuleOutput) ToActionUserPropertiesNumberPropsDatasetRuleOutput() ActionUserPropertiesNumberPropsDatasetRuleOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsDatasetRuleOutput) ToActionUserPropertiesNumberPropsDatasetRuleOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsDatasetRuleOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsDatasetRuleOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesNumberPropsDatasetRule] {
	return pulumix.Output[ActionUserPropertiesNumberPropsDatasetRule]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesNumberPropsDatasetRuleOutput) Blueprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberPropsDatasetRule) *string { return v.Blueprint }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesNumberPropsDatasetRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberPropsDatasetRule) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ActionUserPropertiesNumberPropsDatasetRuleOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberPropsDatasetRule) *string { return v.Property }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesNumberPropsDatasetRuleOutput) Value() ActionUserPropertiesNumberPropsDatasetRuleValueOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberPropsDatasetRule) ActionUserPropertiesNumberPropsDatasetRuleValue {
		return v.Value
	}).(ActionUserPropertiesNumberPropsDatasetRuleValueOutput)
}

type ActionUserPropertiesNumberPropsDatasetRuleArrayOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesNumberPropsDatasetRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionUserPropertiesNumberPropsDatasetRule)(nil)).Elem()
}

func (o ActionUserPropertiesNumberPropsDatasetRuleArrayOutput) ToActionUserPropertiesNumberPropsDatasetRuleArrayOutput() ActionUserPropertiesNumberPropsDatasetRuleArrayOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsDatasetRuleArrayOutput) ToActionUserPropertiesNumberPropsDatasetRuleArrayOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsDatasetRuleArrayOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsDatasetRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ActionUserPropertiesNumberPropsDatasetRule] {
	return pulumix.Output[[]ActionUserPropertiesNumberPropsDatasetRule]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesNumberPropsDatasetRuleArrayOutput) Index(i pulumi.IntInput) ActionUserPropertiesNumberPropsDatasetRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionUserPropertiesNumberPropsDatasetRule {
		return vs[0].([]ActionUserPropertiesNumberPropsDatasetRule)[vs[1].(int)]
	}).(ActionUserPropertiesNumberPropsDatasetRuleOutput)
}

type ActionUserPropertiesNumberPropsDatasetRuleValue struct {
	JqQuery string `pulumi:"jqQuery"`
}

// ActionUserPropertiesNumberPropsDatasetRuleValueInput is an input type that accepts ActionUserPropertiesNumberPropsDatasetRuleValueArgs and ActionUserPropertiesNumberPropsDatasetRuleValueOutput values.
// You can construct a concrete instance of `ActionUserPropertiesNumberPropsDatasetRuleValueInput` via:
//
//	ActionUserPropertiesNumberPropsDatasetRuleValueArgs{...}
type ActionUserPropertiesNumberPropsDatasetRuleValueInput interface {
	pulumi.Input

	ToActionUserPropertiesNumberPropsDatasetRuleValueOutput() ActionUserPropertiesNumberPropsDatasetRuleValueOutput
	ToActionUserPropertiesNumberPropsDatasetRuleValueOutputWithContext(context.Context) ActionUserPropertiesNumberPropsDatasetRuleValueOutput
}

type ActionUserPropertiesNumberPropsDatasetRuleValueArgs struct {
	JqQuery pulumi.StringInput `pulumi:"jqQuery"`
}

func (ActionUserPropertiesNumberPropsDatasetRuleValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesNumberPropsDatasetRuleValue)(nil)).Elem()
}

func (i ActionUserPropertiesNumberPropsDatasetRuleValueArgs) ToActionUserPropertiesNumberPropsDatasetRuleValueOutput() ActionUserPropertiesNumberPropsDatasetRuleValueOutput {
	return i.ToActionUserPropertiesNumberPropsDatasetRuleValueOutputWithContext(context.Background())
}

func (i ActionUserPropertiesNumberPropsDatasetRuleValueArgs) ToActionUserPropertiesNumberPropsDatasetRuleValueOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsDatasetRuleValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesNumberPropsDatasetRuleValueOutput)
}

func (i ActionUserPropertiesNumberPropsDatasetRuleValueArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesNumberPropsDatasetRuleValue] {
	return pulumix.Output[ActionUserPropertiesNumberPropsDatasetRuleValue]{
		OutputState: i.ToActionUserPropertiesNumberPropsDatasetRuleValueOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesNumberPropsDatasetRuleValueOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesNumberPropsDatasetRuleValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesNumberPropsDatasetRuleValue)(nil)).Elem()
}

func (o ActionUserPropertiesNumberPropsDatasetRuleValueOutput) ToActionUserPropertiesNumberPropsDatasetRuleValueOutput() ActionUserPropertiesNumberPropsDatasetRuleValueOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsDatasetRuleValueOutput) ToActionUserPropertiesNumberPropsDatasetRuleValueOutputWithContext(ctx context.Context) ActionUserPropertiesNumberPropsDatasetRuleValueOutput {
	return o
}

func (o ActionUserPropertiesNumberPropsDatasetRuleValueOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesNumberPropsDatasetRuleValue] {
	return pulumix.Output[ActionUserPropertiesNumberPropsDatasetRuleValue]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesNumberPropsDatasetRuleValueOutput) JqQuery() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesNumberPropsDatasetRuleValue) string { return v.JqQuery }).(pulumi.StringOutput)
}

type ActionUserPropertiesObjectProps struct {
	Dataset        *ActionUserPropertiesObjectPropsDataset `pulumi:"dataset"`
	Default        *string                                 `pulumi:"default"`
	DefaultJqQuery *string                                 `pulumi:"defaultJqQuery"`
	DependsOns     []string                                `pulumi:"dependsOns"`
	Description    *string                                 `pulumi:"description"`
	Icon           *string                                 `pulumi:"icon"`
	Required       *bool                                   `pulumi:"required"`
	Title          *string                                 `pulumi:"title"`
}

// ActionUserPropertiesObjectPropsInput is an input type that accepts ActionUserPropertiesObjectPropsArgs and ActionUserPropertiesObjectPropsOutput values.
// You can construct a concrete instance of `ActionUserPropertiesObjectPropsInput` via:
//
//	ActionUserPropertiesObjectPropsArgs{...}
type ActionUserPropertiesObjectPropsInput interface {
	pulumi.Input

	ToActionUserPropertiesObjectPropsOutput() ActionUserPropertiesObjectPropsOutput
	ToActionUserPropertiesObjectPropsOutputWithContext(context.Context) ActionUserPropertiesObjectPropsOutput
}

type ActionUserPropertiesObjectPropsArgs struct {
	Dataset        ActionUserPropertiesObjectPropsDatasetPtrInput `pulumi:"dataset"`
	Default        pulumi.StringPtrInput                          `pulumi:"default"`
	DefaultJqQuery pulumi.StringPtrInput                          `pulumi:"defaultJqQuery"`
	DependsOns     pulumi.StringArrayInput                        `pulumi:"dependsOns"`
	Description    pulumi.StringPtrInput                          `pulumi:"description"`
	Icon           pulumi.StringPtrInput                          `pulumi:"icon"`
	Required       pulumi.BoolPtrInput                            `pulumi:"required"`
	Title          pulumi.StringPtrInput                          `pulumi:"title"`
}

func (ActionUserPropertiesObjectPropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesObjectProps)(nil)).Elem()
}

func (i ActionUserPropertiesObjectPropsArgs) ToActionUserPropertiesObjectPropsOutput() ActionUserPropertiesObjectPropsOutput {
	return i.ToActionUserPropertiesObjectPropsOutputWithContext(context.Background())
}

func (i ActionUserPropertiesObjectPropsArgs) ToActionUserPropertiesObjectPropsOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesObjectPropsOutput)
}

func (i ActionUserPropertiesObjectPropsArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesObjectProps] {
	return pulumix.Output[ActionUserPropertiesObjectProps]{
		OutputState: i.ToActionUserPropertiesObjectPropsOutputWithContext(ctx).OutputState,
	}
}

// ActionUserPropertiesObjectPropsMapInput is an input type that accepts ActionUserPropertiesObjectPropsMap and ActionUserPropertiesObjectPropsMapOutput values.
// You can construct a concrete instance of `ActionUserPropertiesObjectPropsMapInput` via:
//
//	ActionUserPropertiesObjectPropsMap{ "key": ActionUserPropertiesObjectPropsArgs{...} }
type ActionUserPropertiesObjectPropsMapInput interface {
	pulumi.Input

	ToActionUserPropertiesObjectPropsMapOutput() ActionUserPropertiesObjectPropsMapOutput
	ToActionUserPropertiesObjectPropsMapOutputWithContext(context.Context) ActionUserPropertiesObjectPropsMapOutput
}

type ActionUserPropertiesObjectPropsMap map[string]ActionUserPropertiesObjectPropsInput

func (ActionUserPropertiesObjectPropsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ActionUserPropertiesObjectProps)(nil)).Elem()
}

func (i ActionUserPropertiesObjectPropsMap) ToActionUserPropertiesObjectPropsMapOutput() ActionUserPropertiesObjectPropsMapOutput {
	return i.ToActionUserPropertiesObjectPropsMapOutputWithContext(context.Background())
}

func (i ActionUserPropertiesObjectPropsMap) ToActionUserPropertiesObjectPropsMapOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesObjectPropsMapOutput)
}

func (i ActionUserPropertiesObjectPropsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]ActionUserPropertiesObjectProps] {
	return pulumix.Output[map[string]ActionUserPropertiesObjectProps]{
		OutputState: i.ToActionUserPropertiesObjectPropsMapOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesObjectPropsOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesObjectPropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesObjectProps)(nil)).Elem()
}

func (o ActionUserPropertiesObjectPropsOutput) ToActionUserPropertiesObjectPropsOutput() ActionUserPropertiesObjectPropsOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsOutput) ToActionUserPropertiesObjectPropsOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesObjectProps] {
	return pulumix.Output[ActionUserPropertiesObjectProps]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesObjectPropsOutput) Dataset() ActionUserPropertiesObjectPropsDatasetPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectProps) *ActionUserPropertiesObjectPropsDataset { return v.Dataset }).(ActionUserPropertiesObjectPropsDatasetPtrOutput)
}

func (o ActionUserPropertiesObjectPropsOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectProps) *string { return v.Default }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesObjectPropsOutput) DefaultJqQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectProps) *string { return v.DefaultJqQuery }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesObjectPropsOutput) DependsOns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectProps) []string { return v.DependsOns }).(pulumi.StringArrayOutput)
}

func (o ActionUserPropertiesObjectPropsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectProps) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesObjectPropsOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectProps) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesObjectPropsOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectProps) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o ActionUserPropertiesObjectPropsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectProps) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ActionUserPropertiesObjectPropsMapOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesObjectPropsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ActionUserPropertiesObjectProps)(nil)).Elem()
}

func (o ActionUserPropertiesObjectPropsMapOutput) ToActionUserPropertiesObjectPropsMapOutput() ActionUserPropertiesObjectPropsMapOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsMapOutput) ToActionUserPropertiesObjectPropsMapOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsMapOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]ActionUserPropertiesObjectProps] {
	return pulumix.Output[map[string]ActionUserPropertiesObjectProps]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesObjectPropsMapOutput) MapIndex(k pulumi.StringInput) ActionUserPropertiesObjectPropsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ActionUserPropertiesObjectProps {
		return vs[0].(map[string]ActionUserPropertiesObjectProps)[vs[1].(string)]
	}).(ActionUserPropertiesObjectPropsOutput)
}

type ActionUserPropertiesObjectPropsDataset struct {
	Combinator string                                       `pulumi:"combinator"`
	Rules      []ActionUserPropertiesObjectPropsDatasetRule `pulumi:"rules"`
}

// ActionUserPropertiesObjectPropsDatasetInput is an input type that accepts ActionUserPropertiesObjectPropsDatasetArgs and ActionUserPropertiesObjectPropsDatasetOutput values.
// You can construct a concrete instance of `ActionUserPropertiesObjectPropsDatasetInput` via:
//
//	ActionUserPropertiesObjectPropsDatasetArgs{...}
type ActionUserPropertiesObjectPropsDatasetInput interface {
	pulumi.Input

	ToActionUserPropertiesObjectPropsDatasetOutput() ActionUserPropertiesObjectPropsDatasetOutput
	ToActionUserPropertiesObjectPropsDatasetOutputWithContext(context.Context) ActionUserPropertiesObjectPropsDatasetOutput
}

type ActionUserPropertiesObjectPropsDatasetArgs struct {
	Combinator pulumi.StringInput                                   `pulumi:"combinator"`
	Rules      ActionUserPropertiesObjectPropsDatasetRuleArrayInput `pulumi:"rules"`
}

func (ActionUserPropertiesObjectPropsDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesObjectPropsDataset)(nil)).Elem()
}

func (i ActionUserPropertiesObjectPropsDatasetArgs) ToActionUserPropertiesObjectPropsDatasetOutput() ActionUserPropertiesObjectPropsDatasetOutput {
	return i.ToActionUserPropertiesObjectPropsDatasetOutputWithContext(context.Background())
}

func (i ActionUserPropertiesObjectPropsDatasetArgs) ToActionUserPropertiesObjectPropsDatasetOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesObjectPropsDatasetOutput)
}

func (i ActionUserPropertiesObjectPropsDatasetArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesObjectPropsDataset] {
	return pulumix.Output[ActionUserPropertiesObjectPropsDataset]{
		OutputState: i.ToActionUserPropertiesObjectPropsDatasetOutputWithContext(ctx).OutputState,
	}
}

func (i ActionUserPropertiesObjectPropsDatasetArgs) ToActionUserPropertiesObjectPropsDatasetPtrOutput() ActionUserPropertiesObjectPropsDatasetPtrOutput {
	return i.ToActionUserPropertiesObjectPropsDatasetPtrOutputWithContext(context.Background())
}

func (i ActionUserPropertiesObjectPropsDatasetArgs) ToActionUserPropertiesObjectPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesObjectPropsDatasetOutput).ToActionUserPropertiesObjectPropsDatasetPtrOutputWithContext(ctx)
}

// ActionUserPropertiesObjectPropsDatasetPtrInput is an input type that accepts ActionUserPropertiesObjectPropsDatasetArgs, ActionUserPropertiesObjectPropsDatasetPtr and ActionUserPropertiesObjectPropsDatasetPtrOutput values.
// You can construct a concrete instance of `ActionUserPropertiesObjectPropsDatasetPtrInput` via:
//
//	        ActionUserPropertiesObjectPropsDatasetArgs{...}
//
//	or:
//
//	        nil
type ActionUserPropertiesObjectPropsDatasetPtrInput interface {
	pulumi.Input

	ToActionUserPropertiesObjectPropsDatasetPtrOutput() ActionUserPropertiesObjectPropsDatasetPtrOutput
	ToActionUserPropertiesObjectPropsDatasetPtrOutputWithContext(context.Context) ActionUserPropertiesObjectPropsDatasetPtrOutput
}

type actionUserPropertiesObjectPropsDatasetPtrType ActionUserPropertiesObjectPropsDatasetArgs

func ActionUserPropertiesObjectPropsDatasetPtr(v *ActionUserPropertiesObjectPropsDatasetArgs) ActionUserPropertiesObjectPropsDatasetPtrInput {
	return (*actionUserPropertiesObjectPropsDatasetPtrType)(v)
}

func (*actionUserPropertiesObjectPropsDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesObjectPropsDataset)(nil)).Elem()
}

func (i *actionUserPropertiesObjectPropsDatasetPtrType) ToActionUserPropertiesObjectPropsDatasetPtrOutput() ActionUserPropertiesObjectPropsDatasetPtrOutput {
	return i.ToActionUserPropertiesObjectPropsDatasetPtrOutputWithContext(context.Background())
}

func (i *actionUserPropertiesObjectPropsDatasetPtrType) ToActionUserPropertiesObjectPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesObjectPropsDatasetPtrOutput)
}

func (i *actionUserPropertiesObjectPropsDatasetPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesObjectPropsDataset] {
	return pulumix.Output[*ActionUserPropertiesObjectPropsDataset]{
		OutputState: i.ToActionUserPropertiesObjectPropsDatasetPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesObjectPropsDatasetOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesObjectPropsDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesObjectPropsDataset)(nil)).Elem()
}

func (o ActionUserPropertiesObjectPropsDatasetOutput) ToActionUserPropertiesObjectPropsDatasetOutput() ActionUserPropertiesObjectPropsDatasetOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsDatasetOutput) ToActionUserPropertiesObjectPropsDatasetOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsDatasetOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsDatasetOutput) ToActionUserPropertiesObjectPropsDatasetPtrOutput() ActionUserPropertiesObjectPropsDatasetPtrOutput {
	return o.ToActionUserPropertiesObjectPropsDatasetPtrOutputWithContext(context.Background())
}

func (o ActionUserPropertiesObjectPropsDatasetOutput) ToActionUserPropertiesObjectPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionUserPropertiesObjectPropsDataset) *ActionUserPropertiesObjectPropsDataset {
		return &v
	}).(ActionUserPropertiesObjectPropsDatasetPtrOutput)
}

func (o ActionUserPropertiesObjectPropsDatasetOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesObjectPropsDataset] {
	return pulumix.Output[ActionUserPropertiesObjectPropsDataset]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesObjectPropsDatasetOutput) Combinator() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectPropsDataset) string { return v.Combinator }).(pulumi.StringOutput)
}

func (o ActionUserPropertiesObjectPropsDatasetOutput) Rules() ActionUserPropertiesObjectPropsDatasetRuleArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectPropsDataset) []ActionUserPropertiesObjectPropsDatasetRule {
		return v.Rules
	}).(ActionUserPropertiesObjectPropsDatasetRuleArrayOutput)
}

type ActionUserPropertiesObjectPropsDatasetPtrOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesObjectPropsDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesObjectPropsDataset)(nil)).Elem()
}

func (o ActionUserPropertiesObjectPropsDatasetPtrOutput) ToActionUserPropertiesObjectPropsDatasetPtrOutput() ActionUserPropertiesObjectPropsDatasetPtrOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsDatasetPtrOutput) ToActionUserPropertiesObjectPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsDatasetPtrOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsDatasetPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesObjectPropsDataset] {
	return pulumix.Output[*ActionUserPropertiesObjectPropsDataset]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesObjectPropsDatasetPtrOutput) Elem() ActionUserPropertiesObjectPropsDatasetOutput {
	return o.ApplyT(func(v *ActionUserPropertiesObjectPropsDataset) ActionUserPropertiesObjectPropsDataset {
		if v != nil {
			return *v
		}
		var ret ActionUserPropertiesObjectPropsDataset
		return ret
	}).(ActionUserPropertiesObjectPropsDatasetOutput)
}

func (o ActionUserPropertiesObjectPropsDatasetPtrOutput) Combinator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionUserPropertiesObjectPropsDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Combinator
	}).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesObjectPropsDatasetPtrOutput) Rules() ActionUserPropertiesObjectPropsDatasetRuleArrayOutput {
	return o.ApplyT(func(v *ActionUserPropertiesObjectPropsDataset) []ActionUserPropertiesObjectPropsDatasetRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ActionUserPropertiesObjectPropsDatasetRuleArrayOutput)
}

type ActionUserPropertiesObjectPropsDatasetRule struct {
	Blueprint *string                                         `pulumi:"blueprint"`
	Operator  string                                          `pulumi:"operator"`
	Property  *string                                         `pulumi:"property"`
	Value     ActionUserPropertiesObjectPropsDatasetRuleValue `pulumi:"value"`
}

// ActionUserPropertiesObjectPropsDatasetRuleInput is an input type that accepts ActionUserPropertiesObjectPropsDatasetRuleArgs and ActionUserPropertiesObjectPropsDatasetRuleOutput values.
// You can construct a concrete instance of `ActionUserPropertiesObjectPropsDatasetRuleInput` via:
//
//	ActionUserPropertiesObjectPropsDatasetRuleArgs{...}
type ActionUserPropertiesObjectPropsDatasetRuleInput interface {
	pulumi.Input

	ToActionUserPropertiesObjectPropsDatasetRuleOutput() ActionUserPropertiesObjectPropsDatasetRuleOutput
	ToActionUserPropertiesObjectPropsDatasetRuleOutputWithContext(context.Context) ActionUserPropertiesObjectPropsDatasetRuleOutput
}

type ActionUserPropertiesObjectPropsDatasetRuleArgs struct {
	Blueprint pulumi.StringPtrInput                                `pulumi:"blueprint"`
	Operator  pulumi.StringInput                                   `pulumi:"operator"`
	Property  pulumi.StringPtrInput                                `pulumi:"property"`
	Value     ActionUserPropertiesObjectPropsDatasetRuleValueInput `pulumi:"value"`
}

func (ActionUserPropertiesObjectPropsDatasetRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesObjectPropsDatasetRule)(nil)).Elem()
}

func (i ActionUserPropertiesObjectPropsDatasetRuleArgs) ToActionUserPropertiesObjectPropsDatasetRuleOutput() ActionUserPropertiesObjectPropsDatasetRuleOutput {
	return i.ToActionUserPropertiesObjectPropsDatasetRuleOutputWithContext(context.Background())
}

func (i ActionUserPropertiesObjectPropsDatasetRuleArgs) ToActionUserPropertiesObjectPropsDatasetRuleOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsDatasetRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesObjectPropsDatasetRuleOutput)
}

func (i ActionUserPropertiesObjectPropsDatasetRuleArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesObjectPropsDatasetRule] {
	return pulumix.Output[ActionUserPropertiesObjectPropsDatasetRule]{
		OutputState: i.ToActionUserPropertiesObjectPropsDatasetRuleOutputWithContext(ctx).OutputState,
	}
}

// ActionUserPropertiesObjectPropsDatasetRuleArrayInput is an input type that accepts ActionUserPropertiesObjectPropsDatasetRuleArray and ActionUserPropertiesObjectPropsDatasetRuleArrayOutput values.
// You can construct a concrete instance of `ActionUserPropertiesObjectPropsDatasetRuleArrayInput` via:
//
//	ActionUserPropertiesObjectPropsDatasetRuleArray{ ActionUserPropertiesObjectPropsDatasetRuleArgs{...} }
type ActionUserPropertiesObjectPropsDatasetRuleArrayInput interface {
	pulumi.Input

	ToActionUserPropertiesObjectPropsDatasetRuleArrayOutput() ActionUserPropertiesObjectPropsDatasetRuleArrayOutput
	ToActionUserPropertiesObjectPropsDatasetRuleArrayOutputWithContext(context.Context) ActionUserPropertiesObjectPropsDatasetRuleArrayOutput
}

type ActionUserPropertiesObjectPropsDatasetRuleArray []ActionUserPropertiesObjectPropsDatasetRuleInput

func (ActionUserPropertiesObjectPropsDatasetRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionUserPropertiesObjectPropsDatasetRule)(nil)).Elem()
}

func (i ActionUserPropertiesObjectPropsDatasetRuleArray) ToActionUserPropertiesObjectPropsDatasetRuleArrayOutput() ActionUserPropertiesObjectPropsDatasetRuleArrayOutput {
	return i.ToActionUserPropertiesObjectPropsDatasetRuleArrayOutputWithContext(context.Background())
}

func (i ActionUserPropertiesObjectPropsDatasetRuleArray) ToActionUserPropertiesObjectPropsDatasetRuleArrayOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsDatasetRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesObjectPropsDatasetRuleArrayOutput)
}

func (i ActionUserPropertiesObjectPropsDatasetRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]ActionUserPropertiesObjectPropsDatasetRule] {
	return pulumix.Output[[]ActionUserPropertiesObjectPropsDatasetRule]{
		OutputState: i.ToActionUserPropertiesObjectPropsDatasetRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesObjectPropsDatasetRuleOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesObjectPropsDatasetRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesObjectPropsDatasetRule)(nil)).Elem()
}

func (o ActionUserPropertiesObjectPropsDatasetRuleOutput) ToActionUserPropertiesObjectPropsDatasetRuleOutput() ActionUserPropertiesObjectPropsDatasetRuleOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsDatasetRuleOutput) ToActionUserPropertiesObjectPropsDatasetRuleOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsDatasetRuleOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsDatasetRuleOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesObjectPropsDatasetRule] {
	return pulumix.Output[ActionUserPropertiesObjectPropsDatasetRule]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesObjectPropsDatasetRuleOutput) Blueprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectPropsDatasetRule) *string { return v.Blueprint }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesObjectPropsDatasetRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectPropsDatasetRule) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ActionUserPropertiesObjectPropsDatasetRuleOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectPropsDatasetRule) *string { return v.Property }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesObjectPropsDatasetRuleOutput) Value() ActionUserPropertiesObjectPropsDatasetRuleValueOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectPropsDatasetRule) ActionUserPropertiesObjectPropsDatasetRuleValue {
		return v.Value
	}).(ActionUserPropertiesObjectPropsDatasetRuleValueOutput)
}

type ActionUserPropertiesObjectPropsDatasetRuleArrayOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesObjectPropsDatasetRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionUserPropertiesObjectPropsDatasetRule)(nil)).Elem()
}

func (o ActionUserPropertiesObjectPropsDatasetRuleArrayOutput) ToActionUserPropertiesObjectPropsDatasetRuleArrayOutput() ActionUserPropertiesObjectPropsDatasetRuleArrayOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsDatasetRuleArrayOutput) ToActionUserPropertiesObjectPropsDatasetRuleArrayOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsDatasetRuleArrayOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsDatasetRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ActionUserPropertiesObjectPropsDatasetRule] {
	return pulumix.Output[[]ActionUserPropertiesObjectPropsDatasetRule]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesObjectPropsDatasetRuleArrayOutput) Index(i pulumi.IntInput) ActionUserPropertiesObjectPropsDatasetRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionUserPropertiesObjectPropsDatasetRule {
		return vs[0].([]ActionUserPropertiesObjectPropsDatasetRule)[vs[1].(int)]
	}).(ActionUserPropertiesObjectPropsDatasetRuleOutput)
}

type ActionUserPropertiesObjectPropsDatasetRuleValue struct {
	JqQuery string `pulumi:"jqQuery"`
}

// ActionUserPropertiesObjectPropsDatasetRuleValueInput is an input type that accepts ActionUserPropertiesObjectPropsDatasetRuleValueArgs and ActionUserPropertiesObjectPropsDatasetRuleValueOutput values.
// You can construct a concrete instance of `ActionUserPropertiesObjectPropsDatasetRuleValueInput` via:
//
//	ActionUserPropertiesObjectPropsDatasetRuleValueArgs{...}
type ActionUserPropertiesObjectPropsDatasetRuleValueInput interface {
	pulumi.Input

	ToActionUserPropertiesObjectPropsDatasetRuleValueOutput() ActionUserPropertiesObjectPropsDatasetRuleValueOutput
	ToActionUserPropertiesObjectPropsDatasetRuleValueOutputWithContext(context.Context) ActionUserPropertiesObjectPropsDatasetRuleValueOutput
}

type ActionUserPropertiesObjectPropsDatasetRuleValueArgs struct {
	JqQuery pulumi.StringInput `pulumi:"jqQuery"`
}

func (ActionUserPropertiesObjectPropsDatasetRuleValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesObjectPropsDatasetRuleValue)(nil)).Elem()
}

func (i ActionUserPropertiesObjectPropsDatasetRuleValueArgs) ToActionUserPropertiesObjectPropsDatasetRuleValueOutput() ActionUserPropertiesObjectPropsDatasetRuleValueOutput {
	return i.ToActionUserPropertiesObjectPropsDatasetRuleValueOutputWithContext(context.Background())
}

func (i ActionUserPropertiesObjectPropsDatasetRuleValueArgs) ToActionUserPropertiesObjectPropsDatasetRuleValueOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsDatasetRuleValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesObjectPropsDatasetRuleValueOutput)
}

func (i ActionUserPropertiesObjectPropsDatasetRuleValueArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesObjectPropsDatasetRuleValue] {
	return pulumix.Output[ActionUserPropertiesObjectPropsDatasetRuleValue]{
		OutputState: i.ToActionUserPropertiesObjectPropsDatasetRuleValueOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesObjectPropsDatasetRuleValueOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesObjectPropsDatasetRuleValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesObjectPropsDatasetRuleValue)(nil)).Elem()
}

func (o ActionUserPropertiesObjectPropsDatasetRuleValueOutput) ToActionUserPropertiesObjectPropsDatasetRuleValueOutput() ActionUserPropertiesObjectPropsDatasetRuleValueOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsDatasetRuleValueOutput) ToActionUserPropertiesObjectPropsDatasetRuleValueOutputWithContext(ctx context.Context) ActionUserPropertiesObjectPropsDatasetRuleValueOutput {
	return o
}

func (o ActionUserPropertiesObjectPropsDatasetRuleValueOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesObjectPropsDatasetRuleValue] {
	return pulumix.Output[ActionUserPropertiesObjectPropsDatasetRuleValue]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesObjectPropsDatasetRuleValueOutput) JqQuery() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesObjectPropsDatasetRuleValue) string { return v.JqQuery }).(pulumi.StringOutput)
}

type ActionUserPropertiesStringProps struct {
	Blueprint      *string                                 `pulumi:"blueprint"`
	Dataset        *ActionUserPropertiesStringPropsDataset `pulumi:"dataset"`
	Default        *string                                 `pulumi:"default"`
	DefaultJqQuery *string                                 `pulumi:"defaultJqQuery"`
	DependsOns     []string                                `pulumi:"dependsOns"`
	Description    *string                                 `pulumi:"description"`
	EnumJqQuery    *string                                 `pulumi:"enumJqQuery"`
	Enums          []string                                `pulumi:"enums"`
	Format         *string                                 `pulumi:"format"`
	Icon           *string                                 `pulumi:"icon"`
	MaxLength      *int                                    `pulumi:"maxLength"`
	MinLength      *int                                    `pulumi:"minLength"`
	Pattern        *string                                 `pulumi:"pattern"`
	Required       *bool                                   `pulumi:"required"`
	Title          *string                                 `pulumi:"title"`
}

// ActionUserPropertiesStringPropsInput is an input type that accepts ActionUserPropertiesStringPropsArgs and ActionUserPropertiesStringPropsOutput values.
// You can construct a concrete instance of `ActionUserPropertiesStringPropsInput` via:
//
//	ActionUserPropertiesStringPropsArgs{...}
type ActionUserPropertiesStringPropsInput interface {
	pulumi.Input

	ToActionUserPropertiesStringPropsOutput() ActionUserPropertiesStringPropsOutput
	ToActionUserPropertiesStringPropsOutputWithContext(context.Context) ActionUserPropertiesStringPropsOutput
}

type ActionUserPropertiesStringPropsArgs struct {
	Blueprint      pulumi.StringPtrInput                          `pulumi:"blueprint"`
	Dataset        ActionUserPropertiesStringPropsDatasetPtrInput `pulumi:"dataset"`
	Default        pulumi.StringPtrInput                          `pulumi:"default"`
	DefaultJqQuery pulumi.StringPtrInput                          `pulumi:"defaultJqQuery"`
	DependsOns     pulumi.StringArrayInput                        `pulumi:"dependsOns"`
	Description    pulumi.StringPtrInput                          `pulumi:"description"`
	EnumJqQuery    pulumi.StringPtrInput                          `pulumi:"enumJqQuery"`
	Enums          pulumi.StringArrayInput                        `pulumi:"enums"`
	Format         pulumi.StringPtrInput                          `pulumi:"format"`
	Icon           pulumi.StringPtrInput                          `pulumi:"icon"`
	MaxLength      pulumi.IntPtrInput                             `pulumi:"maxLength"`
	MinLength      pulumi.IntPtrInput                             `pulumi:"minLength"`
	Pattern        pulumi.StringPtrInput                          `pulumi:"pattern"`
	Required       pulumi.BoolPtrInput                            `pulumi:"required"`
	Title          pulumi.StringPtrInput                          `pulumi:"title"`
}

func (ActionUserPropertiesStringPropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesStringProps)(nil)).Elem()
}

func (i ActionUserPropertiesStringPropsArgs) ToActionUserPropertiesStringPropsOutput() ActionUserPropertiesStringPropsOutput {
	return i.ToActionUserPropertiesStringPropsOutputWithContext(context.Background())
}

func (i ActionUserPropertiesStringPropsArgs) ToActionUserPropertiesStringPropsOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesStringPropsOutput)
}

func (i ActionUserPropertiesStringPropsArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesStringProps] {
	return pulumix.Output[ActionUserPropertiesStringProps]{
		OutputState: i.ToActionUserPropertiesStringPropsOutputWithContext(ctx).OutputState,
	}
}

// ActionUserPropertiesStringPropsMapInput is an input type that accepts ActionUserPropertiesStringPropsMap and ActionUserPropertiesStringPropsMapOutput values.
// You can construct a concrete instance of `ActionUserPropertiesStringPropsMapInput` via:
//
//	ActionUserPropertiesStringPropsMap{ "key": ActionUserPropertiesStringPropsArgs{...} }
type ActionUserPropertiesStringPropsMapInput interface {
	pulumi.Input

	ToActionUserPropertiesStringPropsMapOutput() ActionUserPropertiesStringPropsMapOutput
	ToActionUserPropertiesStringPropsMapOutputWithContext(context.Context) ActionUserPropertiesStringPropsMapOutput
}

type ActionUserPropertiesStringPropsMap map[string]ActionUserPropertiesStringPropsInput

func (ActionUserPropertiesStringPropsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ActionUserPropertiesStringProps)(nil)).Elem()
}

func (i ActionUserPropertiesStringPropsMap) ToActionUserPropertiesStringPropsMapOutput() ActionUserPropertiesStringPropsMapOutput {
	return i.ToActionUserPropertiesStringPropsMapOutputWithContext(context.Background())
}

func (i ActionUserPropertiesStringPropsMap) ToActionUserPropertiesStringPropsMapOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesStringPropsMapOutput)
}

func (i ActionUserPropertiesStringPropsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]ActionUserPropertiesStringProps] {
	return pulumix.Output[map[string]ActionUserPropertiesStringProps]{
		OutputState: i.ToActionUserPropertiesStringPropsMapOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesStringPropsOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesStringPropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesStringProps)(nil)).Elem()
}

func (o ActionUserPropertiesStringPropsOutput) ToActionUserPropertiesStringPropsOutput() ActionUserPropertiesStringPropsOutput {
	return o
}

func (o ActionUserPropertiesStringPropsOutput) ToActionUserPropertiesStringPropsOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsOutput {
	return o
}

func (o ActionUserPropertiesStringPropsOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesStringProps] {
	return pulumix.Output[ActionUserPropertiesStringProps]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesStringPropsOutput) Blueprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) *string { return v.Blueprint }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesStringPropsOutput) Dataset() ActionUserPropertiesStringPropsDatasetPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) *ActionUserPropertiesStringPropsDataset { return v.Dataset }).(ActionUserPropertiesStringPropsDatasetPtrOutput)
}

func (o ActionUserPropertiesStringPropsOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) *string { return v.Default }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesStringPropsOutput) DefaultJqQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) *string { return v.DefaultJqQuery }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesStringPropsOutput) DependsOns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) []string { return v.DependsOns }).(pulumi.StringArrayOutput)
}

func (o ActionUserPropertiesStringPropsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesStringPropsOutput) EnumJqQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) *string { return v.EnumJqQuery }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesStringPropsOutput) Enums() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) []string { return v.Enums }).(pulumi.StringArrayOutput)
}

func (o ActionUserPropertiesStringPropsOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesStringPropsOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesStringPropsOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) *int { return v.MaxLength }).(pulumi.IntPtrOutput)
}

func (o ActionUserPropertiesStringPropsOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) *int { return v.MinLength }).(pulumi.IntPtrOutput)
}

func (o ActionUserPropertiesStringPropsOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesStringPropsOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o ActionUserPropertiesStringPropsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringProps) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type ActionUserPropertiesStringPropsMapOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesStringPropsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ActionUserPropertiesStringProps)(nil)).Elem()
}

func (o ActionUserPropertiesStringPropsMapOutput) ToActionUserPropertiesStringPropsMapOutput() ActionUserPropertiesStringPropsMapOutput {
	return o
}

func (o ActionUserPropertiesStringPropsMapOutput) ToActionUserPropertiesStringPropsMapOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsMapOutput {
	return o
}

func (o ActionUserPropertiesStringPropsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]ActionUserPropertiesStringProps] {
	return pulumix.Output[map[string]ActionUserPropertiesStringProps]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesStringPropsMapOutput) MapIndex(k pulumi.StringInput) ActionUserPropertiesStringPropsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ActionUserPropertiesStringProps {
		return vs[0].(map[string]ActionUserPropertiesStringProps)[vs[1].(string)]
	}).(ActionUserPropertiesStringPropsOutput)
}

type ActionUserPropertiesStringPropsDataset struct {
	Combinator string                                       `pulumi:"combinator"`
	Rules      []ActionUserPropertiesStringPropsDatasetRule `pulumi:"rules"`
}

// ActionUserPropertiesStringPropsDatasetInput is an input type that accepts ActionUserPropertiesStringPropsDatasetArgs and ActionUserPropertiesStringPropsDatasetOutput values.
// You can construct a concrete instance of `ActionUserPropertiesStringPropsDatasetInput` via:
//
//	ActionUserPropertiesStringPropsDatasetArgs{...}
type ActionUserPropertiesStringPropsDatasetInput interface {
	pulumi.Input

	ToActionUserPropertiesStringPropsDatasetOutput() ActionUserPropertiesStringPropsDatasetOutput
	ToActionUserPropertiesStringPropsDatasetOutputWithContext(context.Context) ActionUserPropertiesStringPropsDatasetOutput
}

type ActionUserPropertiesStringPropsDatasetArgs struct {
	Combinator pulumi.StringInput                                   `pulumi:"combinator"`
	Rules      ActionUserPropertiesStringPropsDatasetRuleArrayInput `pulumi:"rules"`
}

func (ActionUserPropertiesStringPropsDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesStringPropsDataset)(nil)).Elem()
}

func (i ActionUserPropertiesStringPropsDatasetArgs) ToActionUserPropertiesStringPropsDatasetOutput() ActionUserPropertiesStringPropsDatasetOutput {
	return i.ToActionUserPropertiesStringPropsDatasetOutputWithContext(context.Background())
}

func (i ActionUserPropertiesStringPropsDatasetArgs) ToActionUserPropertiesStringPropsDatasetOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesStringPropsDatasetOutput)
}

func (i ActionUserPropertiesStringPropsDatasetArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesStringPropsDataset] {
	return pulumix.Output[ActionUserPropertiesStringPropsDataset]{
		OutputState: i.ToActionUserPropertiesStringPropsDatasetOutputWithContext(ctx).OutputState,
	}
}

func (i ActionUserPropertiesStringPropsDatasetArgs) ToActionUserPropertiesStringPropsDatasetPtrOutput() ActionUserPropertiesStringPropsDatasetPtrOutput {
	return i.ToActionUserPropertiesStringPropsDatasetPtrOutputWithContext(context.Background())
}

func (i ActionUserPropertiesStringPropsDatasetArgs) ToActionUserPropertiesStringPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesStringPropsDatasetOutput).ToActionUserPropertiesStringPropsDatasetPtrOutputWithContext(ctx)
}

// ActionUserPropertiesStringPropsDatasetPtrInput is an input type that accepts ActionUserPropertiesStringPropsDatasetArgs, ActionUserPropertiesStringPropsDatasetPtr and ActionUserPropertiesStringPropsDatasetPtrOutput values.
// You can construct a concrete instance of `ActionUserPropertiesStringPropsDatasetPtrInput` via:
//
//	        ActionUserPropertiesStringPropsDatasetArgs{...}
//
//	or:
//
//	        nil
type ActionUserPropertiesStringPropsDatasetPtrInput interface {
	pulumi.Input

	ToActionUserPropertiesStringPropsDatasetPtrOutput() ActionUserPropertiesStringPropsDatasetPtrOutput
	ToActionUserPropertiesStringPropsDatasetPtrOutputWithContext(context.Context) ActionUserPropertiesStringPropsDatasetPtrOutput
}

type actionUserPropertiesStringPropsDatasetPtrType ActionUserPropertiesStringPropsDatasetArgs

func ActionUserPropertiesStringPropsDatasetPtr(v *ActionUserPropertiesStringPropsDatasetArgs) ActionUserPropertiesStringPropsDatasetPtrInput {
	return (*actionUserPropertiesStringPropsDatasetPtrType)(v)
}

func (*actionUserPropertiesStringPropsDatasetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesStringPropsDataset)(nil)).Elem()
}

func (i *actionUserPropertiesStringPropsDatasetPtrType) ToActionUserPropertiesStringPropsDatasetPtrOutput() ActionUserPropertiesStringPropsDatasetPtrOutput {
	return i.ToActionUserPropertiesStringPropsDatasetPtrOutputWithContext(context.Background())
}

func (i *actionUserPropertiesStringPropsDatasetPtrType) ToActionUserPropertiesStringPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsDatasetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesStringPropsDatasetPtrOutput)
}

func (i *actionUserPropertiesStringPropsDatasetPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesStringPropsDataset] {
	return pulumix.Output[*ActionUserPropertiesStringPropsDataset]{
		OutputState: i.ToActionUserPropertiesStringPropsDatasetPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesStringPropsDatasetOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesStringPropsDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesStringPropsDataset)(nil)).Elem()
}

func (o ActionUserPropertiesStringPropsDatasetOutput) ToActionUserPropertiesStringPropsDatasetOutput() ActionUserPropertiesStringPropsDatasetOutput {
	return o
}

func (o ActionUserPropertiesStringPropsDatasetOutput) ToActionUserPropertiesStringPropsDatasetOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsDatasetOutput {
	return o
}

func (o ActionUserPropertiesStringPropsDatasetOutput) ToActionUserPropertiesStringPropsDatasetPtrOutput() ActionUserPropertiesStringPropsDatasetPtrOutput {
	return o.ToActionUserPropertiesStringPropsDatasetPtrOutputWithContext(context.Background())
}

func (o ActionUserPropertiesStringPropsDatasetOutput) ToActionUserPropertiesStringPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsDatasetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionUserPropertiesStringPropsDataset) *ActionUserPropertiesStringPropsDataset {
		return &v
	}).(ActionUserPropertiesStringPropsDatasetPtrOutput)
}

func (o ActionUserPropertiesStringPropsDatasetOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesStringPropsDataset] {
	return pulumix.Output[ActionUserPropertiesStringPropsDataset]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesStringPropsDatasetOutput) Combinator() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringPropsDataset) string { return v.Combinator }).(pulumi.StringOutput)
}

func (o ActionUserPropertiesStringPropsDatasetOutput) Rules() ActionUserPropertiesStringPropsDatasetRuleArrayOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringPropsDataset) []ActionUserPropertiesStringPropsDatasetRule {
		return v.Rules
	}).(ActionUserPropertiesStringPropsDatasetRuleArrayOutput)
}

type ActionUserPropertiesStringPropsDatasetPtrOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesStringPropsDatasetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionUserPropertiesStringPropsDataset)(nil)).Elem()
}

func (o ActionUserPropertiesStringPropsDatasetPtrOutput) ToActionUserPropertiesStringPropsDatasetPtrOutput() ActionUserPropertiesStringPropsDatasetPtrOutput {
	return o
}

func (o ActionUserPropertiesStringPropsDatasetPtrOutput) ToActionUserPropertiesStringPropsDatasetPtrOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsDatasetPtrOutput {
	return o
}

func (o ActionUserPropertiesStringPropsDatasetPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionUserPropertiesStringPropsDataset] {
	return pulumix.Output[*ActionUserPropertiesStringPropsDataset]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesStringPropsDatasetPtrOutput) Elem() ActionUserPropertiesStringPropsDatasetOutput {
	return o.ApplyT(func(v *ActionUserPropertiesStringPropsDataset) ActionUserPropertiesStringPropsDataset {
		if v != nil {
			return *v
		}
		var ret ActionUserPropertiesStringPropsDataset
		return ret
	}).(ActionUserPropertiesStringPropsDatasetOutput)
}

func (o ActionUserPropertiesStringPropsDatasetPtrOutput) Combinator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionUserPropertiesStringPropsDataset) *string {
		if v == nil {
			return nil
		}
		return &v.Combinator
	}).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesStringPropsDatasetPtrOutput) Rules() ActionUserPropertiesStringPropsDatasetRuleArrayOutput {
	return o.ApplyT(func(v *ActionUserPropertiesStringPropsDataset) []ActionUserPropertiesStringPropsDatasetRule {
		if v == nil {
			return nil
		}
		return v.Rules
	}).(ActionUserPropertiesStringPropsDatasetRuleArrayOutput)
}

type ActionUserPropertiesStringPropsDatasetRule struct {
	Blueprint *string                                         `pulumi:"blueprint"`
	Operator  string                                          `pulumi:"operator"`
	Property  *string                                         `pulumi:"property"`
	Value     ActionUserPropertiesStringPropsDatasetRuleValue `pulumi:"value"`
}

// ActionUserPropertiesStringPropsDatasetRuleInput is an input type that accepts ActionUserPropertiesStringPropsDatasetRuleArgs and ActionUserPropertiesStringPropsDatasetRuleOutput values.
// You can construct a concrete instance of `ActionUserPropertiesStringPropsDatasetRuleInput` via:
//
//	ActionUserPropertiesStringPropsDatasetRuleArgs{...}
type ActionUserPropertiesStringPropsDatasetRuleInput interface {
	pulumi.Input

	ToActionUserPropertiesStringPropsDatasetRuleOutput() ActionUserPropertiesStringPropsDatasetRuleOutput
	ToActionUserPropertiesStringPropsDatasetRuleOutputWithContext(context.Context) ActionUserPropertiesStringPropsDatasetRuleOutput
}

type ActionUserPropertiesStringPropsDatasetRuleArgs struct {
	Blueprint pulumi.StringPtrInput                                `pulumi:"blueprint"`
	Operator  pulumi.StringInput                                   `pulumi:"operator"`
	Property  pulumi.StringPtrInput                                `pulumi:"property"`
	Value     ActionUserPropertiesStringPropsDatasetRuleValueInput `pulumi:"value"`
}

func (ActionUserPropertiesStringPropsDatasetRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesStringPropsDatasetRule)(nil)).Elem()
}

func (i ActionUserPropertiesStringPropsDatasetRuleArgs) ToActionUserPropertiesStringPropsDatasetRuleOutput() ActionUserPropertiesStringPropsDatasetRuleOutput {
	return i.ToActionUserPropertiesStringPropsDatasetRuleOutputWithContext(context.Background())
}

func (i ActionUserPropertiesStringPropsDatasetRuleArgs) ToActionUserPropertiesStringPropsDatasetRuleOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsDatasetRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesStringPropsDatasetRuleOutput)
}

func (i ActionUserPropertiesStringPropsDatasetRuleArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesStringPropsDatasetRule] {
	return pulumix.Output[ActionUserPropertiesStringPropsDatasetRule]{
		OutputState: i.ToActionUserPropertiesStringPropsDatasetRuleOutputWithContext(ctx).OutputState,
	}
}

// ActionUserPropertiesStringPropsDatasetRuleArrayInput is an input type that accepts ActionUserPropertiesStringPropsDatasetRuleArray and ActionUserPropertiesStringPropsDatasetRuleArrayOutput values.
// You can construct a concrete instance of `ActionUserPropertiesStringPropsDatasetRuleArrayInput` via:
//
//	ActionUserPropertiesStringPropsDatasetRuleArray{ ActionUserPropertiesStringPropsDatasetRuleArgs{...} }
type ActionUserPropertiesStringPropsDatasetRuleArrayInput interface {
	pulumi.Input

	ToActionUserPropertiesStringPropsDatasetRuleArrayOutput() ActionUserPropertiesStringPropsDatasetRuleArrayOutput
	ToActionUserPropertiesStringPropsDatasetRuleArrayOutputWithContext(context.Context) ActionUserPropertiesStringPropsDatasetRuleArrayOutput
}

type ActionUserPropertiesStringPropsDatasetRuleArray []ActionUserPropertiesStringPropsDatasetRuleInput

func (ActionUserPropertiesStringPropsDatasetRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionUserPropertiesStringPropsDatasetRule)(nil)).Elem()
}

func (i ActionUserPropertiesStringPropsDatasetRuleArray) ToActionUserPropertiesStringPropsDatasetRuleArrayOutput() ActionUserPropertiesStringPropsDatasetRuleArrayOutput {
	return i.ToActionUserPropertiesStringPropsDatasetRuleArrayOutputWithContext(context.Background())
}

func (i ActionUserPropertiesStringPropsDatasetRuleArray) ToActionUserPropertiesStringPropsDatasetRuleArrayOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsDatasetRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesStringPropsDatasetRuleArrayOutput)
}

func (i ActionUserPropertiesStringPropsDatasetRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]ActionUserPropertiesStringPropsDatasetRule] {
	return pulumix.Output[[]ActionUserPropertiesStringPropsDatasetRule]{
		OutputState: i.ToActionUserPropertiesStringPropsDatasetRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesStringPropsDatasetRuleOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesStringPropsDatasetRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesStringPropsDatasetRule)(nil)).Elem()
}

func (o ActionUserPropertiesStringPropsDatasetRuleOutput) ToActionUserPropertiesStringPropsDatasetRuleOutput() ActionUserPropertiesStringPropsDatasetRuleOutput {
	return o
}

func (o ActionUserPropertiesStringPropsDatasetRuleOutput) ToActionUserPropertiesStringPropsDatasetRuleOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsDatasetRuleOutput {
	return o
}

func (o ActionUserPropertiesStringPropsDatasetRuleOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesStringPropsDatasetRule] {
	return pulumix.Output[ActionUserPropertiesStringPropsDatasetRule]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesStringPropsDatasetRuleOutput) Blueprint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringPropsDatasetRule) *string { return v.Blueprint }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesStringPropsDatasetRuleOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringPropsDatasetRule) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ActionUserPropertiesStringPropsDatasetRuleOutput) Property() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringPropsDatasetRule) *string { return v.Property }).(pulumi.StringPtrOutput)
}

func (o ActionUserPropertiesStringPropsDatasetRuleOutput) Value() ActionUserPropertiesStringPropsDatasetRuleValueOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringPropsDatasetRule) ActionUserPropertiesStringPropsDatasetRuleValue {
		return v.Value
	}).(ActionUserPropertiesStringPropsDatasetRuleValueOutput)
}

type ActionUserPropertiesStringPropsDatasetRuleArrayOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesStringPropsDatasetRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ActionUserPropertiesStringPropsDatasetRule)(nil)).Elem()
}

func (o ActionUserPropertiesStringPropsDatasetRuleArrayOutput) ToActionUserPropertiesStringPropsDatasetRuleArrayOutput() ActionUserPropertiesStringPropsDatasetRuleArrayOutput {
	return o
}

func (o ActionUserPropertiesStringPropsDatasetRuleArrayOutput) ToActionUserPropertiesStringPropsDatasetRuleArrayOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsDatasetRuleArrayOutput {
	return o
}

func (o ActionUserPropertiesStringPropsDatasetRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ActionUserPropertiesStringPropsDatasetRule] {
	return pulumix.Output[[]ActionUserPropertiesStringPropsDatasetRule]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesStringPropsDatasetRuleArrayOutput) Index(i pulumi.IntInput) ActionUserPropertiesStringPropsDatasetRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ActionUserPropertiesStringPropsDatasetRule {
		return vs[0].([]ActionUserPropertiesStringPropsDatasetRule)[vs[1].(int)]
	}).(ActionUserPropertiesStringPropsDatasetRuleOutput)
}

type ActionUserPropertiesStringPropsDatasetRuleValue struct {
	JqQuery string `pulumi:"jqQuery"`
}

// ActionUserPropertiesStringPropsDatasetRuleValueInput is an input type that accepts ActionUserPropertiesStringPropsDatasetRuleValueArgs and ActionUserPropertiesStringPropsDatasetRuleValueOutput values.
// You can construct a concrete instance of `ActionUserPropertiesStringPropsDatasetRuleValueInput` via:
//
//	ActionUserPropertiesStringPropsDatasetRuleValueArgs{...}
type ActionUserPropertiesStringPropsDatasetRuleValueInput interface {
	pulumi.Input

	ToActionUserPropertiesStringPropsDatasetRuleValueOutput() ActionUserPropertiesStringPropsDatasetRuleValueOutput
	ToActionUserPropertiesStringPropsDatasetRuleValueOutputWithContext(context.Context) ActionUserPropertiesStringPropsDatasetRuleValueOutput
}

type ActionUserPropertiesStringPropsDatasetRuleValueArgs struct {
	JqQuery pulumi.StringInput `pulumi:"jqQuery"`
}

func (ActionUserPropertiesStringPropsDatasetRuleValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesStringPropsDatasetRuleValue)(nil)).Elem()
}

func (i ActionUserPropertiesStringPropsDatasetRuleValueArgs) ToActionUserPropertiesStringPropsDatasetRuleValueOutput() ActionUserPropertiesStringPropsDatasetRuleValueOutput {
	return i.ToActionUserPropertiesStringPropsDatasetRuleValueOutputWithContext(context.Background())
}

func (i ActionUserPropertiesStringPropsDatasetRuleValueArgs) ToActionUserPropertiesStringPropsDatasetRuleValueOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsDatasetRuleValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionUserPropertiesStringPropsDatasetRuleValueOutput)
}

func (i ActionUserPropertiesStringPropsDatasetRuleValueArgs) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesStringPropsDatasetRuleValue] {
	return pulumix.Output[ActionUserPropertiesStringPropsDatasetRuleValue]{
		OutputState: i.ToActionUserPropertiesStringPropsDatasetRuleValueOutputWithContext(ctx).OutputState,
	}
}

type ActionUserPropertiesStringPropsDatasetRuleValueOutput struct{ *pulumi.OutputState }

func (ActionUserPropertiesStringPropsDatasetRuleValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionUserPropertiesStringPropsDatasetRuleValue)(nil)).Elem()
}

func (o ActionUserPropertiesStringPropsDatasetRuleValueOutput) ToActionUserPropertiesStringPropsDatasetRuleValueOutput() ActionUserPropertiesStringPropsDatasetRuleValueOutput {
	return o
}

func (o ActionUserPropertiesStringPropsDatasetRuleValueOutput) ToActionUserPropertiesStringPropsDatasetRuleValueOutputWithContext(ctx context.Context) ActionUserPropertiesStringPropsDatasetRuleValueOutput {
	return o
}

func (o ActionUserPropertiesStringPropsDatasetRuleValueOutput) ToOutput(ctx context.Context) pulumix.Output[ActionUserPropertiesStringPropsDatasetRuleValue] {
	return pulumix.Output[ActionUserPropertiesStringPropsDatasetRuleValue]{
		OutputState: o.OutputState,
	}
}

func (o ActionUserPropertiesStringPropsDatasetRuleValueOutput) JqQuery() pulumi.StringOutput {
	return o.ApplyT(func(v ActionUserPropertiesStringPropsDatasetRuleValue) string { return v.JqQuery }).(pulumi.StringOutput)
}

type ActionWebhookMethod struct {
	Agent        *bool   `pulumi:"agent"`
	Method       *string `pulumi:"method"`
	Synchronized *bool   `pulumi:"synchronized"`
	Url          string  `pulumi:"url"`
}

// ActionWebhookMethodInput is an input type that accepts ActionWebhookMethodArgs and ActionWebhookMethodOutput values.
// You can construct a concrete instance of `ActionWebhookMethodInput` via:
//
//	ActionWebhookMethodArgs{...}
type ActionWebhookMethodInput interface {
	pulumi.Input

	ToActionWebhookMethodOutput() ActionWebhookMethodOutput
	ToActionWebhookMethodOutputWithContext(context.Context) ActionWebhookMethodOutput
}

type ActionWebhookMethodArgs struct {
	Agent        pulumi.BoolPtrInput   `pulumi:"agent"`
	Method       pulumi.StringPtrInput `pulumi:"method"`
	Synchronized pulumi.BoolPtrInput   `pulumi:"synchronized"`
	Url          pulumi.StringInput    `pulumi:"url"`
}

func (ActionWebhookMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionWebhookMethod)(nil)).Elem()
}

func (i ActionWebhookMethodArgs) ToActionWebhookMethodOutput() ActionWebhookMethodOutput {
	return i.ToActionWebhookMethodOutputWithContext(context.Background())
}

func (i ActionWebhookMethodArgs) ToActionWebhookMethodOutputWithContext(ctx context.Context) ActionWebhookMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionWebhookMethodOutput)
}

func (i ActionWebhookMethodArgs) ToOutput(ctx context.Context) pulumix.Output[ActionWebhookMethod] {
	return pulumix.Output[ActionWebhookMethod]{
		OutputState: i.ToActionWebhookMethodOutputWithContext(ctx).OutputState,
	}
}

func (i ActionWebhookMethodArgs) ToActionWebhookMethodPtrOutput() ActionWebhookMethodPtrOutput {
	return i.ToActionWebhookMethodPtrOutputWithContext(context.Background())
}

func (i ActionWebhookMethodArgs) ToActionWebhookMethodPtrOutputWithContext(ctx context.Context) ActionWebhookMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionWebhookMethodOutput).ToActionWebhookMethodPtrOutputWithContext(ctx)
}

// ActionWebhookMethodPtrInput is an input type that accepts ActionWebhookMethodArgs, ActionWebhookMethodPtr and ActionWebhookMethodPtrOutput values.
// You can construct a concrete instance of `ActionWebhookMethodPtrInput` via:
//
//	        ActionWebhookMethodArgs{...}
//
//	or:
//
//	        nil
type ActionWebhookMethodPtrInput interface {
	pulumi.Input

	ToActionWebhookMethodPtrOutput() ActionWebhookMethodPtrOutput
	ToActionWebhookMethodPtrOutputWithContext(context.Context) ActionWebhookMethodPtrOutput
}

type actionWebhookMethodPtrType ActionWebhookMethodArgs

func ActionWebhookMethodPtr(v *ActionWebhookMethodArgs) ActionWebhookMethodPtrInput {
	return (*actionWebhookMethodPtrType)(v)
}

func (*actionWebhookMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionWebhookMethod)(nil)).Elem()
}

func (i *actionWebhookMethodPtrType) ToActionWebhookMethodPtrOutput() ActionWebhookMethodPtrOutput {
	return i.ToActionWebhookMethodPtrOutputWithContext(context.Background())
}

func (i *actionWebhookMethodPtrType) ToActionWebhookMethodPtrOutputWithContext(ctx context.Context) ActionWebhookMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ActionWebhookMethodPtrOutput)
}

func (i *actionWebhookMethodPtrType) ToOutput(ctx context.Context) pulumix.Output[*ActionWebhookMethod] {
	return pulumix.Output[*ActionWebhookMethod]{
		OutputState: i.ToActionWebhookMethodPtrOutputWithContext(ctx).OutputState,
	}
}

type ActionWebhookMethodOutput struct{ *pulumi.OutputState }

func (ActionWebhookMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ActionWebhookMethod)(nil)).Elem()
}

func (o ActionWebhookMethodOutput) ToActionWebhookMethodOutput() ActionWebhookMethodOutput {
	return o
}

func (o ActionWebhookMethodOutput) ToActionWebhookMethodOutputWithContext(ctx context.Context) ActionWebhookMethodOutput {
	return o
}

func (o ActionWebhookMethodOutput) ToActionWebhookMethodPtrOutput() ActionWebhookMethodPtrOutput {
	return o.ToActionWebhookMethodPtrOutputWithContext(context.Background())
}

func (o ActionWebhookMethodOutput) ToActionWebhookMethodPtrOutputWithContext(ctx context.Context) ActionWebhookMethodPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ActionWebhookMethod) *ActionWebhookMethod {
		return &v
	}).(ActionWebhookMethodPtrOutput)
}

func (o ActionWebhookMethodOutput) ToOutput(ctx context.Context) pulumix.Output[ActionWebhookMethod] {
	return pulumix.Output[ActionWebhookMethod]{
		OutputState: o.OutputState,
	}
}

func (o ActionWebhookMethodOutput) Agent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionWebhookMethod) *bool { return v.Agent }).(pulumi.BoolPtrOutput)
}

func (o ActionWebhookMethodOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ActionWebhookMethod) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o ActionWebhookMethodOutput) Synchronized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ActionWebhookMethod) *bool { return v.Synchronized }).(pulumi.BoolPtrOutput)
}

func (o ActionWebhookMethodOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ActionWebhookMethod) string { return v.Url }).(pulumi.StringOutput)
}

type ActionWebhookMethodPtrOutput struct{ *pulumi.OutputState }

func (ActionWebhookMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ActionWebhookMethod)(nil)).Elem()
}

func (o ActionWebhookMethodPtrOutput) ToActionWebhookMethodPtrOutput() ActionWebhookMethodPtrOutput {
	return o
}

func (o ActionWebhookMethodPtrOutput) ToActionWebhookMethodPtrOutputWithContext(ctx context.Context) ActionWebhookMethodPtrOutput {
	return o
}

func (o ActionWebhookMethodPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*ActionWebhookMethod] {
	return pulumix.Output[*ActionWebhookMethod]{
		OutputState: o.OutputState,
	}
}

func (o ActionWebhookMethodPtrOutput) Elem() ActionWebhookMethodOutput {
	return o.ApplyT(func(v *ActionWebhookMethod) ActionWebhookMethod {
		if v != nil {
			return *v
		}
		var ret ActionWebhookMethod
		return ret
	}).(ActionWebhookMethodOutput)
}

func (o ActionWebhookMethodPtrOutput) Agent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionWebhookMethod) *bool {
		if v == nil {
			return nil
		}
		return v.Agent
	}).(pulumi.BoolPtrOutput)
}

func (o ActionWebhookMethodPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionWebhookMethod) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

func (o ActionWebhookMethodPtrOutput) Synchronized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ActionWebhookMethod) *bool {
		if v == nil {
			return nil
		}
		return v.Synchronized
	}).(pulumi.BoolPtrOutput)
}

func (o ActionWebhookMethodPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ActionWebhookMethod) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type BlueprintCalculationProperties struct {
	Calculation string            `pulumi:"calculation"`
	Colorized   *bool             `pulumi:"colorized"`
	Colors      map[string]string `pulumi:"colors"`
	Description *string           `pulumi:"description"`
	Format      *string           `pulumi:"format"`
	Icon        *string           `pulumi:"icon"`
	Title       *string           `pulumi:"title"`
	Type        string            `pulumi:"type"`
}

// BlueprintCalculationPropertiesInput is an input type that accepts BlueprintCalculationPropertiesArgs and BlueprintCalculationPropertiesOutput values.
// You can construct a concrete instance of `BlueprintCalculationPropertiesInput` via:
//
//	BlueprintCalculationPropertiesArgs{...}
type BlueprintCalculationPropertiesInput interface {
	pulumi.Input

	ToBlueprintCalculationPropertiesOutput() BlueprintCalculationPropertiesOutput
	ToBlueprintCalculationPropertiesOutputWithContext(context.Context) BlueprintCalculationPropertiesOutput
}

type BlueprintCalculationPropertiesArgs struct {
	Calculation pulumi.StringInput    `pulumi:"calculation"`
	Colorized   pulumi.BoolPtrInput   `pulumi:"colorized"`
	Colors      pulumi.StringMapInput `pulumi:"colors"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	Format      pulumi.StringPtrInput `pulumi:"format"`
	Icon        pulumi.StringPtrInput `pulumi:"icon"`
	Title       pulumi.StringPtrInput `pulumi:"title"`
	Type        pulumi.StringInput    `pulumi:"type"`
}

func (BlueprintCalculationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintCalculationProperties)(nil)).Elem()
}

func (i BlueprintCalculationPropertiesArgs) ToBlueprintCalculationPropertiesOutput() BlueprintCalculationPropertiesOutput {
	return i.ToBlueprintCalculationPropertiesOutputWithContext(context.Background())
}

func (i BlueprintCalculationPropertiesArgs) ToBlueprintCalculationPropertiesOutputWithContext(ctx context.Context) BlueprintCalculationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintCalculationPropertiesOutput)
}

func (i BlueprintCalculationPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintCalculationProperties] {
	return pulumix.Output[BlueprintCalculationProperties]{
		OutputState: i.ToBlueprintCalculationPropertiesOutputWithContext(ctx).OutputState,
	}
}

// BlueprintCalculationPropertiesMapInput is an input type that accepts BlueprintCalculationPropertiesMap and BlueprintCalculationPropertiesMapOutput values.
// You can construct a concrete instance of `BlueprintCalculationPropertiesMapInput` via:
//
//	BlueprintCalculationPropertiesMap{ "key": BlueprintCalculationPropertiesArgs{...} }
type BlueprintCalculationPropertiesMapInput interface {
	pulumi.Input

	ToBlueprintCalculationPropertiesMapOutput() BlueprintCalculationPropertiesMapOutput
	ToBlueprintCalculationPropertiesMapOutputWithContext(context.Context) BlueprintCalculationPropertiesMapOutput
}

type BlueprintCalculationPropertiesMap map[string]BlueprintCalculationPropertiesInput

func (BlueprintCalculationPropertiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintCalculationProperties)(nil)).Elem()
}

func (i BlueprintCalculationPropertiesMap) ToBlueprintCalculationPropertiesMapOutput() BlueprintCalculationPropertiesMapOutput {
	return i.ToBlueprintCalculationPropertiesMapOutputWithContext(context.Background())
}

func (i BlueprintCalculationPropertiesMap) ToBlueprintCalculationPropertiesMapOutputWithContext(ctx context.Context) BlueprintCalculationPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintCalculationPropertiesMapOutput)
}

func (i BlueprintCalculationPropertiesMap) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintCalculationProperties] {
	return pulumix.Output[map[string]BlueprintCalculationProperties]{
		OutputState: i.ToBlueprintCalculationPropertiesMapOutputWithContext(ctx).OutputState,
	}
}

type BlueprintCalculationPropertiesOutput struct{ *pulumi.OutputState }

func (BlueprintCalculationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintCalculationProperties)(nil)).Elem()
}

func (o BlueprintCalculationPropertiesOutput) ToBlueprintCalculationPropertiesOutput() BlueprintCalculationPropertiesOutput {
	return o
}

func (o BlueprintCalculationPropertiesOutput) ToBlueprintCalculationPropertiesOutputWithContext(ctx context.Context) BlueprintCalculationPropertiesOutput {
	return o
}

func (o BlueprintCalculationPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintCalculationProperties] {
	return pulumix.Output[BlueprintCalculationProperties]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintCalculationPropertiesOutput) Calculation() pulumi.StringOutput {
	return o.ApplyT(func(v BlueprintCalculationProperties) string { return v.Calculation }).(pulumi.StringOutput)
}

func (o BlueprintCalculationPropertiesOutput) Colorized() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlueprintCalculationProperties) *bool { return v.Colorized }).(pulumi.BoolPtrOutput)
}

func (o BlueprintCalculationPropertiesOutput) Colors() pulumi.StringMapOutput {
	return o.ApplyT(func(v BlueprintCalculationProperties) map[string]string { return v.Colors }).(pulumi.StringMapOutput)
}

func (o BlueprintCalculationPropertiesOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintCalculationProperties) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BlueprintCalculationPropertiesOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintCalculationProperties) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o BlueprintCalculationPropertiesOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintCalculationProperties) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

func (o BlueprintCalculationPropertiesOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintCalculationProperties) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o BlueprintCalculationPropertiesOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v BlueprintCalculationProperties) string { return v.Type }).(pulumi.StringOutput)
}

type BlueprintCalculationPropertiesMapOutput struct{ *pulumi.OutputState }

func (BlueprintCalculationPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintCalculationProperties)(nil)).Elem()
}

func (o BlueprintCalculationPropertiesMapOutput) ToBlueprintCalculationPropertiesMapOutput() BlueprintCalculationPropertiesMapOutput {
	return o
}

func (o BlueprintCalculationPropertiesMapOutput) ToBlueprintCalculationPropertiesMapOutputWithContext(ctx context.Context) BlueprintCalculationPropertiesMapOutput {
	return o
}

func (o BlueprintCalculationPropertiesMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintCalculationProperties] {
	return pulumix.Output[map[string]BlueprintCalculationProperties]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintCalculationPropertiesMapOutput) MapIndex(k pulumi.StringInput) BlueprintCalculationPropertiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BlueprintCalculationProperties {
		return vs[0].(map[string]BlueprintCalculationProperties)[vs[1].(string)]
	}).(BlueprintCalculationPropertiesOutput)
}

type BlueprintKafkaChangelogDestination struct {
}

// BlueprintKafkaChangelogDestinationInput is an input type that accepts BlueprintKafkaChangelogDestinationArgs and BlueprintKafkaChangelogDestinationOutput values.
// You can construct a concrete instance of `BlueprintKafkaChangelogDestinationInput` via:
//
//	BlueprintKafkaChangelogDestinationArgs{...}
type BlueprintKafkaChangelogDestinationInput interface {
	pulumi.Input

	ToBlueprintKafkaChangelogDestinationOutput() BlueprintKafkaChangelogDestinationOutput
	ToBlueprintKafkaChangelogDestinationOutputWithContext(context.Context) BlueprintKafkaChangelogDestinationOutput
}

type BlueprintKafkaChangelogDestinationArgs struct {
}

func (BlueprintKafkaChangelogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintKafkaChangelogDestination)(nil)).Elem()
}

func (i BlueprintKafkaChangelogDestinationArgs) ToBlueprintKafkaChangelogDestinationOutput() BlueprintKafkaChangelogDestinationOutput {
	return i.ToBlueprintKafkaChangelogDestinationOutputWithContext(context.Background())
}

func (i BlueprintKafkaChangelogDestinationArgs) ToBlueprintKafkaChangelogDestinationOutputWithContext(ctx context.Context) BlueprintKafkaChangelogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintKafkaChangelogDestinationOutput)
}

func (i BlueprintKafkaChangelogDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintKafkaChangelogDestination] {
	return pulumix.Output[BlueprintKafkaChangelogDestination]{
		OutputState: i.ToBlueprintKafkaChangelogDestinationOutputWithContext(ctx).OutputState,
	}
}

func (i BlueprintKafkaChangelogDestinationArgs) ToBlueprintKafkaChangelogDestinationPtrOutput() BlueprintKafkaChangelogDestinationPtrOutput {
	return i.ToBlueprintKafkaChangelogDestinationPtrOutputWithContext(context.Background())
}

func (i BlueprintKafkaChangelogDestinationArgs) ToBlueprintKafkaChangelogDestinationPtrOutputWithContext(ctx context.Context) BlueprintKafkaChangelogDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintKafkaChangelogDestinationOutput).ToBlueprintKafkaChangelogDestinationPtrOutputWithContext(ctx)
}

// BlueprintKafkaChangelogDestinationPtrInput is an input type that accepts BlueprintKafkaChangelogDestinationArgs, BlueprintKafkaChangelogDestinationPtr and BlueprintKafkaChangelogDestinationPtrOutput values.
// You can construct a concrete instance of `BlueprintKafkaChangelogDestinationPtrInput` via:
//
//	        BlueprintKafkaChangelogDestinationArgs{...}
//
//	or:
//
//	        nil
type BlueprintKafkaChangelogDestinationPtrInput interface {
	pulumi.Input

	ToBlueprintKafkaChangelogDestinationPtrOutput() BlueprintKafkaChangelogDestinationPtrOutput
	ToBlueprintKafkaChangelogDestinationPtrOutputWithContext(context.Context) BlueprintKafkaChangelogDestinationPtrOutput
}

type blueprintKafkaChangelogDestinationPtrType BlueprintKafkaChangelogDestinationArgs

func BlueprintKafkaChangelogDestinationPtr(v *BlueprintKafkaChangelogDestinationArgs) BlueprintKafkaChangelogDestinationPtrInput {
	return (*blueprintKafkaChangelogDestinationPtrType)(v)
}

func (*blueprintKafkaChangelogDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintKafkaChangelogDestination)(nil)).Elem()
}

func (i *blueprintKafkaChangelogDestinationPtrType) ToBlueprintKafkaChangelogDestinationPtrOutput() BlueprintKafkaChangelogDestinationPtrOutput {
	return i.ToBlueprintKafkaChangelogDestinationPtrOutputWithContext(context.Background())
}

func (i *blueprintKafkaChangelogDestinationPtrType) ToBlueprintKafkaChangelogDestinationPtrOutputWithContext(ctx context.Context) BlueprintKafkaChangelogDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintKafkaChangelogDestinationPtrOutput)
}

func (i *blueprintKafkaChangelogDestinationPtrType) ToOutput(ctx context.Context) pulumix.Output[*BlueprintKafkaChangelogDestination] {
	return pulumix.Output[*BlueprintKafkaChangelogDestination]{
		OutputState: i.ToBlueprintKafkaChangelogDestinationPtrOutputWithContext(ctx).OutputState,
	}
}

type BlueprintKafkaChangelogDestinationOutput struct{ *pulumi.OutputState }

func (BlueprintKafkaChangelogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintKafkaChangelogDestination)(nil)).Elem()
}

func (o BlueprintKafkaChangelogDestinationOutput) ToBlueprintKafkaChangelogDestinationOutput() BlueprintKafkaChangelogDestinationOutput {
	return o
}

func (o BlueprintKafkaChangelogDestinationOutput) ToBlueprintKafkaChangelogDestinationOutputWithContext(ctx context.Context) BlueprintKafkaChangelogDestinationOutput {
	return o
}

func (o BlueprintKafkaChangelogDestinationOutput) ToBlueprintKafkaChangelogDestinationPtrOutput() BlueprintKafkaChangelogDestinationPtrOutput {
	return o.ToBlueprintKafkaChangelogDestinationPtrOutputWithContext(context.Background())
}

func (o BlueprintKafkaChangelogDestinationOutput) ToBlueprintKafkaChangelogDestinationPtrOutputWithContext(ctx context.Context) BlueprintKafkaChangelogDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlueprintKafkaChangelogDestination) *BlueprintKafkaChangelogDestination {
		return &v
	}).(BlueprintKafkaChangelogDestinationPtrOutput)
}

func (o BlueprintKafkaChangelogDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintKafkaChangelogDestination] {
	return pulumix.Output[BlueprintKafkaChangelogDestination]{
		OutputState: o.OutputState,
	}
}

type BlueprintKafkaChangelogDestinationPtrOutput struct{ *pulumi.OutputState }

func (BlueprintKafkaChangelogDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintKafkaChangelogDestination)(nil)).Elem()
}

func (o BlueprintKafkaChangelogDestinationPtrOutput) ToBlueprintKafkaChangelogDestinationPtrOutput() BlueprintKafkaChangelogDestinationPtrOutput {
	return o
}

func (o BlueprintKafkaChangelogDestinationPtrOutput) ToBlueprintKafkaChangelogDestinationPtrOutputWithContext(ctx context.Context) BlueprintKafkaChangelogDestinationPtrOutput {
	return o
}

func (o BlueprintKafkaChangelogDestinationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BlueprintKafkaChangelogDestination] {
	return pulumix.Output[*BlueprintKafkaChangelogDestination]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintKafkaChangelogDestinationPtrOutput) Elem() BlueprintKafkaChangelogDestinationOutput {
	return o.ApplyT(func(v *BlueprintKafkaChangelogDestination) BlueprintKafkaChangelogDestination {
		if v != nil {
			return *v
		}
		var ret BlueprintKafkaChangelogDestination
		return ret
	}).(BlueprintKafkaChangelogDestinationOutput)
}

type BlueprintMirrorProperties struct {
	Path  string  `pulumi:"path"`
	Title *string `pulumi:"title"`
}

// BlueprintMirrorPropertiesInput is an input type that accepts BlueprintMirrorPropertiesArgs and BlueprintMirrorPropertiesOutput values.
// You can construct a concrete instance of `BlueprintMirrorPropertiesInput` via:
//
//	BlueprintMirrorPropertiesArgs{...}
type BlueprintMirrorPropertiesInput interface {
	pulumi.Input

	ToBlueprintMirrorPropertiesOutput() BlueprintMirrorPropertiesOutput
	ToBlueprintMirrorPropertiesOutputWithContext(context.Context) BlueprintMirrorPropertiesOutput
}

type BlueprintMirrorPropertiesArgs struct {
	Path  pulumi.StringInput    `pulumi:"path"`
	Title pulumi.StringPtrInput `pulumi:"title"`
}

func (BlueprintMirrorPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintMirrorProperties)(nil)).Elem()
}

func (i BlueprintMirrorPropertiesArgs) ToBlueprintMirrorPropertiesOutput() BlueprintMirrorPropertiesOutput {
	return i.ToBlueprintMirrorPropertiesOutputWithContext(context.Background())
}

func (i BlueprintMirrorPropertiesArgs) ToBlueprintMirrorPropertiesOutputWithContext(ctx context.Context) BlueprintMirrorPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintMirrorPropertiesOutput)
}

func (i BlueprintMirrorPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintMirrorProperties] {
	return pulumix.Output[BlueprintMirrorProperties]{
		OutputState: i.ToBlueprintMirrorPropertiesOutputWithContext(ctx).OutputState,
	}
}

// BlueprintMirrorPropertiesMapInput is an input type that accepts BlueprintMirrorPropertiesMap and BlueprintMirrorPropertiesMapOutput values.
// You can construct a concrete instance of `BlueprintMirrorPropertiesMapInput` via:
//
//	BlueprintMirrorPropertiesMap{ "key": BlueprintMirrorPropertiesArgs{...} }
type BlueprintMirrorPropertiesMapInput interface {
	pulumi.Input

	ToBlueprintMirrorPropertiesMapOutput() BlueprintMirrorPropertiesMapOutput
	ToBlueprintMirrorPropertiesMapOutputWithContext(context.Context) BlueprintMirrorPropertiesMapOutput
}

type BlueprintMirrorPropertiesMap map[string]BlueprintMirrorPropertiesInput

func (BlueprintMirrorPropertiesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintMirrorProperties)(nil)).Elem()
}

func (i BlueprintMirrorPropertiesMap) ToBlueprintMirrorPropertiesMapOutput() BlueprintMirrorPropertiesMapOutput {
	return i.ToBlueprintMirrorPropertiesMapOutputWithContext(context.Background())
}

func (i BlueprintMirrorPropertiesMap) ToBlueprintMirrorPropertiesMapOutputWithContext(ctx context.Context) BlueprintMirrorPropertiesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintMirrorPropertiesMapOutput)
}

func (i BlueprintMirrorPropertiesMap) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintMirrorProperties] {
	return pulumix.Output[map[string]BlueprintMirrorProperties]{
		OutputState: i.ToBlueprintMirrorPropertiesMapOutputWithContext(ctx).OutputState,
	}
}

type BlueprintMirrorPropertiesOutput struct{ *pulumi.OutputState }

func (BlueprintMirrorPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintMirrorProperties)(nil)).Elem()
}

func (o BlueprintMirrorPropertiesOutput) ToBlueprintMirrorPropertiesOutput() BlueprintMirrorPropertiesOutput {
	return o
}

func (o BlueprintMirrorPropertiesOutput) ToBlueprintMirrorPropertiesOutputWithContext(ctx context.Context) BlueprintMirrorPropertiesOutput {
	return o
}

func (o BlueprintMirrorPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintMirrorProperties] {
	return pulumix.Output[BlueprintMirrorProperties]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintMirrorPropertiesOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BlueprintMirrorProperties) string { return v.Path }).(pulumi.StringOutput)
}

func (o BlueprintMirrorPropertiesOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintMirrorProperties) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type BlueprintMirrorPropertiesMapOutput struct{ *pulumi.OutputState }

func (BlueprintMirrorPropertiesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintMirrorProperties)(nil)).Elem()
}

func (o BlueprintMirrorPropertiesMapOutput) ToBlueprintMirrorPropertiesMapOutput() BlueprintMirrorPropertiesMapOutput {
	return o
}

func (o BlueprintMirrorPropertiesMapOutput) ToBlueprintMirrorPropertiesMapOutputWithContext(ctx context.Context) BlueprintMirrorPropertiesMapOutput {
	return o
}

func (o BlueprintMirrorPropertiesMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintMirrorProperties] {
	return pulumix.Output[map[string]BlueprintMirrorProperties]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintMirrorPropertiesMapOutput) MapIndex(k pulumi.StringInput) BlueprintMirrorPropertiesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BlueprintMirrorProperties {
		return vs[0].(map[string]BlueprintMirrorProperties)[vs[1].(string)]
	}).(BlueprintMirrorPropertiesOutput)
}

type BlueprintProperties struct {
	ArrayProps   map[string]BlueprintPropertiesArrayProps   `pulumi:"arrayProps"`
	BooleanProps map[string]BlueprintPropertiesBooleanProps `pulumi:"booleanProps"`
	NumberProps  map[string]BlueprintPropertiesNumberProps  `pulumi:"numberProps"`
	ObjectProps  map[string]BlueprintPropertiesObjectProps  `pulumi:"objectProps"`
	StringProps  map[string]BlueprintPropertiesStringProps  `pulumi:"stringProps"`
}

// BlueprintPropertiesInput is an input type that accepts BlueprintPropertiesArgs and BlueprintPropertiesOutput values.
// You can construct a concrete instance of `BlueprintPropertiesInput` via:
//
//	BlueprintPropertiesArgs{...}
type BlueprintPropertiesInput interface {
	pulumi.Input

	ToBlueprintPropertiesOutput() BlueprintPropertiesOutput
	ToBlueprintPropertiesOutputWithContext(context.Context) BlueprintPropertiesOutput
}

type BlueprintPropertiesArgs struct {
	ArrayProps   BlueprintPropertiesArrayPropsMapInput   `pulumi:"arrayProps"`
	BooleanProps BlueprintPropertiesBooleanPropsMapInput `pulumi:"booleanProps"`
	NumberProps  BlueprintPropertiesNumberPropsMapInput  `pulumi:"numberProps"`
	ObjectProps  BlueprintPropertiesObjectPropsMapInput  `pulumi:"objectProps"`
	StringProps  BlueprintPropertiesStringPropsMapInput  `pulumi:"stringProps"`
}

func (BlueprintPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintProperties)(nil)).Elem()
}

func (i BlueprintPropertiesArgs) ToBlueprintPropertiesOutput() BlueprintPropertiesOutput {
	return i.ToBlueprintPropertiesOutputWithContext(context.Background())
}

func (i BlueprintPropertiesArgs) ToBlueprintPropertiesOutputWithContext(ctx context.Context) BlueprintPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesOutput)
}

func (i BlueprintPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintProperties] {
	return pulumix.Output[BlueprintProperties]{
		OutputState: i.ToBlueprintPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i BlueprintPropertiesArgs) ToBlueprintPropertiesPtrOutput() BlueprintPropertiesPtrOutput {
	return i.ToBlueprintPropertiesPtrOutputWithContext(context.Background())
}

func (i BlueprintPropertiesArgs) ToBlueprintPropertiesPtrOutputWithContext(ctx context.Context) BlueprintPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesOutput).ToBlueprintPropertiesPtrOutputWithContext(ctx)
}

// BlueprintPropertiesPtrInput is an input type that accepts BlueprintPropertiesArgs, BlueprintPropertiesPtr and BlueprintPropertiesPtrOutput values.
// You can construct a concrete instance of `BlueprintPropertiesPtrInput` via:
//
//	        BlueprintPropertiesArgs{...}
//
//	or:
//
//	        nil
type BlueprintPropertiesPtrInput interface {
	pulumi.Input

	ToBlueprintPropertiesPtrOutput() BlueprintPropertiesPtrOutput
	ToBlueprintPropertiesPtrOutputWithContext(context.Context) BlueprintPropertiesPtrOutput
}

type blueprintPropertiesPtrType BlueprintPropertiesArgs

func BlueprintPropertiesPtr(v *BlueprintPropertiesArgs) BlueprintPropertiesPtrInput {
	return (*blueprintPropertiesPtrType)(v)
}

func (*blueprintPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintProperties)(nil)).Elem()
}

func (i *blueprintPropertiesPtrType) ToBlueprintPropertiesPtrOutput() BlueprintPropertiesPtrOutput {
	return i.ToBlueprintPropertiesPtrOutputWithContext(context.Background())
}

func (i *blueprintPropertiesPtrType) ToBlueprintPropertiesPtrOutputWithContext(ctx context.Context) BlueprintPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesPtrOutput)
}

func (i *blueprintPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*BlueprintProperties] {
	return pulumix.Output[*BlueprintProperties]{
		OutputState: i.ToBlueprintPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

type BlueprintPropertiesOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintProperties)(nil)).Elem()
}

func (o BlueprintPropertiesOutput) ToBlueprintPropertiesOutput() BlueprintPropertiesOutput {
	return o
}

func (o BlueprintPropertiesOutput) ToBlueprintPropertiesOutputWithContext(ctx context.Context) BlueprintPropertiesOutput {
	return o
}

func (o BlueprintPropertiesOutput) ToBlueprintPropertiesPtrOutput() BlueprintPropertiesPtrOutput {
	return o.ToBlueprintPropertiesPtrOutputWithContext(context.Background())
}

func (o BlueprintPropertiesOutput) ToBlueprintPropertiesPtrOutputWithContext(ctx context.Context) BlueprintPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlueprintProperties) *BlueprintProperties {
		return &v
	}).(BlueprintPropertiesPtrOutput)
}

func (o BlueprintPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintProperties] {
	return pulumix.Output[BlueprintProperties]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesOutput) ArrayProps() BlueprintPropertiesArrayPropsMapOutput {
	return o.ApplyT(func(v BlueprintProperties) map[string]BlueprintPropertiesArrayProps { return v.ArrayProps }).(BlueprintPropertiesArrayPropsMapOutput)
}

func (o BlueprintPropertiesOutput) BooleanProps() BlueprintPropertiesBooleanPropsMapOutput {
	return o.ApplyT(func(v BlueprintProperties) map[string]BlueprintPropertiesBooleanProps { return v.BooleanProps }).(BlueprintPropertiesBooleanPropsMapOutput)
}

func (o BlueprintPropertiesOutput) NumberProps() BlueprintPropertiesNumberPropsMapOutput {
	return o.ApplyT(func(v BlueprintProperties) map[string]BlueprintPropertiesNumberProps { return v.NumberProps }).(BlueprintPropertiesNumberPropsMapOutput)
}

func (o BlueprintPropertiesOutput) ObjectProps() BlueprintPropertiesObjectPropsMapOutput {
	return o.ApplyT(func(v BlueprintProperties) map[string]BlueprintPropertiesObjectProps { return v.ObjectProps }).(BlueprintPropertiesObjectPropsMapOutput)
}

func (o BlueprintPropertiesOutput) StringProps() BlueprintPropertiesStringPropsMapOutput {
	return o.ApplyT(func(v BlueprintProperties) map[string]BlueprintPropertiesStringProps { return v.StringProps }).(BlueprintPropertiesStringPropsMapOutput)
}

type BlueprintPropertiesPtrOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintProperties)(nil)).Elem()
}

func (o BlueprintPropertiesPtrOutput) ToBlueprintPropertiesPtrOutput() BlueprintPropertiesPtrOutput {
	return o
}

func (o BlueprintPropertiesPtrOutput) ToBlueprintPropertiesPtrOutputWithContext(ctx context.Context) BlueprintPropertiesPtrOutput {
	return o
}

func (o BlueprintPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BlueprintProperties] {
	return pulumix.Output[*BlueprintProperties]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesPtrOutput) Elem() BlueprintPropertiesOutput {
	return o.ApplyT(func(v *BlueprintProperties) BlueprintProperties {
		if v != nil {
			return *v
		}
		var ret BlueprintProperties
		return ret
	}).(BlueprintPropertiesOutput)
}

func (o BlueprintPropertiesPtrOutput) ArrayProps() BlueprintPropertiesArrayPropsMapOutput {
	return o.ApplyT(func(v *BlueprintProperties) map[string]BlueprintPropertiesArrayProps {
		if v == nil {
			return nil
		}
		return v.ArrayProps
	}).(BlueprintPropertiesArrayPropsMapOutput)
}

func (o BlueprintPropertiesPtrOutput) BooleanProps() BlueprintPropertiesBooleanPropsMapOutput {
	return o.ApplyT(func(v *BlueprintProperties) map[string]BlueprintPropertiesBooleanProps {
		if v == nil {
			return nil
		}
		return v.BooleanProps
	}).(BlueprintPropertiesBooleanPropsMapOutput)
}

func (o BlueprintPropertiesPtrOutput) NumberProps() BlueprintPropertiesNumberPropsMapOutput {
	return o.ApplyT(func(v *BlueprintProperties) map[string]BlueprintPropertiesNumberProps {
		if v == nil {
			return nil
		}
		return v.NumberProps
	}).(BlueprintPropertiesNumberPropsMapOutput)
}

func (o BlueprintPropertiesPtrOutput) ObjectProps() BlueprintPropertiesObjectPropsMapOutput {
	return o.ApplyT(func(v *BlueprintProperties) map[string]BlueprintPropertiesObjectProps {
		if v == nil {
			return nil
		}
		return v.ObjectProps
	}).(BlueprintPropertiesObjectPropsMapOutput)
}

func (o BlueprintPropertiesPtrOutput) StringProps() BlueprintPropertiesStringPropsMapOutput {
	return o.ApplyT(func(v *BlueprintProperties) map[string]BlueprintPropertiesStringProps {
		if v == nil {
			return nil
		}
		return v.StringProps
	}).(BlueprintPropertiesStringPropsMapOutput)
}

type BlueprintPropertiesArrayProps struct {
	BooleanItems *BlueprintPropertiesArrayPropsBooleanItems `pulumi:"booleanItems"`
	Description  *string                                    `pulumi:"description"`
	Icon         *string                                    `pulumi:"icon"`
	MaxItems     *int                                       `pulumi:"maxItems"`
	MinItems     *int                                       `pulumi:"minItems"`
	NumberItems  *BlueprintPropertiesArrayPropsNumberItems  `pulumi:"numberItems"`
	ObjectItems  *BlueprintPropertiesArrayPropsObjectItems  `pulumi:"objectItems"`
	Required     *bool                                      `pulumi:"required"`
	StringItems  *BlueprintPropertiesArrayPropsStringItems  `pulumi:"stringItems"`
	Title        *string                                    `pulumi:"title"`
}

// BlueprintPropertiesArrayPropsInput is an input type that accepts BlueprintPropertiesArrayPropsArgs and BlueprintPropertiesArrayPropsOutput values.
// You can construct a concrete instance of `BlueprintPropertiesArrayPropsInput` via:
//
//	BlueprintPropertiesArrayPropsArgs{...}
type BlueprintPropertiesArrayPropsInput interface {
	pulumi.Input

	ToBlueprintPropertiesArrayPropsOutput() BlueprintPropertiesArrayPropsOutput
	ToBlueprintPropertiesArrayPropsOutputWithContext(context.Context) BlueprintPropertiesArrayPropsOutput
}

type BlueprintPropertiesArrayPropsArgs struct {
	BooleanItems BlueprintPropertiesArrayPropsBooleanItemsPtrInput `pulumi:"booleanItems"`
	Description  pulumi.StringPtrInput                             `pulumi:"description"`
	Icon         pulumi.StringPtrInput                             `pulumi:"icon"`
	MaxItems     pulumi.IntPtrInput                                `pulumi:"maxItems"`
	MinItems     pulumi.IntPtrInput                                `pulumi:"minItems"`
	NumberItems  BlueprintPropertiesArrayPropsNumberItemsPtrInput  `pulumi:"numberItems"`
	ObjectItems  BlueprintPropertiesArrayPropsObjectItemsPtrInput  `pulumi:"objectItems"`
	Required     pulumi.BoolPtrInput                               `pulumi:"required"`
	StringItems  BlueprintPropertiesArrayPropsStringItemsPtrInput  `pulumi:"stringItems"`
	Title        pulumi.StringPtrInput                             `pulumi:"title"`
}

func (BlueprintPropertiesArrayPropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesArrayProps)(nil)).Elem()
}

func (i BlueprintPropertiesArrayPropsArgs) ToBlueprintPropertiesArrayPropsOutput() BlueprintPropertiesArrayPropsOutput {
	return i.ToBlueprintPropertiesArrayPropsOutputWithContext(context.Background())
}

func (i BlueprintPropertiesArrayPropsArgs) ToBlueprintPropertiesArrayPropsOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsOutput)
}

func (i BlueprintPropertiesArrayPropsArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesArrayProps] {
	return pulumix.Output[BlueprintPropertiesArrayProps]{
		OutputState: i.ToBlueprintPropertiesArrayPropsOutputWithContext(ctx).OutputState,
	}
}

// BlueprintPropertiesArrayPropsMapInput is an input type that accepts BlueprintPropertiesArrayPropsMap and BlueprintPropertiesArrayPropsMapOutput values.
// You can construct a concrete instance of `BlueprintPropertiesArrayPropsMapInput` via:
//
//	BlueprintPropertiesArrayPropsMap{ "key": BlueprintPropertiesArrayPropsArgs{...} }
type BlueprintPropertiesArrayPropsMapInput interface {
	pulumi.Input

	ToBlueprintPropertiesArrayPropsMapOutput() BlueprintPropertiesArrayPropsMapOutput
	ToBlueprintPropertiesArrayPropsMapOutputWithContext(context.Context) BlueprintPropertiesArrayPropsMapOutput
}

type BlueprintPropertiesArrayPropsMap map[string]BlueprintPropertiesArrayPropsInput

func (BlueprintPropertiesArrayPropsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintPropertiesArrayProps)(nil)).Elem()
}

func (i BlueprintPropertiesArrayPropsMap) ToBlueprintPropertiesArrayPropsMapOutput() BlueprintPropertiesArrayPropsMapOutput {
	return i.ToBlueprintPropertiesArrayPropsMapOutputWithContext(context.Background())
}

func (i BlueprintPropertiesArrayPropsMap) ToBlueprintPropertiesArrayPropsMapOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsMapOutput)
}

func (i BlueprintPropertiesArrayPropsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintPropertiesArrayProps] {
	return pulumix.Output[map[string]BlueprintPropertiesArrayProps]{
		OutputState: i.ToBlueprintPropertiesArrayPropsMapOutputWithContext(ctx).OutputState,
	}
}

type BlueprintPropertiesArrayPropsOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesArrayPropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesArrayProps)(nil)).Elem()
}

func (o BlueprintPropertiesArrayPropsOutput) ToBlueprintPropertiesArrayPropsOutput() BlueprintPropertiesArrayPropsOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsOutput) ToBlueprintPropertiesArrayPropsOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesArrayProps] {
	return pulumix.Output[BlueprintPropertiesArrayProps]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesArrayPropsOutput) BooleanItems() BlueprintPropertiesArrayPropsBooleanItemsPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayProps) *BlueprintPropertiesArrayPropsBooleanItems {
		return v.BooleanItems
	}).(BlueprintPropertiesArrayPropsBooleanItemsPtrOutput)
}

func (o BlueprintPropertiesArrayPropsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayProps) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesArrayPropsOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayProps) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesArrayPropsOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayProps) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

func (o BlueprintPropertiesArrayPropsOutput) MinItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayProps) *int { return v.MinItems }).(pulumi.IntPtrOutput)
}

func (o BlueprintPropertiesArrayPropsOutput) NumberItems() BlueprintPropertiesArrayPropsNumberItemsPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayProps) *BlueprintPropertiesArrayPropsNumberItems { return v.NumberItems }).(BlueprintPropertiesArrayPropsNumberItemsPtrOutput)
}

func (o BlueprintPropertiesArrayPropsOutput) ObjectItems() BlueprintPropertiesArrayPropsObjectItemsPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayProps) *BlueprintPropertiesArrayPropsObjectItems { return v.ObjectItems }).(BlueprintPropertiesArrayPropsObjectItemsPtrOutput)
}

func (o BlueprintPropertiesArrayPropsOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayProps) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o BlueprintPropertiesArrayPropsOutput) StringItems() BlueprintPropertiesArrayPropsStringItemsPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayProps) *BlueprintPropertiesArrayPropsStringItems { return v.StringItems }).(BlueprintPropertiesArrayPropsStringItemsPtrOutput)
}

func (o BlueprintPropertiesArrayPropsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayProps) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type BlueprintPropertiesArrayPropsMapOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesArrayPropsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintPropertiesArrayProps)(nil)).Elem()
}

func (o BlueprintPropertiesArrayPropsMapOutput) ToBlueprintPropertiesArrayPropsMapOutput() BlueprintPropertiesArrayPropsMapOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsMapOutput) ToBlueprintPropertiesArrayPropsMapOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsMapOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintPropertiesArrayProps] {
	return pulumix.Output[map[string]BlueprintPropertiesArrayProps]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesArrayPropsMapOutput) MapIndex(k pulumi.StringInput) BlueprintPropertiesArrayPropsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BlueprintPropertiesArrayProps {
		return vs[0].(map[string]BlueprintPropertiesArrayProps)[vs[1].(string)]
	}).(BlueprintPropertiesArrayPropsOutput)
}

type BlueprintPropertiesArrayPropsBooleanItems struct {
	Defaults []bool `pulumi:"defaults"`
}

// BlueprintPropertiesArrayPropsBooleanItemsInput is an input type that accepts BlueprintPropertiesArrayPropsBooleanItemsArgs and BlueprintPropertiesArrayPropsBooleanItemsOutput values.
// You can construct a concrete instance of `BlueprintPropertiesArrayPropsBooleanItemsInput` via:
//
//	BlueprintPropertiesArrayPropsBooleanItemsArgs{...}
type BlueprintPropertiesArrayPropsBooleanItemsInput interface {
	pulumi.Input

	ToBlueprintPropertiesArrayPropsBooleanItemsOutput() BlueprintPropertiesArrayPropsBooleanItemsOutput
	ToBlueprintPropertiesArrayPropsBooleanItemsOutputWithContext(context.Context) BlueprintPropertiesArrayPropsBooleanItemsOutput
}

type BlueprintPropertiesArrayPropsBooleanItemsArgs struct {
	Defaults pulumi.BoolArrayInput `pulumi:"defaults"`
}

func (BlueprintPropertiesArrayPropsBooleanItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesArrayPropsBooleanItems)(nil)).Elem()
}

func (i BlueprintPropertiesArrayPropsBooleanItemsArgs) ToBlueprintPropertiesArrayPropsBooleanItemsOutput() BlueprintPropertiesArrayPropsBooleanItemsOutput {
	return i.ToBlueprintPropertiesArrayPropsBooleanItemsOutputWithContext(context.Background())
}

func (i BlueprintPropertiesArrayPropsBooleanItemsArgs) ToBlueprintPropertiesArrayPropsBooleanItemsOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsBooleanItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsBooleanItemsOutput)
}

func (i BlueprintPropertiesArrayPropsBooleanItemsArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesArrayPropsBooleanItems] {
	return pulumix.Output[BlueprintPropertiesArrayPropsBooleanItems]{
		OutputState: i.ToBlueprintPropertiesArrayPropsBooleanItemsOutputWithContext(ctx).OutputState,
	}
}

func (i BlueprintPropertiesArrayPropsBooleanItemsArgs) ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutput() BlueprintPropertiesArrayPropsBooleanItemsPtrOutput {
	return i.ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutputWithContext(context.Background())
}

func (i BlueprintPropertiesArrayPropsBooleanItemsArgs) ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsBooleanItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsBooleanItemsOutput).ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutputWithContext(ctx)
}

// BlueprintPropertiesArrayPropsBooleanItemsPtrInput is an input type that accepts BlueprintPropertiesArrayPropsBooleanItemsArgs, BlueprintPropertiesArrayPropsBooleanItemsPtr and BlueprintPropertiesArrayPropsBooleanItemsPtrOutput values.
// You can construct a concrete instance of `BlueprintPropertiesArrayPropsBooleanItemsPtrInput` via:
//
//	        BlueprintPropertiesArrayPropsBooleanItemsArgs{...}
//
//	or:
//
//	        nil
type BlueprintPropertiesArrayPropsBooleanItemsPtrInput interface {
	pulumi.Input

	ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutput() BlueprintPropertiesArrayPropsBooleanItemsPtrOutput
	ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutputWithContext(context.Context) BlueprintPropertiesArrayPropsBooleanItemsPtrOutput
}

type blueprintPropertiesArrayPropsBooleanItemsPtrType BlueprintPropertiesArrayPropsBooleanItemsArgs

func BlueprintPropertiesArrayPropsBooleanItemsPtr(v *BlueprintPropertiesArrayPropsBooleanItemsArgs) BlueprintPropertiesArrayPropsBooleanItemsPtrInput {
	return (*blueprintPropertiesArrayPropsBooleanItemsPtrType)(v)
}

func (*blueprintPropertiesArrayPropsBooleanItemsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintPropertiesArrayPropsBooleanItems)(nil)).Elem()
}

func (i *blueprintPropertiesArrayPropsBooleanItemsPtrType) ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutput() BlueprintPropertiesArrayPropsBooleanItemsPtrOutput {
	return i.ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutputWithContext(context.Background())
}

func (i *blueprintPropertiesArrayPropsBooleanItemsPtrType) ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsBooleanItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsBooleanItemsPtrOutput)
}

func (i *blueprintPropertiesArrayPropsBooleanItemsPtrType) ToOutput(ctx context.Context) pulumix.Output[*BlueprintPropertiesArrayPropsBooleanItems] {
	return pulumix.Output[*BlueprintPropertiesArrayPropsBooleanItems]{
		OutputState: i.ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutputWithContext(ctx).OutputState,
	}
}

type BlueprintPropertiesArrayPropsBooleanItemsOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesArrayPropsBooleanItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesArrayPropsBooleanItems)(nil)).Elem()
}

func (o BlueprintPropertiesArrayPropsBooleanItemsOutput) ToBlueprintPropertiesArrayPropsBooleanItemsOutput() BlueprintPropertiesArrayPropsBooleanItemsOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsBooleanItemsOutput) ToBlueprintPropertiesArrayPropsBooleanItemsOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsBooleanItemsOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsBooleanItemsOutput) ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutput() BlueprintPropertiesArrayPropsBooleanItemsPtrOutput {
	return o.ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutputWithContext(context.Background())
}

func (o BlueprintPropertiesArrayPropsBooleanItemsOutput) ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsBooleanItemsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlueprintPropertiesArrayPropsBooleanItems) *BlueprintPropertiesArrayPropsBooleanItems {
		return &v
	}).(BlueprintPropertiesArrayPropsBooleanItemsPtrOutput)
}

func (o BlueprintPropertiesArrayPropsBooleanItemsOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesArrayPropsBooleanItems] {
	return pulumix.Output[BlueprintPropertiesArrayPropsBooleanItems]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesArrayPropsBooleanItemsOutput) Defaults() pulumi.BoolArrayOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayPropsBooleanItems) []bool { return v.Defaults }).(pulumi.BoolArrayOutput)
}

type BlueprintPropertiesArrayPropsBooleanItemsPtrOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesArrayPropsBooleanItemsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintPropertiesArrayPropsBooleanItems)(nil)).Elem()
}

func (o BlueprintPropertiesArrayPropsBooleanItemsPtrOutput) ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutput() BlueprintPropertiesArrayPropsBooleanItemsPtrOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsBooleanItemsPtrOutput) ToBlueprintPropertiesArrayPropsBooleanItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsBooleanItemsPtrOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsBooleanItemsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BlueprintPropertiesArrayPropsBooleanItems] {
	return pulumix.Output[*BlueprintPropertiesArrayPropsBooleanItems]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesArrayPropsBooleanItemsPtrOutput) Elem() BlueprintPropertiesArrayPropsBooleanItemsOutput {
	return o.ApplyT(func(v *BlueprintPropertiesArrayPropsBooleanItems) BlueprintPropertiesArrayPropsBooleanItems {
		if v != nil {
			return *v
		}
		var ret BlueprintPropertiesArrayPropsBooleanItems
		return ret
	}).(BlueprintPropertiesArrayPropsBooleanItemsOutput)
}

func (o BlueprintPropertiesArrayPropsBooleanItemsPtrOutput) Defaults() pulumi.BoolArrayOutput {
	return o.ApplyT(func(v *BlueprintPropertiesArrayPropsBooleanItems) []bool {
		if v == nil {
			return nil
		}
		return v.Defaults
	}).(pulumi.BoolArrayOutput)
}

type BlueprintPropertiesArrayPropsNumberItems struct {
	Defaults []float64 `pulumi:"defaults"`
}

// BlueprintPropertiesArrayPropsNumberItemsInput is an input type that accepts BlueprintPropertiesArrayPropsNumberItemsArgs and BlueprintPropertiesArrayPropsNumberItemsOutput values.
// You can construct a concrete instance of `BlueprintPropertiesArrayPropsNumberItemsInput` via:
//
//	BlueprintPropertiesArrayPropsNumberItemsArgs{...}
type BlueprintPropertiesArrayPropsNumberItemsInput interface {
	pulumi.Input

	ToBlueprintPropertiesArrayPropsNumberItemsOutput() BlueprintPropertiesArrayPropsNumberItemsOutput
	ToBlueprintPropertiesArrayPropsNumberItemsOutputWithContext(context.Context) BlueprintPropertiesArrayPropsNumberItemsOutput
}

type BlueprintPropertiesArrayPropsNumberItemsArgs struct {
	Defaults pulumi.Float64ArrayInput `pulumi:"defaults"`
}

func (BlueprintPropertiesArrayPropsNumberItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesArrayPropsNumberItems)(nil)).Elem()
}

func (i BlueprintPropertiesArrayPropsNumberItemsArgs) ToBlueprintPropertiesArrayPropsNumberItemsOutput() BlueprintPropertiesArrayPropsNumberItemsOutput {
	return i.ToBlueprintPropertiesArrayPropsNumberItemsOutputWithContext(context.Background())
}

func (i BlueprintPropertiesArrayPropsNumberItemsArgs) ToBlueprintPropertiesArrayPropsNumberItemsOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsNumberItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsNumberItemsOutput)
}

func (i BlueprintPropertiesArrayPropsNumberItemsArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesArrayPropsNumberItems] {
	return pulumix.Output[BlueprintPropertiesArrayPropsNumberItems]{
		OutputState: i.ToBlueprintPropertiesArrayPropsNumberItemsOutputWithContext(ctx).OutputState,
	}
}

func (i BlueprintPropertiesArrayPropsNumberItemsArgs) ToBlueprintPropertiesArrayPropsNumberItemsPtrOutput() BlueprintPropertiesArrayPropsNumberItemsPtrOutput {
	return i.ToBlueprintPropertiesArrayPropsNumberItemsPtrOutputWithContext(context.Background())
}

func (i BlueprintPropertiesArrayPropsNumberItemsArgs) ToBlueprintPropertiesArrayPropsNumberItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsNumberItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsNumberItemsOutput).ToBlueprintPropertiesArrayPropsNumberItemsPtrOutputWithContext(ctx)
}

// BlueprintPropertiesArrayPropsNumberItemsPtrInput is an input type that accepts BlueprintPropertiesArrayPropsNumberItemsArgs, BlueprintPropertiesArrayPropsNumberItemsPtr and BlueprintPropertiesArrayPropsNumberItemsPtrOutput values.
// You can construct a concrete instance of `BlueprintPropertiesArrayPropsNumberItemsPtrInput` via:
//
//	        BlueprintPropertiesArrayPropsNumberItemsArgs{...}
//
//	or:
//
//	        nil
type BlueprintPropertiesArrayPropsNumberItemsPtrInput interface {
	pulumi.Input

	ToBlueprintPropertiesArrayPropsNumberItemsPtrOutput() BlueprintPropertiesArrayPropsNumberItemsPtrOutput
	ToBlueprintPropertiesArrayPropsNumberItemsPtrOutputWithContext(context.Context) BlueprintPropertiesArrayPropsNumberItemsPtrOutput
}

type blueprintPropertiesArrayPropsNumberItemsPtrType BlueprintPropertiesArrayPropsNumberItemsArgs

func BlueprintPropertiesArrayPropsNumberItemsPtr(v *BlueprintPropertiesArrayPropsNumberItemsArgs) BlueprintPropertiesArrayPropsNumberItemsPtrInput {
	return (*blueprintPropertiesArrayPropsNumberItemsPtrType)(v)
}

func (*blueprintPropertiesArrayPropsNumberItemsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintPropertiesArrayPropsNumberItems)(nil)).Elem()
}

func (i *blueprintPropertiesArrayPropsNumberItemsPtrType) ToBlueprintPropertiesArrayPropsNumberItemsPtrOutput() BlueprintPropertiesArrayPropsNumberItemsPtrOutput {
	return i.ToBlueprintPropertiesArrayPropsNumberItemsPtrOutputWithContext(context.Background())
}

func (i *blueprintPropertiesArrayPropsNumberItemsPtrType) ToBlueprintPropertiesArrayPropsNumberItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsNumberItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsNumberItemsPtrOutput)
}

func (i *blueprintPropertiesArrayPropsNumberItemsPtrType) ToOutput(ctx context.Context) pulumix.Output[*BlueprintPropertiesArrayPropsNumberItems] {
	return pulumix.Output[*BlueprintPropertiesArrayPropsNumberItems]{
		OutputState: i.ToBlueprintPropertiesArrayPropsNumberItemsPtrOutputWithContext(ctx).OutputState,
	}
}

type BlueprintPropertiesArrayPropsNumberItemsOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesArrayPropsNumberItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesArrayPropsNumberItems)(nil)).Elem()
}

func (o BlueprintPropertiesArrayPropsNumberItemsOutput) ToBlueprintPropertiesArrayPropsNumberItemsOutput() BlueprintPropertiesArrayPropsNumberItemsOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsNumberItemsOutput) ToBlueprintPropertiesArrayPropsNumberItemsOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsNumberItemsOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsNumberItemsOutput) ToBlueprintPropertiesArrayPropsNumberItemsPtrOutput() BlueprintPropertiesArrayPropsNumberItemsPtrOutput {
	return o.ToBlueprintPropertiesArrayPropsNumberItemsPtrOutputWithContext(context.Background())
}

func (o BlueprintPropertiesArrayPropsNumberItemsOutput) ToBlueprintPropertiesArrayPropsNumberItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsNumberItemsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlueprintPropertiesArrayPropsNumberItems) *BlueprintPropertiesArrayPropsNumberItems {
		return &v
	}).(BlueprintPropertiesArrayPropsNumberItemsPtrOutput)
}

func (o BlueprintPropertiesArrayPropsNumberItemsOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesArrayPropsNumberItems] {
	return pulumix.Output[BlueprintPropertiesArrayPropsNumberItems]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesArrayPropsNumberItemsOutput) Defaults() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayPropsNumberItems) []float64 { return v.Defaults }).(pulumi.Float64ArrayOutput)
}

type BlueprintPropertiesArrayPropsNumberItemsPtrOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesArrayPropsNumberItemsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintPropertiesArrayPropsNumberItems)(nil)).Elem()
}

func (o BlueprintPropertiesArrayPropsNumberItemsPtrOutput) ToBlueprintPropertiesArrayPropsNumberItemsPtrOutput() BlueprintPropertiesArrayPropsNumberItemsPtrOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsNumberItemsPtrOutput) ToBlueprintPropertiesArrayPropsNumberItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsNumberItemsPtrOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsNumberItemsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BlueprintPropertiesArrayPropsNumberItems] {
	return pulumix.Output[*BlueprintPropertiesArrayPropsNumberItems]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesArrayPropsNumberItemsPtrOutput) Elem() BlueprintPropertiesArrayPropsNumberItemsOutput {
	return o.ApplyT(func(v *BlueprintPropertiesArrayPropsNumberItems) BlueprintPropertiesArrayPropsNumberItems {
		if v != nil {
			return *v
		}
		var ret BlueprintPropertiesArrayPropsNumberItems
		return ret
	}).(BlueprintPropertiesArrayPropsNumberItemsOutput)
}

func (o BlueprintPropertiesArrayPropsNumberItemsPtrOutput) Defaults() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v *BlueprintPropertiesArrayPropsNumberItems) []float64 {
		if v == nil {
			return nil
		}
		return v.Defaults
	}).(pulumi.Float64ArrayOutput)
}

type BlueprintPropertiesArrayPropsObjectItems struct {
	Defaults []string `pulumi:"defaults"`
}

// BlueprintPropertiesArrayPropsObjectItemsInput is an input type that accepts BlueprintPropertiesArrayPropsObjectItemsArgs and BlueprintPropertiesArrayPropsObjectItemsOutput values.
// You can construct a concrete instance of `BlueprintPropertiesArrayPropsObjectItemsInput` via:
//
//	BlueprintPropertiesArrayPropsObjectItemsArgs{...}
type BlueprintPropertiesArrayPropsObjectItemsInput interface {
	pulumi.Input

	ToBlueprintPropertiesArrayPropsObjectItemsOutput() BlueprintPropertiesArrayPropsObjectItemsOutput
	ToBlueprintPropertiesArrayPropsObjectItemsOutputWithContext(context.Context) BlueprintPropertiesArrayPropsObjectItemsOutput
}

type BlueprintPropertiesArrayPropsObjectItemsArgs struct {
	Defaults pulumi.StringArrayInput `pulumi:"defaults"`
}

func (BlueprintPropertiesArrayPropsObjectItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesArrayPropsObjectItems)(nil)).Elem()
}

func (i BlueprintPropertiesArrayPropsObjectItemsArgs) ToBlueprintPropertiesArrayPropsObjectItemsOutput() BlueprintPropertiesArrayPropsObjectItemsOutput {
	return i.ToBlueprintPropertiesArrayPropsObjectItemsOutputWithContext(context.Background())
}

func (i BlueprintPropertiesArrayPropsObjectItemsArgs) ToBlueprintPropertiesArrayPropsObjectItemsOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsObjectItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsObjectItemsOutput)
}

func (i BlueprintPropertiesArrayPropsObjectItemsArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesArrayPropsObjectItems] {
	return pulumix.Output[BlueprintPropertiesArrayPropsObjectItems]{
		OutputState: i.ToBlueprintPropertiesArrayPropsObjectItemsOutputWithContext(ctx).OutputState,
	}
}

func (i BlueprintPropertiesArrayPropsObjectItemsArgs) ToBlueprintPropertiesArrayPropsObjectItemsPtrOutput() BlueprintPropertiesArrayPropsObjectItemsPtrOutput {
	return i.ToBlueprintPropertiesArrayPropsObjectItemsPtrOutputWithContext(context.Background())
}

func (i BlueprintPropertiesArrayPropsObjectItemsArgs) ToBlueprintPropertiesArrayPropsObjectItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsObjectItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsObjectItemsOutput).ToBlueprintPropertiesArrayPropsObjectItemsPtrOutputWithContext(ctx)
}

// BlueprintPropertiesArrayPropsObjectItemsPtrInput is an input type that accepts BlueprintPropertiesArrayPropsObjectItemsArgs, BlueprintPropertiesArrayPropsObjectItemsPtr and BlueprintPropertiesArrayPropsObjectItemsPtrOutput values.
// You can construct a concrete instance of `BlueprintPropertiesArrayPropsObjectItemsPtrInput` via:
//
//	        BlueprintPropertiesArrayPropsObjectItemsArgs{...}
//
//	or:
//
//	        nil
type BlueprintPropertiesArrayPropsObjectItemsPtrInput interface {
	pulumi.Input

	ToBlueprintPropertiesArrayPropsObjectItemsPtrOutput() BlueprintPropertiesArrayPropsObjectItemsPtrOutput
	ToBlueprintPropertiesArrayPropsObjectItemsPtrOutputWithContext(context.Context) BlueprintPropertiesArrayPropsObjectItemsPtrOutput
}

type blueprintPropertiesArrayPropsObjectItemsPtrType BlueprintPropertiesArrayPropsObjectItemsArgs

func BlueprintPropertiesArrayPropsObjectItemsPtr(v *BlueprintPropertiesArrayPropsObjectItemsArgs) BlueprintPropertiesArrayPropsObjectItemsPtrInput {
	return (*blueprintPropertiesArrayPropsObjectItemsPtrType)(v)
}

func (*blueprintPropertiesArrayPropsObjectItemsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintPropertiesArrayPropsObjectItems)(nil)).Elem()
}

func (i *blueprintPropertiesArrayPropsObjectItemsPtrType) ToBlueprintPropertiesArrayPropsObjectItemsPtrOutput() BlueprintPropertiesArrayPropsObjectItemsPtrOutput {
	return i.ToBlueprintPropertiesArrayPropsObjectItemsPtrOutputWithContext(context.Background())
}

func (i *blueprintPropertiesArrayPropsObjectItemsPtrType) ToBlueprintPropertiesArrayPropsObjectItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsObjectItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsObjectItemsPtrOutput)
}

func (i *blueprintPropertiesArrayPropsObjectItemsPtrType) ToOutput(ctx context.Context) pulumix.Output[*BlueprintPropertiesArrayPropsObjectItems] {
	return pulumix.Output[*BlueprintPropertiesArrayPropsObjectItems]{
		OutputState: i.ToBlueprintPropertiesArrayPropsObjectItemsPtrOutputWithContext(ctx).OutputState,
	}
}

type BlueprintPropertiesArrayPropsObjectItemsOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesArrayPropsObjectItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesArrayPropsObjectItems)(nil)).Elem()
}

func (o BlueprintPropertiesArrayPropsObjectItemsOutput) ToBlueprintPropertiesArrayPropsObjectItemsOutput() BlueprintPropertiesArrayPropsObjectItemsOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsObjectItemsOutput) ToBlueprintPropertiesArrayPropsObjectItemsOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsObjectItemsOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsObjectItemsOutput) ToBlueprintPropertiesArrayPropsObjectItemsPtrOutput() BlueprintPropertiesArrayPropsObjectItemsPtrOutput {
	return o.ToBlueprintPropertiesArrayPropsObjectItemsPtrOutputWithContext(context.Background())
}

func (o BlueprintPropertiesArrayPropsObjectItemsOutput) ToBlueprintPropertiesArrayPropsObjectItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsObjectItemsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlueprintPropertiesArrayPropsObjectItems) *BlueprintPropertiesArrayPropsObjectItems {
		return &v
	}).(BlueprintPropertiesArrayPropsObjectItemsPtrOutput)
}

func (o BlueprintPropertiesArrayPropsObjectItemsOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesArrayPropsObjectItems] {
	return pulumix.Output[BlueprintPropertiesArrayPropsObjectItems]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesArrayPropsObjectItemsOutput) Defaults() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayPropsObjectItems) []string { return v.Defaults }).(pulumi.StringArrayOutput)
}

type BlueprintPropertiesArrayPropsObjectItemsPtrOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesArrayPropsObjectItemsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintPropertiesArrayPropsObjectItems)(nil)).Elem()
}

func (o BlueprintPropertiesArrayPropsObjectItemsPtrOutput) ToBlueprintPropertiesArrayPropsObjectItemsPtrOutput() BlueprintPropertiesArrayPropsObjectItemsPtrOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsObjectItemsPtrOutput) ToBlueprintPropertiesArrayPropsObjectItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsObjectItemsPtrOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsObjectItemsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BlueprintPropertiesArrayPropsObjectItems] {
	return pulumix.Output[*BlueprintPropertiesArrayPropsObjectItems]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesArrayPropsObjectItemsPtrOutput) Elem() BlueprintPropertiesArrayPropsObjectItemsOutput {
	return o.ApplyT(func(v *BlueprintPropertiesArrayPropsObjectItems) BlueprintPropertiesArrayPropsObjectItems {
		if v != nil {
			return *v
		}
		var ret BlueprintPropertiesArrayPropsObjectItems
		return ret
	}).(BlueprintPropertiesArrayPropsObjectItemsOutput)
}

func (o BlueprintPropertiesArrayPropsObjectItemsPtrOutput) Defaults() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlueprintPropertiesArrayPropsObjectItems) []string {
		if v == nil {
			return nil
		}
		return v.Defaults
	}).(pulumi.StringArrayOutput)
}

type BlueprintPropertiesArrayPropsStringItems struct {
	Defaults []string `pulumi:"defaults"`
	Format   *string  `pulumi:"format"`
}

// BlueprintPropertiesArrayPropsStringItemsInput is an input type that accepts BlueprintPropertiesArrayPropsStringItemsArgs and BlueprintPropertiesArrayPropsStringItemsOutput values.
// You can construct a concrete instance of `BlueprintPropertiesArrayPropsStringItemsInput` via:
//
//	BlueprintPropertiesArrayPropsStringItemsArgs{...}
type BlueprintPropertiesArrayPropsStringItemsInput interface {
	pulumi.Input

	ToBlueprintPropertiesArrayPropsStringItemsOutput() BlueprintPropertiesArrayPropsStringItemsOutput
	ToBlueprintPropertiesArrayPropsStringItemsOutputWithContext(context.Context) BlueprintPropertiesArrayPropsStringItemsOutput
}

type BlueprintPropertiesArrayPropsStringItemsArgs struct {
	Defaults pulumi.StringArrayInput `pulumi:"defaults"`
	Format   pulumi.StringPtrInput   `pulumi:"format"`
}

func (BlueprintPropertiesArrayPropsStringItemsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesArrayPropsStringItems)(nil)).Elem()
}

func (i BlueprintPropertiesArrayPropsStringItemsArgs) ToBlueprintPropertiesArrayPropsStringItemsOutput() BlueprintPropertiesArrayPropsStringItemsOutput {
	return i.ToBlueprintPropertiesArrayPropsStringItemsOutputWithContext(context.Background())
}

func (i BlueprintPropertiesArrayPropsStringItemsArgs) ToBlueprintPropertiesArrayPropsStringItemsOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsStringItemsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsStringItemsOutput)
}

func (i BlueprintPropertiesArrayPropsStringItemsArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesArrayPropsStringItems] {
	return pulumix.Output[BlueprintPropertiesArrayPropsStringItems]{
		OutputState: i.ToBlueprintPropertiesArrayPropsStringItemsOutputWithContext(ctx).OutputState,
	}
}

func (i BlueprintPropertiesArrayPropsStringItemsArgs) ToBlueprintPropertiesArrayPropsStringItemsPtrOutput() BlueprintPropertiesArrayPropsStringItemsPtrOutput {
	return i.ToBlueprintPropertiesArrayPropsStringItemsPtrOutputWithContext(context.Background())
}

func (i BlueprintPropertiesArrayPropsStringItemsArgs) ToBlueprintPropertiesArrayPropsStringItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsStringItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsStringItemsOutput).ToBlueprintPropertiesArrayPropsStringItemsPtrOutputWithContext(ctx)
}

// BlueprintPropertiesArrayPropsStringItemsPtrInput is an input type that accepts BlueprintPropertiesArrayPropsStringItemsArgs, BlueprintPropertiesArrayPropsStringItemsPtr and BlueprintPropertiesArrayPropsStringItemsPtrOutput values.
// You can construct a concrete instance of `BlueprintPropertiesArrayPropsStringItemsPtrInput` via:
//
//	        BlueprintPropertiesArrayPropsStringItemsArgs{...}
//
//	or:
//
//	        nil
type BlueprintPropertiesArrayPropsStringItemsPtrInput interface {
	pulumi.Input

	ToBlueprintPropertiesArrayPropsStringItemsPtrOutput() BlueprintPropertiesArrayPropsStringItemsPtrOutput
	ToBlueprintPropertiesArrayPropsStringItemsPtrOutputWithContext(context.Context) BlueprintPropertiesArrayPropsStringItemsPtrOutput
}

type blueprintPropertiesArrayPropsStringItemsPtrType BlueprintPropertiesArrayPropsStringItemsArgs

func BlueprintPropertiesArrayPropsStringItemsPtr(v *BlueprintPropertiesArrayPropsStringItemsArgs) BlueprintPropertiesArrayPropsStringItemsPtrInput {
	return (*blueprintPropertiesArrayPropsStringItemsPtrType)(v)
}

func (*blueprintPropertiesArrayPropsStringItemsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintPropertiesArrayPropsStringItems)(nil)).Elem()
}

func (i *blueprintPropertiesArrayPropsStringItemsPtrType) ToBlueprintPropertiesArrayPropsStringItemsPtrOutput() BlueprintPropertiesArrayPropsStringItemsPtrOutput {
	return i.ToBlueprintPropertiesArrayPropsStringItemsPtrOutputWithContext(context.Background())
}

func (i *blueprintPropertiesArrayPropsStringItemsPtrType) ToBlueprintPropertiesArrayPropsStringItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsStringItemsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesArrayPropsStringItemsPtrOutput)
}

func (i *blueprintPropertiesArrayPropsStringItemsPtrType) ToOutput(ctx context.Context) pulumix.Output[*BlueprintPropertiesArrayPropsStringItems] {
	return pulumix.Output[*BlueprintPropertiesArrayPropsStringItems]{
		OutputState: i.ToBlueprintPropertiesArrayPropsStringItemsPtrOutputWithContext(ctx).OutputState,
	}
}

type BlueprintPropertiesArrayPropsStringItemsOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesArrayPropsStringItemsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesArrayPropsStringItems)(nil)).Elem()
}

func (o BlueprintPropertiesArrayPropsStringItemsOutput) ToBlueprintPropertiesArrayPropsStringItemsOutput() BlueprintPropertiesArrayPropsStringItemsOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsStringItemsOutput) ToBlueprintPropertiesArrayPropsStringItemsOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsStringItemsOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsStringItemsOutput) ToBlueprintPropertiesArrayPropsStringItemsPtrOutput() BlueprintPropertiesArrayPropsStringItemsPtrOutput {
	return o.ToBlueprintPropertiesArrayPropsStringItemsPtrOutputWithContext(context.Background())
}

func (o BlueprintPropertiesArrayPropsStringItemsOutput) ToBlueprintPropertiesArrayPropsStringItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsStringItemsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlueprintPropertiesArrayPropsStringItems) *BlueprintPropertiesArrayPropsStringItems {
		return &v
	}).(BlueprintPropertiesArrayPropsStringItemsPtrOutput)
}

func (o BlueprintPropertiesArrayPropsStringItemsOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesArrayPropsStringItems] {
	return pulumix.Output[BlueprintPropertiesArrayPropsStringItems]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesArrayPropsStringItemsOutput) Defaults() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayPropsStringItems) []string { return v.Defaults }).(pulumi.StringArrayOutput)
}

func (o BlueprintPropertiesArrayPropsStringItemsOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesArrayPropsStringItems) *string { return v.Format }).(pulumi.StringPtrOutput)
}

type BlueprintPropertiesArrayPropsStringItemsPtrOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesArrayPropsStringItemsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintPropertiesArrayPropsStringItems)(nil)).Elem()
}

func (o BlueprintPropertiesArrayPropsStringItemsPtrOutput) ToBlueprintPropertiesArrayPropsStringItemsPtrOutput() BlueprintPropertiesArrayPropsStringItemsPtrOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsStringItemsPtrOutput) ToBlueprintPropertiesArrayPropsStringItemsPtrOutputWithContext(ctx context.Context) BlueprintPropertiesArrayPropsStringItemsPtrOutput {
	return o
}

func (o BlueprintPropertiesArrayPropsStringItemsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BlueprintPropertiesArrayPropsStringItems] {
	return pulumix.Output[*BlueprintPropertiesArrayPropsStringItems]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesArrayPropsStringItemsPtrOutput) Elem() BlueprintPropertiesArrayPropsStringItemsOutput {
	return o.ApplyT(func(v *BlueprintPropertiesArrayPropsStringItems) BlueprintPropertiesArrayPropsStringItems {
		if v != nil {
			return *v
		}
		var ret BlueprintPropertiesArrayPropsStringItems
		return ret
	}).(BlueprintPropertiesArrayPropsStringItemsOutput)
}

func (o BlueprintPropertiesArrayPropsStringItemsPtrOutput) Defaults() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BlueprintPropertiesArrayPropsStringItems) []string {
		if v == nil {
			return nil
		}
		return v.Defaults
	}).(pulumi.StringArrayOutput)
}

func (o BlueprintPropertiesArrayPropsStringItemsPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlueprintPropertiesArrayPropsStringItems) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

type BlueprintPropertiesBooleanProps struct {
	Default     *bool   `pulumi:"default"`
	Description *string `pulumi:"description"`
	Icon        *string `pulumi:"icon"`
	Required    *bool   `pulumi:"required"`
	Title       *string `pulumi:"title"`
}

// BlueprintPropertiesBooleanPropsInput is an input type that accepts BlueprintPropertiesBooleanPropsArgs and BlueprintPropertiesBooleanPropsOutput values.
// You can construct a concrete instance of `BlueprintPropertiesBooleanPropsInput` via:
//
//	BlueprintPropertiesBooleanPropsArgs{...}
type BlueprintPropertiesBooleanPropsInput interface {
	pulumi.Input

	ToBlueprintPropertiesBooleanPropsOutput() BlueprintPropertiesBooleanPropsOutput
	ToBlueprintPropertiesBooleanPropsOutputWithContext(context.Context) BlueprintPropertiesBooleanPropsOutput
}

type BlueprintPropertiesBooleanPropsArgs struct {
	Default     pulumi.BoolPtrInput   `pulumi:"default"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	Icon        pulumi.StringPtrInput `pulumi:"icon"`
	Required    pulumi.BoolPtrInput   `pulumi:"required"`
	Title       pulumi.StringPtrInput `pulumi:"title"`
}

func (BlueprintPropertiesBooleanPropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesBooleanProps)(nil)).Elem()
}

func (i BlueprintPropertiesBooleanPropsArgs) ToBlueprintPropertiesBooleanPropsOutput() BlueprintPropertiesBooleanPropsOutput {
	return i.ToBlueprintPropertiesBooleanPropsOutputWithContext(context.Background())
}

func (i BlueprintPropertiesBooleanPropsArgs) ToBlueprintPropertiesBooleanPropsOutputWithContext(ctx context.Context) BlueprintPropertiesBooleanPropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesBooleanPropsOutput)
}

func (i BlueprintPropertiesBooleanPropsArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesBooleanProps] {
	return pulumix.Output[BlueprintPropertiesBooleanProps]{
		OutputState: i.ToBlueprintPropertiesBooleanPropsOutputWithContext(ctx).OutputState,
	}
}

// BlueprintPropertiesBooleanPropsMapInput is an input type that accepts BlueprintPropertiesBooleanPropsMap and BlueprintPropertiesBooleanPropsMapOutput values.
// You can construct a concrete instance of `BlueprintPropertiesBooleanPropsMapInput` via:
//
//	BlueprintPropertiesBooleanPropsMap{ "key": BlueprintPropertiesBooleanPropsArgs{...} }
type BlueprintPropertiesBooleanPropsMapInput interface {
	pulumi.Input

	ToBlueprintPropertiesBooleanPropsMapOutput() BlueprintPropertiesBooleanPropsMapOutput
	ToBlueprintPropertiesBooleanPropsMapOutputWithContext(context.Context) BlueprintPropertiesBooleanPropsMapOutput
}

type BlueprintPropertiesBooleanPropsMap map[string]BlueprintPropertiesBooleanPropsInput

func (BlueprintPropertiesBooleanPropsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintPropertiesBooleanProps)(nil)).Elem()
}

func (i BlueprintPropertiesBooleanPropsMap) ToBlueprintPropertiesBooleanPropsMapOutput() BlueprintPropertiesBooleanPropsMapOutput {
	return i.ToBlueprintPropertiesBooleanPropsMapOutputWithContext(context.Background())
}

func (i BlueprintPropertiesBooleanPropsMap) ToBlueprintPropertiesBooleanPropsMapOutputWithContext(ctx context.Context) BlueprintPropertiesBooleanPropsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesBooleanPropsMapOutput)
}

func (i BlueprintPropertiesBooleanPropsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintPropertiesBooleanProps] {
	return pulumix.Output[map[string]BlueprintPropertiesBooleanProps]{
		OutputState: i.ToBlueprintPropertiesBooleanPropsMapOutputWithContext(ctx).OutputState,
	}
}

type BlueprintPropertiesBooleanPropsOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesBooleanPropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesBooleanProps)(nil)).Elem()
}

func (o BlueprintPropertiesBooleanPropsOutput) ToBlueprintPropertiesBooleanPropsOutput() BlueprintPropertiesBooleanPropsOutput {
	return o
}

func (o BlueprintPropertiesBooleanPropsOutput) ToBlueprintPropertiesBooleanPropsOutputWithContext(ctx context.Context) BlueprintPropertiesBooleanPropsOutput {
	return o
}

func (o BlueprintPropertiesBooleanPropsOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesBooleanProps] {
	return pulumix.Output[BlueprintPropertiesBooleanProps]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesBooleanPropsOutput) Default() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesBooleanProps) *bool { return v.Default }).(pulumi.BoolPtrOutput)
}

func (o BlueprintPropertiesBooleanPropsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesBooleanProps) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesBooleanPropsOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesBooleanProps) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesBooleanPropsOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesBooleanProps) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o BlueprintPropertiesBooleanPropsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesBooleanProps) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type BlueprintPropertiesBooleanPropsMapOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesBooleanPropsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintPropertiesBooleanProps)(nil)).Elem()
}

func (o BlueprintPropertiesBooleanPropsMapOutput) ToBlueprintPropertiesBooleanPropsMapOutput() BlueprintPropertiesBooleanPropsMapOutput {
	return o
}

func (o BlueprintPropertiesBooleanPropsMapOutput) ToBlueprintPropertiesBooleanPropsMapOutputWithContext(ctx context.Context) BlueprintPropertiesBooleanPropsMapOutput {
	return o
}

func (o BlueprintPropertiesBooleanPropsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintPropertiesBooleanProps] {
	return pulumix.Output[map[string]BlueprintPropertiesBooleanProps]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesBooleanPropsMapOutput) MapIndex(k pulumi.StringInput) BlueprintPropertiesBooleanPropsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BlueprintPropertiesBooleanProps {
		return vs[0].(map[string]BlueprintPropertiesBooleanProps)[vs[1].(string)]
	}).(BlueprintPropertiesBooleanPropsOutput)
}

type BlueprintPropertiesNumberProps struct {
	Default     *float64          `pulumi:"default"`
	Description *string           `pulumi:"description"`
	EnumColors  map[string]string `pulumi:"enumColors"`
	Enums       []float64         `pulumi:"enums"`
	Icon        *string           `pulumi:"icon"`
	Maximum     *float64          `pulumi:"maximum"`
	Minimum     *float64          `pulumi:"minimum"`
	Required    *bool             `pulumi:"required"`
	Title       *string           `pulumi:"title"`
}

// BlueprintPropertiesNumberPropsInput is an input type that accepts BlueprintPropertiesNumberPropsArgs and BlueprintPropertiesNumberPropsOutput values.
// You can construct a concrete instance of `BlueprintPropertiesNumberPropsInput` via:
//
//	BlueprintPropertiesNumberPropsArgs{...}
type BlueprintPropertiesNumberPropsInput interface {
	pulumi.Input

	ToBlueprintPropertiesNumberPropsOutput() BlueprintPropertiesNumberPropsOutput
	ToBlueprintPropertiesNumberPropsOutputWithContext(context.Context) BlueprintPropertiesNumberPropsOutput
}

type BlueprintPropertiesNumberPropsArgs struct {
	Default     pulumi.Float64PtrInput   `pulumi:"default"`
	Description pulumi.StringPtrInput    `pulumi:"description"`
	EnumColors  pulumi.StringMapInput    `pulumi:"enumColors"`
	Enums       pulumi.Float64ArrayInput `pulumi:"enums"`
	Icon        pulumi.StringPtrInput    `pulumi:"icon"`
	Maximum     pulumi.Float64PtrInput   `pulumi:"maximum"`
	Minimum     pulumi.Float64PtrInput   `pulumi:"minimum"`
	Required    pulumi.BoolPtrInput      `pulumi:"required"`
	Title       pulumi.StringPtrInput    `pulumi:"title"`
}

func (BlueprintPropertiesNumberPropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesNumberProps)(nil)).Elem()
}

func (i BlueprintPropertiesNumberPropsArgs) ToBlueprintPropertiesNumberPropsOutput() BlueprintPropertiesNumberPropsOutput {
	return i.ToBlueprintPropertiesNumberPropsOutputWithContext(context.Background())
}

func (i BlueprintPropertiesNumberPropsArgs) ToBlueprintPropertiesNumberPropsOutputWithContext(ctx context.Context) BlueprintPropertiesNumberPropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesNumberPropsOutput)
}

func (i BlueprintPropertiesNumberPropsArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesNumberProps] {
	return pulumix.Output[BlueprintPropertiesNumberProps]{
		OutputState: i.ToBlueprintPropertiesNumberPropsOutputWithContext(ctx).OutputState,
	}
}

// BlueprintPropertiesNumberPropsMapInput is an input type that accepts BlueprintPropertiesNumberPropsMap and BlueprintPropertiesNumberPropsMapOutput values.
// You can construct a concrete instance of `BlueprintPropertiesNumberPropsMapInput` via:
//
//	BlueprintPropertiesNumberPropsMap{ "key": BlueprintPropertiesNumberPropsArgs{...} }
type BlueprintPropertiesNumberPropsMapInput interface {
	pulumi.Input

	ToBlueprintPropertiesNumberPropsMapOutput() BlueprintPropertiesNumberPropsMapOutput
	ToBlueprintPropertiesNumberPropsMapOutputWithContext(context.Context) BlueprintPropertiesNumberPropsMapOutput
}

type BlueprintPropertiesNumberPropsMap map[string]BlueprintPropertiesNumberPropsInput

func (BlueprintPropertiesNumberPropsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintPropertiesNumberProps)(nil)).Elem()
}

func (i BlueprintPropertiesNumberPropsMap) ToBlueprintPropertiesNumberPropsMapOutput() BlueprintPropertiesNumberPropsMapOutput {
	return i.ToBlueprintPropertiesNumberPropsMapOutputWithContext(context.Background())
}

func (i BlueprintPropertiesNumberPropsMap) ToBlueprintPropertiesNumberPropsMapOutputWithContext(ctx context.Context) BlueprintPropertiesNumberPropsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesNumberPropsMapOutput)
}

func (i BlueprintPropertiesNumberPropsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintPropertiesNumberProps] {
	return pulumix.Output[map[string]BlueprintPropertiesNumberProps]{
		OutputState: i.ToBlueprintPropertiesNumberPropsMapOutputWithContext(ctx).OutputState,
	}
}

type BlueprintPropertiesNumberPropsOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesNumberPropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesNumberProps)(nil)).Elem()
}

func (o BlueprintPropertiesNumberPropsOutput) ToBlueprintPropertiesNumberPropsOutput() BlueprintPropertiesNumberPropsOutput {
	return o
}

func (o BlueprintPropertiesNumberPropsOutput) ToBlueprintPropertiesNumberPropsOutputWithContext(ctx context.Context) BlueprintPropertiesNumberPropsOutput {
	return o
}

func (o BlueprintPropertiesNumberPropsOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesNumberProps] {
	return pulumix.Output[BlueprintPropertiesNumberProps]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesNumberPropsOutput) Default() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesNumberProps) *float64 { return v.Default }).(pulumi.Float64PtrOutput)
}

func (o BlueprintPropertiesNumberPropsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesNumberProps) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesNumberPropsOutput) EnumColors() pulumi.StringMapOutput {
	return o.ApplyT(func(v BlueprintPropertiesNumberProps) map[string]string { return v.EnumColors }).(pulumi.StringMapOutput)
}

func (o BlueprintPropertiesNumberPropsOutput) Enums() pulumi.Float64ArrayOutput {
	return o.ApplyT(func(v BlueprintPropertiesNumberProps) []float64 { return v.Enums }).(pulumi.Float64ArrayOutput)
}

func (o BlueprintPropertiesNumberPropsOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesNumberProps) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesNumberPropsOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesNumberProps) *float64 { return v.Maximum }).(pulumi.Float64PtrOutput)
}

func (o BlueprintPropertiesNumberPropsOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesNumberProps) *float64 { return v.Minimum }).(pulumi.Float64PtrOutput)
}

func (o BlueprintPropertiesNumberPropsOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesNumberProps) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o BlueprintPropertiesNumberPropsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesNumberProps) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type BlueprintPropertiesNumberPropsMapOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesNumberPropsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintPropertiesNumberProps)(nil)).Elem()
}

func (o BlueprintPropertiesNumberPropsMapOutput) ToBlueprintPropertiesNumberPropsMapOutput() BlueprintPropertiesNumberPropsMapOutput {
	return o
}

func (o BlueprintPropertiesNumberPropsMapOutput) ToBlueprintPropertiesNumberPropsMapOutputWithContext(ctx context.Context) BlueprintPropertiesNumberPropsMapOutput {
	return o
}

func (o BlueprintPropertiesNumberPropsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintPropertiesNumberProps] {
	return pulumix.Output[map[string]BlueprintPropertiesNumberProps]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesNumberPropsMapOutput) MapIndex(k pulumi.StringInput) BlueprintPropertiesNumberPropsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BlueprintPropertiesNumberProps {
		return vs[0].(map[string]BlueprintPropertiesNumberProps)[vs[1].(string)]
	}).(BlueprintPropertiesNumberPropsOutput)
}

type BlueprintPropertiesObjectProps struct {
	Default     *string `pulumi:"default"`
	Description *string `pulumi:"description"`
	Icon        *string `pulumi:"icon"`
	Required    *bool   `pulumi:"required"`
	Spec        *string `pulumi:"spec"`
	Title       *string `pulumi:"title"`
}

// BlueprintPropertiesObjectPropsInput is an input type that accepts BlueprintPropertiesObjectPropsArgs and BlueprintPropertiesObjectPropsOutput values.
// You can construct a concrete instance of `BlueprintPropertiesObjectPropsInput` via:
//
//	BlueprintPropertiesObjectPropsArgs{...}
type BlueprintPropertiesObjectPropsInput interface {
	pulumi.Input

	ToBlueprintPropertiesObjectPropsOutput() BlueprintPropertiesObjectPropsOutput
	ToBlueprintPropertiesObjectPropsOutputWithContext(context.Context) BlueprintPropertiesObjectPropsOutput
}

type BlueprintPropertiesObjectPropsArgs struct {
	Default     pulumi.StringPtrInput `pulumi:"default"`
	Description pulumi.StringPtrInput `pulumi:"description"`
	Icon        pulumi.StringPtrInput `pulumi:"icon"`
	Required    pulumi.BoolPtrInput   `pulumi:"required"`
	Spec        pulumi.StringPtrInput `pulumi:"spec"`
	Title       pulumi.StringPtrInput `pulumi:"title"`
}

func (BlueprintPropertiesObjectPropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesObjectProps)(nil)).Elem()
}

func (i BlueprintPropertiesObjectPropsArgs) ToBlueprintPropertiesObjectPropsOutput() BlueprintPropertiesObjectPropsOutput {
	return i.ToBlueprintPropertiesObjectPropsOutputWithContext(context.Background())
}

func (i BlueprintPropertiesObjectPropsArgs) ToBlueprintPropertiesObjectPropsOutputWithContext(ctx context.Context) BlueprintPropertiesObjectPropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesObjectPropsOutput)
}

func (i BlueprintPropertiesObjectPropsArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesObjectProps] {
	return pulumix.Output[BlueprintPropertiesObjectProps]{
		OutputState: i.ToBlueprintPropertiesObjectPropsOutputWithContext(ctx).OutputState,
	}
}

// BlueprintPropertiesObjectPropsMapInput is an input type that accepts BlueprintPropertiesObjectPropsMap and BlueprintPropertiesObjectPropsMapOutput values.
// You can construct a concrete instance of `BlueprintPropertiesObjectPropsMapInput` via:
//
//	BlueprintPropertiesObjectPropsMap{ "key": BlueprintPropertiesObjectPropsArgs{...} }
type BlueprintPropertiesObjectPropsMapInput interface {
	pulumi.Input

	ToBlueprintPropertiesObjectPropsMapOutput() BlueprintPropertiesObjectPropsMapOutput
	ToBlueprintPropertiesObjectPropsMapOutputWithContext(context.Context) BlueprintPropertiesObjectPropsMapOutput
}

type BlueprintPropertiesObjectPropsMap map[string]BlueprintPropertiesObjectPropsInput

func (BlueprintPropertiesObjectPropsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintPropertiesObjectProps)(nil)).Elem()
}

func (i BlueprintPropertiesObjectPropsMap) ToBlueprintPropertiesObjectPropsMapOutput() BlueprintPropertiesObjectPropsMapOutput {
	return i.ToBlueprintPropertiesObjectPropsMapOutputWithContext(context.Background())
}

func (i BlueprintPropertiesObjectPropsMap) ToBlueprintPropertiesObjectPropsMapOutputWithContext(ctx context.Context) BlueprintPropertiesObjectPropsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesObjectPropsMapOutput)
}

func (i BlueprintPropertiesObjectPropsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintPropertiesObjectProps] {
	return pulumix.Output[map[string]BlueprintPropertiesObjectProps]{
		OutputState: i.ToBlueprintPropertiesObjectPropsMapOutputWithContext(ctx).OutputState,
	}
}

type BlueprintPropertiesObjectPropsOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesObjectPropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesObjectProps)(nil)).Elem()
}

func (o BlueprintPropertiesObjectPropsOutput) ToBlueprintPropertiesObjectPropsOutput() BlueprintPropertiesObjectPropsOutput {
	return o
}

func (o BlueprintPropertiesObjectPropsOutput) ToBlueprintPropertiesObjectPropsOutputWithContext(ctx context.Context) BlueprintPropertiesObjectPropsOutput {
	return o
}

func (o BlueprintPropertiesObjectPropsOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesObjectProps] {
	return pulumix.Output[BlueprintPropertiesObjectProps]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesObjectPropsOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesObjectProps) *string { return v.Default }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesObjectPropsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesObjectProps) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesObjectPropsOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesObjectProps) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesObjectPropsOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesObjectProps) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o BlueprintPropertiesObjectPropsOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesObjectProps) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesObjectPropsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesObjectProps) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type BlueprintPropertiesObjectPropsMapOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesObjectPropsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintPropertiesObjectProps)(nil)).Elem()
}

func (o BlueprintPropertiesObjectPropsMapOutput) ToBlueprintPropertiesObjectPropsMapOutput() BlueprintPropertiesObjectPropsMapOutput {
	return o
}

func (o BlueprintPropertiesObjectPropsMapOutput) ToBlueprintPropertiesObjectPropsMapOutputWithContext(ctx context.Context) BlueprintPropertiesObjectPropsMapOutput {
	return o
}

func (o BlueprintPropertiesObjectPropsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintPropertiesObjectProps] {
	return pulumix.Output[map[string]BlueprintPropertiesObjectProps]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesObjectPropsMapOutput) MapIndex(k pulumi.StringInput) BlueprintPropertiesObjectPropsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BlueprintPropertiesObjectProps {
		return vs[0].(map[string]BlueprintPropertiesObjectProps)[vs[1].(string)]
	}).(BlueprintPropertiesObjectPropsOutput)
}

type BlueprintPropertiesStringProps struct {
	Default            *string                                           `pulumi:"default"`
	Description        *string                                           `pulumi:"description"`
	EnumColors         map[string]string                                 `pulumi:"enumColors"`
	Enums              []string                                          `pulumi:"enums"`
	Format             *string                                           `pulumi:"format"`
	Icon               *string                                           `pulumi:"icon"`
	MaxLength          *int                                              `pulumi:"maxLength"`
	MinLength          *int                                              `pulumi:"minLength"`
	Pattern            *string                                           `pulumi:"pattern"`
	Required           *bool                                             `pulumi:"required"`
	Spec               *string                                           `pulumi:"spec"`
	SpecAuthentication *BlueprintPropertiesStringPropsSpecAuthentication `pulumi:"specAuthentication"`
	Title              *string                                           `pulumi:"title"`
}

// BlueprintPropertiesStringPropsInput is an input type that accepts BlueprintPropertiesStringPropsArgs and BlueprintPropertiesStringPropsOutput values.
// You can construct a concrete instance of `BlueprintPropertiesStringPropsInput` via:
//
//	BlueprintPropertiesStringPropsArgs{...}
type BlueprintPropertiesStringPropsInput interface {
	pulumi.Input

	ToBlueprintPropertiesStringPropsOutput() BlueprintPropertiesStringPropsOutput
	ToBlueprintPropertiesStringPropsOutputWithContext(context.Context) BlueprintPropertiesStringPropsOutput
}

type BlueprintPropertiesStringPropsArgs struct {
	Default            pulumi.StringPtrInput                                    `pulumi:"default"`
	Description        pulumi.StringPtrInput                                    `pulumi:"description"`
	EnumColors         pulumi.StringMapInput                                    `pulumi:"enumColors"`
	Enums              pulumi.StringArrayInput                                  `pulumi:"enums"`
	Format             pulumi.StringPtrInput                                    `pulumi:"format"`
	Icon               pulumi.StringPtrInput                                    `pulumi:"icon"`
	MaxLength          pulumi.IntPtrInput                                       `pulumi:"maxLength"`
	MinLength          pulumi.IntPtrInput                                       `pulumi:"minLength"`
	Pattern            pulumi.StringPtrInput                                    `pulumi:"pattern"`
	Required           pulumi.BoolPtrInput                                      `pulumi:"required"`
	Spec               pulumi.StringPtrInput                                    `pulumi:"spec"`
	SpecAuthentication BlueprintPropertiesStringPropsSpecAuthenticationPtrInput `pulumi:"specAuthentication"`
	Title              pulumi.StringPtrInput                                    `pulumi:"title"`
}

func (BlueprintPropertiesStringPropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesStringProps)(nil)).Elem()
}

func (i BlueprintPropertiesStringPropsArgs) ToBlueprintPropertiesStringPropsOutput() BlueprintPropertiesStringPropsOutput {
	return i.ToBlueprintPropertiesStringPropsOutputWithContext(context.Background())
}

func (i BlueprintPropertiesStringPropsArgs) ToBlueprintPropertiesStringPropsOutputWithContext(ctx context.Context) BlueprintPropertiesStringPropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesStringPropsOutput)
}

func (i BlueprintPropertiesStringPropsArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesStringProps] {
	return pulumix.Output[BlueprintPropertiesStringProps]{
		OutputState: i.ToBlueprintPropertiesStringPropsOutputWithContext(ctx).OutputState,
	}
}

// BlueprintPropertiesStringPropsMapInput is an input type that accepts BlueprintPropertiesStringPropsMap and BlueprintPropertiesStringPropsMapOutput values.
// You can construct a concrete instance of `BlueprintPropertiesStringPropsMapInput` via:
//
//	BlueprintPropertiesStringPropsMap{ "key": BlueprintPropertiesStringPropsArgs{...} }
type BlueprintPropertiesStringPropsMapInput interface {
	pulumi.Input

	ToBlueprintPropertiesStringPropsMapOutput() BlueprintPropertiesStringPropsMapOutput
	ToBlueprintPropertiesStringPropsMapOutputWithContext(context.Context) BlueprintPropertiesStringPropsMapOutput
}

type BlueprintPropertiesStringPropsMap map[string]BlueprintPropertiesStringPropsInput

func (BlueprintPropertiesStringPropsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintPropertiesStringProps)(nil)).Elem()
}

func (i BlueprintPropertiesStringPropsMap) ToBlueprintPropertiesStringPropsMapOutput() BlueprintPropertiesStringPropsMapOutput {
	return i.ToBlueprintPropertiesStringPropsMapOutputWithContext(context.Background())
}

func (i BlueprintPropertiesStringPropsMap) ToBlueprintPropertiesStringPropsMapOutputWithContext(ctx context.Context) BlueprintPropertiesStringPropsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesStringPropsMapOutput)
}

func (i BlueprintPropertiesStringPropsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintPropertiesStringProps] {
	return pulumix.Output[map[string]BlueprintPropertiesStringProps]{
		OutputState: i.ToBlueprintPropertiesStringPropsMapOutputWithContext(ctx).OutputState,
	}
}

type BlueprintPropertiesStringPropsOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesStringPropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesStringProps)(nil)).Elem()
}

func (o BlueprintPropertiesStringPropsOutput) ToBlueprintPropertiesStringPropsOutput() BlueprintPropertiesStringPropsOutput {
	return o
}

func (o BlueprintPropertiesStringPropsOutput) ToBlueprintPropertiesStringPropsOutputWithContext(ctx context.Context) BlueprintPropertiesStringPropsOutput {
	return o
}

func (o BlueprintPropertiesStringPropsOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesStringProps] {
	return pulumix.Output[BlueprintPropertiesStringProps]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesStringPropsOutput) Default() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringProps) *string { return v.Default }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesStringPropsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringProps) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesStringPropsOutput) EnumColors() pulumi.StringMapOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringProps) map[string]string { return v.EnumColors }).(pulumi.StringMapOutput)
}

func (o BlueprintPropertiesStringPropsOutput) Enums() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringProps) []string { return v.Enums }).(pulumi.StringArrayOutput)
}

func (o BlueprintPropertiesStringPropsOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringProps) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesStringPropsOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringProps) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesStringPropsOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringProps) *int { return v.MaxLength }).(pulumi.IntPtrOutput)
}

func (o BlueprintPropertiesStringPropsOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringProps) *int { return v.MinLength }).(pulumi.IntPtrOutput)
}

func (o BlueprintPropertiesStringPropsOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringProps) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesStringPropsOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringProps) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o BlueprintPropertiesStringPropsOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringProps) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesStringPropsOutput) SpecAuthentication() BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringProps) *BlueprintPropertiesStringPropsSpecAuthentication {
		return v.SpecAuthentication
	}).(BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput)
}

func (o BlueprintPropertiesStringPropsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringProps) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type BlueprintPropertiesStringPropsMapOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesStringPropsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintPropertiesStringProps)(nil)).Elem()
}

func (o BlueprintPropertiesStringPropsMapOutput) ToBlueprintPropertiesStringPropsMapOutput() BlueprintPropertiesStringPropsMapOutput {
	return o
}

func (o BlueprintPropertiesStringPropsMapOutput) ToBlueprintPropertiesStringPropsMapOutputWithContext(ctx context.Context) BlueprintPropertiesStringPropsMapOutput {
	return o
}

func (o BlueprintPropertiesStringPropsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintPropertiesStringProps] {
	return pulumix.Output[map[string]BlueprintPropertiesStringProps]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesStringPropsMapOutput) MapIndex(k pulumi.StringInput) BlueprintPropertiesStringPropsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BlueprintPropertiesStringProps {
		return vs[0].(map[string]BlueprintPropertiesStringProps)[vs[1].(string)]
	}).(BlueprintPropertiesStringPropsOutput)
}

type BlueprintPropertiesStringPropsSpecAuthentication struct {
	AuthorizationUrl string `pulumi:"authorizationUrl"`
	ClientId         string `pulumi:"clientId"`
	TokenUrl         string `pulumi:"tokenUrl"`
}

// BlueprintPropertiesStringPropsSpecAuthenticationInput is an input type that accepts BlueprintPropertiesStringPropsSpecAuthenticationArgs and BlueprintPropertiesStringPropsSpecAuthenticationOutput values.
// You can construct a concrete instance of `BlueprintPropertiesStringPropsSpecAuthenticationInput` via:
//
//	BlueprintPropertiesStringPropsSpecAuthenticationArgs{...}
type BlueprintPropertiesStringPropsSpecAuthenticationInput interface {
	pulumi.Input

	ToBlueprintPropertiesStringPropsSpecAuthenticationOutput() BlueprintPropertiesStringPropsSpecAuthenticationOutput
	ToBlueprintPropertiesStringPropsSpecAuthenticationOutputWithContext(context.Context) BlueprintPropertiesStringPropsSpecAuthenticationOutput
}

type BlueprintPropertiesStringPropsSpecAuthenticationArgs struct {
	AuthorizationUrl pulumi.StringInput `pulumi:"authorizationUrl"`
	ClientId         pulumi.StringInput `pulumi:"clientId"`
	TokenUrl         pulumi.StringInput `pulumi:"tokenUrl"`
}

func (BlueprintPropertiesStringPropsSpecAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesStringPropsSpecAuthentication)(nil)).Elem()
}

func (i BlueprintPropertiesStringPropsSpecAuthenticationArgs) ToBlueprintPropertiesStringPropsSpecAuthenticationOutput() BlueprintPropertiesStringPropsSpecAuthenticationOutput {
	return i.ToBlueprintPropertiesStringPropsSpecAuthenticationOutputWithContext(context.Background())
}

func (i BlueprintPropertiesStringPropsSpecAuthenticationArgs) ToBlueprintPropertiesStringPropsSpecAuthenticationOutputWithContext(ctx context.Context) BlueprintPropertiesStringPropsSpecAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesStringPropsSpecAuthenticationOutput)
}

func (i BlueprintPropertiesStringPropsSpecAuthenticationArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesStringPropsSpecAuthentication] {
	return pulumix.Output[BlueprintPropertiesStringPropsSpecAuthentication]{
		OutputState: i.ToBlueprintPropertiesStringPropsSpecAuthenticationOutputWithContext(ctx).OutputState,
	}
}

func (i BlueprintPropertiesStringPropsSpecAuthenticationArgs) ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutput() BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput {
	return i.ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutputWithContext(context.Background())
}

func (i BlueprintPropertiesStringPropsSpecAuthenticationArgs) ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutputWithContext(ctx context.Context) BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesStringPropsSpecAuthenticationOutput).ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutputWithContext(ctx)
}

// BlueprintPropertiesStringPropsSpecAuthenticationPtrInput is an input type that accepts BlueprintPropertiesStringPropsSpecAuthenticationArgs, BlueprintPropertiesStringPropsSpecAuthenticationPtr and BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput values.
// You can construct a concrete instance of `BlueprintPropertiesStringPropsSpecAuthenticationPtrInput` via:
//
//	        BlueprintPropertiesStringPropsSpecAuthenticationArgs{...}
//
//	or:
//
//	        nil
type BlueprintPropertiesStringPropsSpecAuthenticationPtrInput interface {
	pulumi.Input

	ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutput() BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput
	ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutputWithContext(context.Context) BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput
}

type blueprintPropertiesStringPropsSpecAuthenticationPtrType BlueprintPropertiesStringPropsSpecAuthenticationArgs

func BlueprintPropertiesStringPropsSpecAuthenticationPtr(v *BlueprintPropertiesStringPropsSpecAuthenticationArgs) BlueprintPropertiesStringPropsSpecAuthenticationPtrInput {
	return (*blueprintPropertiesStringPropsSpecAuthenticationPtrType)(v)
}

func (*blueprintPropertiesStringPropsSpecAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintPropertiesStringPropsSpecAuthentication)(nil)).Elem()
}

func (i *blueprintPropertiesStringPropsSpecAuthenticationPtrType) ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutput() BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput {
	return i.ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutputWithContext(context.Background())
}

func (i *blueprintPropertiesStringPropsSpecAuthenticationPtrType) ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutputWithContext(ctx context.Context) BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput)
}

func (i *blueprintPropertiesStringPropsSpecAuthenticationPtrType) ToOutput(ctx context.Context) pulumix.Output[*BlueprintPropertiesStringPropsSpecAuthentication] {
	return pulumix.Output[*BlueprintPropertiesStringPropsSpecAuthentication]{
		OutputState: i.ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutputWithContext(ctx).OutputState,
	}
}

type BlueprintPropertiesStringPropsSpecAuthenticationOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesStringPropsSpecAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintPropertiesStringPropsSpecAuthentication)(nil)).Elem()
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationOutput) ToBlueprintPropertiesStringPropsSpecAuthenticationOutput() BlueprintPropertiesStringPropsSpecAuthenticationOutput {
	return o
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationOutput) ToBlueprintPropertiesStringPropsSpecAuthenticationOutputWithContext(ctx context.Context) BlueprintPropertiesStringPropsSpecAuthenticationOutput {
	return o
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationOutput) ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutput() BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput {
	return o.ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutputWithContext(context.Background())
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationOutput) ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutputWithContext(ctx context.Context) BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlueprintPropertiesStringPropsSpecAuthentication) *BlueprintPropertiesStringPropsSpecAuthentication {
		return &v
	}).(BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput)
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintPropertiesStringPropsSpecAuthentication] {
	return pulumix.Output[BlueprintPropertiesStringPropsSpecAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationOutput) AuthorizationUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringPropsSpecAuthentication) string { return v.AuthorizationUrl }).(pulumi.StringOutput)
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringPropsSpecAuthentication) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationOutput) TokenUrl() pulumi.StringOutput {
	return o.ApplyT(func(v BlueprintPropertiesStringPropsSpecAuthentication) string { return v.TokenUrl }).(pulumi.StringOutput)
}

type BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintPropertiesStringPropsSpecAuthentication)(nil)).Elem()
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput) ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutput() BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput {
	return o
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput) ToBlueprintPropertiesStringPropsSpecAuthenticationPtrOutputWithContext(ctx context.Context) BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput {
	return o
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BlueprintPropertiesStringPropsSpecAuthentication] {
	return pulumix.Output[*BlueprintPropertiesStringPropsSpecAuthentication]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput) Elem() BlueprintPropertiesStringPropsSpecAuthenticationOutput {
	return o.ApplyT(func(v *BlueprintPropertiesStringPropsSpecAuthentication) BlueprintPropertiesStringPropsSpecAuthentication {
		if v != nil {
			return *v
		}
		var ret BlueprintPropertiesStringPropsSpecAuthentication
		return ret
	}).(BlueprintPropertiesStringPropsSpecAuthenticationOutput)
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput) AuthorizationUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlueprintPropertiesStringPropsSpecAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizationUrl
	}).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlueprintPropertiesStringPropsSpecAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

func (o BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput) TokenUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlueprintPropertiesStringPropsSpecAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.TokenUrl
	}).(pulumi.StringPtrOutput)
}

type BlueprintRelations struct {
	Many     *bool   `pulumi:"many"`
	Required *bool   `pulumi:"required"`
	Target   string  `pulumi:"target"`
	Title    *string `pulumi:"title"`
}

// BlueprintRelationsInput is an input type that accepts BlueprintRelationsArgs and BlueprintRelationsOutput values.
// You can construct a concrete instance of `BlueprintRelationsInput` via:
//
//	BlueprintRelationsArgs{...}
type BlueprintRelationsInput interface {
	pulumi.Input

	ToBlueprintRelationsOutput() BlueprintRelationsOutput
	ToBlueprintRelationsOutputWithContext(context.Context) BlueprintRelationsOutput
}

type BlueprintRelationsArgs struct {
	Many     pulumi.BoolPtrInput   `pulumi:"many"`
	Required pulumi.BoolPtrInput   `pulumi:"required"`
	Target   pulumi.StringInput    `pulumi:"target"`
	Title    pulumi.StringPtrInput `pulumi:"title"`
}

func (BlueprintRelationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintRelations)(nil)).Elem()
}

func (i BlueprintRelationsArgs) ToBlueprintRelationsOutput() BlueprintRelationsOutput {
	return i.ToBlueprintRelationsOutputWithContext(context.Background())
}

func (i BlueprintRelationsArgs) ToBlueprintRelationsOutputWithContext(ctx context.Context) BlueprintRelationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintRelationsOutput)
}

func (i BlueprintRelationsArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintRelations] {
	return pulumix.Output[BlueprintRelations]{
		OutputState: i.ToBlueprintRelationsOutputWithContext(ctx).OutputState,
	}
}

// BlueprintRelationsMapInput is an input type that accepts BlueprintRelationsMap and BlueprintRelationsMapOutput values.
// You can construct a concrete instance of `BlueprintRelationsMapInput` via:
//
//	BlueprintRelationsMap{ "key": BlueprintRelationsArgs{...} }
type BlueprintRelationsMapInput interface {
	pulumi.Input

	ToBlueprintRelationsMapOutput() BlueprintRelationsMapOutput
	ToBlueprintRelationsMapOutputWithContext(context.Context) BlueprintRelationsMapOutput
}

type BlueprintRelationsMap map[string]BlueprintRelationsInput

func (BlueprintRelationsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintRelations)(nil)).Elem()
}

func (i BlueprintRelationsMap) ToBlueprintRelationsMapOutput() BlueprintRelationsMapOutput {
	return i.ToBlueprintRelationsMapOutputWithContext(context.Background())
}

func (i BlueprintRelationsMap) ToBlueprintRelationsMapOutputWithContext(ctx context.Context) BlueprintRelationsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintRelationsMapOutput)
}

func (i BlueprintRelationsMap) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintRelations] {
	return pulumix.Output[map[string]BlueprintRelations]{
		OutputState: i.ToBlueprintRelationsMapOutputWithContext(ctx).OutputState,
	}
}

type BlueprintRelationsOutput struct{ *pulumi.OutputState }

func (BlueprintRelationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintRelations)(nil)).Elem()
}

func (o BlueprintRelationsOutput) ToBlueprintRelationsOutput() BlueprintRelationsOutput {
	return o
}

func (o BlueprintRelationsOutput) ToBlueprintRelationsOutputWithContext(ctx context.Context) BlueprintRelationsOutput {
	return o
}

func (o BlueprintRelationsOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintRelations] {
	return pulumix.Output[BlueprintRelations]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintRelationsOutput) Many() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlueprintRelations) *bool { return v.Many }).(pulumi.BoolPtrOutput)
}

func (o BlueprintRelationsOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlueprintRelations) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

func (o BlueprintRelationsOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v BlueprintRelations) string { return v.Target }).(pulumi.StringOutput)
}

func (o BlueprintRelationsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BlueprintRelations) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type BlueprintRelationsMapOutput struct{ *pulumi.OutputState }

func (BlueprintRelationsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BlueprintRelations)(nil)).Elem()
}

func (o BlueprintRelationsMapOutput) ToBlueprintRelationsMapOutput() BlueprintRelationsMapOutput {
	return o
}

func (o BlueprintRelationsMapOutput) ToBlueprintRelationsMapOutputWithContext(ctx context.Context) BlueprintRelationsMapOutput {
	return o
}

func (o BlueprintRelationsMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]BlueprintRelations] {
	return pulumix.Output[map[string]BlueprintRelations]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintRelationsMapOutput) MapIndex(k pulumi.StringInput) BlueprintRelationsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BlueprintRelations {
		return vs[0].(map[string]BlueprintRelations)[vs[1].(string)]
	}).(BlueprintRelationsOutput)
}

type BlueprintTeamInheritance struct {
	Path string `pulumi:"path"`
}

// BlueprintTeamInheritanceInput is an input type that accepts BlueprintTeamInheritanceArgs and BlueprintTeamInheritanceOutput values.
// You can construct a concrete instance of `BlueprintTeamInheritanceInput` via:
//
//	BlueprintTeamInheritanceArgs{...}
type BlueprintTeamInheritanceInput interface {
	pulumi.Input

	ToBlueprintTeamInheritanceOutput() BlueprintTeamInheritanceOutput
	ToBlueprintTeamInheritanceOutputWithContext(context.Context) BlueprintTeamInheritanceOutput
}

type BlueprintTeamInheritanceArgs struct {
	Path pulumi.StringInput `pulumi:"path"`
}

func (BlueprintTeamInheritanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintTeamInheritance)(nil)).Elem()
}

func (i BlueprintTeamInheritanceArgs) ToBlueprintTeamInheritanceOutput() BlueprintTeamInheritanceOutput {
	return i.ToBlueprintTeamInheritanceOutputWithContext(context.Background())
}

func (i BlueprintTeamInheritanceArgs) ToBlueprintTeamInheritanceOutputWithContext(ctx context.Context) BlueprintTeamInheritanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintTeamInheritanceOutput)
}

func (i BlueprintTeamInheritanceArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintTeamInheritance] {
	return pulumix.Output[BlueprintTeamInheritance]{
		OutputState: i.ToBlueprintTeamInheritanceOutputWithContext(ctx).OutputState,
	}
}

func (i BlueprintTeamInheritanceArgs) ToBlueprintTeamInheritancePtrOutput() BlueprintTeamInheritancePtrOutput {
	return i.ToBlueprintTeamInheritancePtrOutputWithContext(context.Background())
}

func (i BlueprintTeamInheritanceArgs) ToBlueprintTeamInheritancePtrOutputWithContext(ctx context.Context) BlueprintTeamInheritancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintTeamInheritanceOutput).ToBlueprintTeamInheritancePtrOutputWithContext(ctx)
}

// BlueprintTeamInheritancePtrInput is an input type that accepts BlueprintTeamInheritanceArgs, BlueprintTeamInheritancePtr and BlueprintTeamInheritancePtrOutput values.
// You can construct a concrete instance of `BlueprintTeamInheritancePtrInput` via:
//
//	        BlueprintTeamInheritanceArgs{...}
//
//	or:
//
//	        nil
type BlueprintTeamInheritancePtrInput interface {
	pulumi.Input

	ToBlueprintTeamInheritancePtrOutput() BlueprintTeamInheritancePtrOutput
	ToBlueprintTeamInheritancePtrOutputWithContext(context.Context) BlueprintTeamInheritancePtrOutput
}

type blueprintTeamInheritancePtrType BlueprintTeamInheritanceArgs

func BlueprintTeamInheritancePtr(v *BlueprintTeamInheritanceArgs) BlueprintTeamInheritancePtrInput {
	return (*blueprintTeamInheritancePtrType)(v)
}

func (*blueprintTeamInheritancePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintTeamInheritance)(nil)).Elem()
}

func (i *blueprintTeamInheritancePtrType) ToBlueprintTeamInheritancePtrOutput() BlueprintTeamInheritancePtrOutput {
	return i.ToBlueprintTeamInheritancePtrOutputWithContext(context.Background())
}

func (i *blueprintTeamInheritancePtrType) ToBlueprintTeamInheritancePtrOutputWithContext(ctx context.Context) BlueprintTeamInheritancePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintTeamInheritancePtrOutput)
}

func (i *blueprintTeamInheritancePtrType) ToOutput(ctx context.Context) pulumix.Output[*BlueprintTeamInheritance] {
	return pulumix.Output[*BlueprintTeamInheritance]{
		OutputState: i.ToBlueprintTeamInheritancePtrOutputWithContext(ctx).OutputState,
	}
}

type BlueprintTeamInheritanceOutput struct{ *pulumi.OutputState }

func (BlueprintTeamInheritanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintTeamInheritance)(nil)).Elem()
}

func (o BlueprintTeamInheritanceOutput) ToBlueprintTeamInheritanceOutput() BlueprintTeamInheritanceOutput {
	return o
}

func (o BlueprintTeamInheritanceOutput) ToBlueprintTeamInheritanceOutputWithContext(ctx context.Context) BlueprintTeamInheritanceOutput {
	return o
}

func (o BlueprintTeamInheritanceOutput) ToBlueprintTeamInheritancePtrOutput() BlueprintTeamInheritancePtrOutput {
	return o.ToBlueprintTeamInheritancePtrOutputWithContext(context.Background())
}

func (o BlueprintTeamInheritanceOutput) ToBlueprintTeamInheritancePtrOutputWithContext(ctx context.Context) BlueprintTeamInheritancePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlueprintTeamInheritance) *BlueprintTeamInheritance {
		return &v
	}).(BlueprintTeamInheritancePtrOutput)
}

func (o BlueprintTeamInheritanceOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintTeamInheritance] {
	return pulumix.Output[BlueprintTeamInheritance]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintTeamInheritanceOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v BlueprintTeamInheritance) string { return v.Path }).(pulumi.StringOutput)
}

type BlueprintTeamInheritancePtrOutput struct{ *pulumi.OutputState }

func (BlueprintTeamInheritancePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintTeamInheritance)(nil)).Elem()
}

func (o BlueprintTeamInheritancePtrOutput) ToBlueprintTeamInheritancePtrOutput() BlueprintTeamInheritancePtrOutput {
	return o
}

func (o BlueprintTeamInheritancePtrOutput) ToBlueprintTeamInheritancePtrOutputWithContext(ctx context.Context) BlueprintTeamInheritancePtrOutput {
	return o
}

func (o BlueprintTeamInheritancePtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BlueprintTeamInheritance] {
	return pulumix.Output[*BlueprintTeamInheritance]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintTeamInheritancePtrOutput) Elem() BlueprintTeamInheritanceOutput {
	return o.ApplyT(func(v *BlueprintTeamInheritance) BlueprintTeamInheritance {
		if v != nil {
			return *v
		}
		var ret BlueprintTeamInheritance
		return ret
	}).(BlueprintTeamInheritanceOutput)
}

func (o BlueprintTeamInheritancePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlueprintTeamInheritance) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

type BlueprintWebhookChangelogDestination struct {
	Agent *bool  `pulumi:"agent"`
	Url   string `pulumi:"url"`
}

// BlueprintWebhookChangelogDestinationInput is an input type that accepts BlueprintWebhookChangelogDestinationArgs and BlueprintWebhookChangelogDestinationOutput values.
// You can construct a concrete instance of `BlueprintWebhookChangelogDestinationInput` via:
//
//	BlueprintWebhookChangelogDestinationArgs{...}
type BlueprintWebhookChangelogDestinationInput interface {
	pulumi.Input

	ToBlueprintWebhookChangelogDestinationOutput() BlueprintWebhookChangelogDestinationOutput
	ToBlueprintWebhookChangelogDestinationOutputWithContext(context.Context) BlueprintWebhookChangelogDestinationOutput
}

type BlueprintWebhookChangelogDestinationArgs struct {
	Agent pulumi.BoolPtrInput `pulumi:"agent"`
	Url   pulumi.StringInput  `pulumi:"url"`
}

func (BlueprintWebhookChangelogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintWebhookChangelogDestination)(nil)).Elem()
}

func (i BlueprintWebhookChangelogDestinationArgs) ToBlueprintWebhookChangelogDestinationOutput() BlueprintWebhookChangelogDestinationOutput {
	return i.ToBlueprintWebhookChangelogDestinationOutputWithContext(context.Background())
}

func (i BlueprintWebhookChangelogDestinationArgs) ToBlueprintWebhookChangelogDestinationOutputWithContext(ctx context.Context) BlueprintWebhookChangelogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintWebhookChangelogDestinationOutput)
}

func (i BlueprintWebhookChangelogDestinationArgs) ToOutput(ctx context.Context) pulumix.Output[BlueprintWebhookChangelogDestination] {
	return pulumix.Output[BlueprintWebhookChangelogDestination]{
		OutputState: i.ToBlueprintWebhookChangelogDestinationOutputWithContext(ctx).OutputState,
	}
}

func (i BlueprintWebhookChangelogDestinationArgs) ToBlueprintWebhookChangelogDestinationPtrOutput() BlueprintWebhookChangelogDestinationPtrOutput {
	return i.ToBlueprintWebhookChangelogDestinationPtrOutputWithContext(context.Background())
}

func (i BlueprintWebhookChangelogDestinationArgs) ToBlueprintWebhookChangelogDestinationPtrOutputWithContext(ctx context.Context) BlueprintWebhookChangelogDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintWebhookChangelogDestinationOutput).ToBlueprintWebhookChangelogDestinationPtrOutputWithContext(ctx)
}

// BlueprintWebhookChangelogDestinationPtrInput is an input type that accepts BlueprintWebhookChangelogDestinationArgs, BlueprintWebhookChangelogDestinationPtr and BlueprintWebhookChangelogDestinationPtrOutput values.
// You can construct a concrete instance of `BlueprintWebhookChangelogDestinationPtrInput` via:
//
//	        BlueprintWebhookChangelogDestinationArgs{...}
//
//	or:
//
//	        nil
type BlueprintWebhookChangelogDestinationPtrInput interface {
	pulumi.Input

	ToBlueprintWebhookChangelogDestinationPtrOutput() BlueprintWebhookChangelogDestinationPtrOutput
	ToBlueprintWebhookChangelogDestinationPtrOutputWithContext(context.Context) BlueprintWebhookChangelogDestinationPtrOutput
}

type blueprintWebhookChangelogDestinationPtrType BlueprintWebhookChangelogDestinationArgs

func BlueprintWebhookChangelogDestinationPtr(v *BlueprintWebhookChangelogDestinationArgs) BlueprintWebhookChangelogDestinationPtrInput {
	return (*blueprintWebhookChangelogDestinationPtrType)(v)
}

func (*blueprintWebhookChangelogDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintWebhookChangelogDestination)(nil)).Elem()
}

func (i *blueprintWebhookChangelogDestinationPtrType) ToBlueprintWebhookChangelogDestinationPtrOutput() BlueprintWebhookChangelogDestinationPtrOutput {
	return i.ToBlueprintWebhookChangelogDestinationPtrOutputWithContext(context.Background())
}

func (i *blueprintWebhookChangelogDestinationPtrType) ToBlueprintWebhookChangelogDestinationPtrOutputWithContext(ctx context.Context) BlueprintWebhookChangelogDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BlueprintWebhookChangelogDestinationPtrOutput)
}

func (i *blueprintWebhookChangelogDestinationPtrType) ToOutput(ctx context.Context) pulumix.Output[*BlueprintWebhookChangelogDestination] {
	return pulumix.Output[*BlueprintWebhookChangelogDestination]{
		OutputState: i.ToBlueprintWebhookChangelogDestinationPtrOutputWithContext(ctx).OutputState,
	}
}

type BlueprintWebhookChangelogDestinationOutput struct{ *pulumi.OutputState }

func (BlueprintWebhookChangelogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BlueprintWebhookChangelogDestination)(nil)).Elem()
}

func (o BlueprintWebhookChangelogDestinationOutput) ToBlueprintWebhookChangelogDestinationOutput() BlueprintWebhookChangelogDestinationOutput {
	return o
}

func (o BlueprintWebhookChangelogDestinationOutput) ToBlueprintWebhookChangelogDestinationOutputWithContext(ctx context.Context) BlueprintWebhookChangelogDestinationOutput {
	return o
}

func (o BlueprintWebhookChangelogDestinationOutput) ToBlueprintWebhookChangelogDestinationPtrOutput() BlueprintWebhookChangelogDestinationPtrOutput {
	return o.ToBlueprintWebhookChangelogDestinationPtrOutputWithContext(context.Background())
}

func (o BlueprintWebhookChangelogDestinationOutput) ToBlueprintWebhookChangelogDestinationPtrOutputWithContext(ctx context.Context) BlueprintWebhookChangelogDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BlueprintWebhookChangelogDestination) *BlueprintWebhookChangelogDestination {
		return &v
	}).(BlueprintWebhookChangelogDestinationPtrOutput)
}

func (o BlueprintWebhookChangelogDestinationOutput) ToOutput(ctx context.Context) pulumix.Output[BlueprintWebhookChangelogDestination] {
	return pulumix.Output[BlueprintWebhookChangelogDestination]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintWebhookChangelogDestinationOutput) Agent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BlueprintWebhookChangelogDestination) *bool { return v.Agent }).(pulumi.BoolPtrOutput)
}

func (o BlueprintWebhookChangelogDestinationOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v BlueprintWebhookChangelogDestination) string { return v.Url }).(pulumi.StringOutput)
}

type BlueprintWebhookChangelogDestinationPtrOutput struct{ *pulumi.OutputState }

func (BlueprintWebhookChangelogDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BlueprintWebhookChangelogDestination)(nil)).Elem()
}

func (o BlueprintWebhookChangelogDestinationPtrOutput) ToBlueprintWebhookChangelogDestinationPtrOutput() BlueprintWebhookChangelogDestinationPtrOutput {
	return o
}

func (o BlueprintWebhookChangelogDestinationPtrOutput) ToBlueprintWebhookChangelogDestinationPtrOutputWithContext(ctx context.Context) BlueprintWebhookChangelogDestinationPtrOutput {
	return o
}

func (o BlueprintWebhookChangelogDestinationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*BlueprintWebhookChangelogDestination] {
	return pulumix.Output[*BlueprintWebhookChangelogDestination]{
		OutputState: o.OutputState,
	}
}

func (o BlueprintWebhookChangelogDestinationPtrOutput) Elem() BlueprintWebhookChangelogDestinationOutput {
	return o.ApplyT(func(v *BlueprintWebhookChangelogDestination) BlueprintWebhookChangelogDestination {
		if v != nil {
			return *v
		}
		var ret BlueprintWebhookChangelogDestination
		return ret
	}).(BlueprintWebhookChangelogDestinationOutput)
}

func (o BlueprintWebhookChangelogDestinationPtrOutput) Agent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BlueprintWebhookChangelogDestination) *bool {
		if v == nil {
			return nil
		}
		return v.Agent
	}).(pulumi.BoolPtrOutput)
}

func (o BlueprintWebhookChangelogDestinationPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BlueprintWebhookChangelogDestination) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type EntityProperties struct {
	ArrayProps   *EntityPropertiesArrayProps `pulumi:"arrayProps"`
	BooleanProps map[string]bool             `pulumi:"booleanProps"`
	NumberProps  map[string]float64          `pulumi:"numberProps"`
	ObjectProps  map[string]string           `pulumi:"objectProps"`
	StringProps  map[string]string           `pulumi:"stringProps"`
}

// EntityPropertiesInput is an input type that accepts EntityPropertiesArgs and EntityPropertiesOutput values.
// You can construct a concrete instance of `EntityPropertiesInput` via:
//
//	EntityPropertiesArgs{...}
type EntityPropertiesInput interface {
	pulumi.Input

	ToEntityPropertiesOutput() EntityPropertiesOutput
	ToEntityPropertiesOutputWithContext(context.Context) EntityPropertiesOutput
}

type EntityPropertiesArgs struct {
	ArrayProps   EntityPropertiesArrayPropsPtrInput `pulumi:"arrayProps"`
	BooleanProps pulumi.BoolMapInput                `pulumi:"booleanProps"`
	NumberProps  pulumi.Float64MapInput             `pulumi:"numberProps"`
	ObjectProps  pulumi.StringMapInput              `pulumi:"objectProps"`
	StringProps  pulumi.StringMapInput              `pulumi:"stringProps"`
}

func (EntityPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityProperties)(nil)).Elem()
}

func (i EntityPropertiesArgs) ToEntityPropertiesOutput() EntityPropertiesOutput {
	return i.ToEntityPropertiesOutputWithContext(context.Background())
}

func (i EntityPropertiesArgs) ToEntityPropertiesOutputWithContext(ctx context.Context) EntityPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityPropertiesOutput)
}

func (i EntityPropertiesArgs) ToOutput(ctx context.Context) pulumix.Output[EntityProperties] {
	return pulumix.Output[EntityProperties]{
		OutputState: i.ToEntityPropertiesOutputWithContext(ctx).OutputState,
	}
}

func (i EntityPropertiesArgs) ToEntityPropertiesPtrOutput() EntityPropertiesPtrOutput {
	return i.ToEntityPropertiesPtrOutputWithContext(context.Background())
}

func (i EntityPropertiesArgs) ToEntityPropertiesPtrOutputWithContext(ctx context.Context) EntityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityPropertiesOutput).ToEntityPropertiesPtrOutputWithContext(ctx)
}

// EntityPropertiesPtrInput is an input type that accepts EntityPropertiesArgs, EntityPropertiesPtr and EntityPropertiesPtrOutput values.
// You can construct a concrete instance of `EntityPropertiesPtrInput` via:
//
//	        EntityPropertiesArgs{...}
//
//	or:
//
//	        nil
type EntityPropertiesPtrInput interface {
	pulumi.Input

	ToEntityPropertiesPtrOutput() EntityPropertiesPtrOutput
	ToEntityPropertiesPtrOutputWithContext(context.Context) EntityPropertiesPtrOutput
}

type entityPropertiesPtrType EntityPropertiesArgs

func EntityPropertiesPtr(v *EntityPropertiesArgs) EntityPropertiesPtrInput {
	return (*entityPropertiesPtrType)(v)
}

func (*entityPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityProperties)(nil)).Elem()
}

func (i *entityPropertiesPtrType) ToEntityPropertiesPtrOutput() EntityPropertiesPtrOutput {
	return i.ToEntityPropertiesPtrOutputWithContext(context.Background())
}

func (i *entityPropertiesPtrType) ToEntityPropertiesPtrOutputWithContext(ctx context.Context) EntityPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityPropertiesPtrOutput)
}

func (i *entityPropertiesPtrType) ToOutput(ctx context.Context) pulumix.Output[*EntityProperties] {
	return pulumix.Output[*EntityProperties]{
		OutputState: i.ToEntityPropertiesPtrOutputWithContext(ctx).OutputState,
	}
}

type EntityPropertiesOutput struct{ *pulumi.OutputState }

func (EntityPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityProperties)(nil)).Elem()
}

func (o EntityPropertiesOutput) ToEntityPropertiesOutput() EntityPropertiesOutput {
	return o
}

func (o EntityPropertiesOutput) ToEntityPropertiesOutputWithContext(ctx context.Context) EntityPropertiesOutput {
	return o
}

func (o EntityPropertiesOutput) ToEntityPropertiesPtrOutput() EntityPropertiesPtrOutput {
	return o.ToEntityPropertiesPtrOutputWithContext(context.Background())
}

func (o EntityPropertiesOutput) ToEntityPropertiesPtrOutputWithContext(ctx context.Context) EntityPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityProperties) *EntityProperties {
		return &v
	}).(EntityPropertiesPtrOutput)
}

func (o EntityPropertiesOutput) ToOutput(ctx context.Context) pulumix.Output[EntityProperties] {
	return pulumix.Output[EntityProperties]{
		OutputState: o.OutputState,
	}
}

func (o EntityPropertiesOutput) ArrayProps() EntityPropertiesArrayPropsPtrOutput {
	return o.ApplyT(func(v EntityProperties) *EntityPropertiesArrayProps { return v.ArrayProps }).(EntityPropertiesArrayPropsPtrOutput)
}

func (o EntityPropertiesOutput) BooleanProps() pulumi.BoolMapOutput {
	return o.ApplyT(func(v EntityProperties) map[string]bool { return v.BooleanProps }).(pulumi.BoolMapOutput)
}

func (o EntityPropertiesOutput) NumberProps() pulumi.Float64MapOutput {
	return o.ApplyT(func(v EntityProperties) map[string]float64 { return v.NumberProps }).(pulumi.Float64MapOutput)
}

func (o EntityPropertiesOutput) ObjectProps() pulumi.StringMapOutput {
	return o.ApplyT(func(v EntityProperties) map[string]string { return v.ObjectProps }).(pulumi.StringMapOutput)
}

func (o EntityPropertiesOutput) StringProps() pulumi.StringMapOutput {
	return o.ApplyT(func(v EntityProperties) map[string]string { return v.StringProps }).(pulumi.StringMapOutput)
}

type EntityPropertiesPtrOutput struct{ *pulumi.OutputState }

func (EntityPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityProperties)(nil)).Elem()
}

func (o EntityPropertiesPtrOutput) ToEntityPropertiesPtrOutput() EntityPropertiesPtrOutput {
	return o
}

func (o EntityPropertiesPtrOutput) ToEntityPropertiesPtrOutputWithContext(ctx context.Context) EntityPropertiesPtrOutput {
	return o
}

func (o EntityPropertiesPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EntityProperties] {
	return pulumix.Output[*EntityProperties]{
		OutputState: o.OutputState,
	}
}

func (o EntityPropertiesPtrOutput) Elem() EntityPropertiesOutput {
	return o.ApplyT(func(v *EntityProperties) EntityProperties {
		if v != nil {
			return *v
		}
		var ret EntityProperties
		return ret
	}).(EntityPropertiesOutput)
}

func (o EntityPropertiesPtrOutput) ArrayProps() EntityPropertiesArrayPropsPtrOutput {
	return o.ApplyT(func(v *EntityProperties) *EntityPropertiesArrayProps {
		if v == nil {
			return nil
		}
		return v.ArrayProps
	}).(EntityPropertiesArrayPropsPtrOutput)
}

func (o EntityPropertiesPtrOutput) BooleanProps() pulumi.BoolMapOutput {
	return o.ApplyT(func(v *EntityProperties) map[string]bool {
		if v == nil {
			return nil
		}
		return v.BooleanProps
	}).(pulumi.BoolMapOutput)
}

func (o EntityPropertiesPtrOutput) NumberProps() pulumi.Float64MapOutput {
	return o.ApplyT(func(v *EntityProperties) map[string]float64 {
		if v == nil {
			return nil
		}
		return v.NumberProps
	}).(pulumi.Float64MapOutput)
}

func (o EntityPropertiesPtrOutput) ObjectProps() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EntityProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.ObjectProps
	}).(pulumi.StringMapOutput)
}

func (o EntityPropertiesPtrOutput) StringProps() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EntityProperties) map[string]string {
		if v == nil {
			return nil
		}
		return v.StringProps
	}).(pulumi.StringMapOutput)
}

type EntityPropertiesArrayProps struct {
	BooleanItems map[string][]bool    `pulumi:"booleanItems"`
	NumberItems  map[string][]float64 `pulumi:"numberItems"`
	ObjectItems  map[string][]string  `pulumi:"objectItems"`
	StringItems  map[string][]string  `pulumi:"stringItems"`
}

// EntityPropertiesArrayPropsInput is an input type that accepts EntityPropertiesArrayPropsArgs and EntityPropertiesArrayPropsOutput values.
// You can construct a concrete instance of `EntityPropertiesArrayPropsInput` via:
//
//	EntityPropertiesArrayPropsArgs{...}
type EntityPropertiesArrayPropsInput interface {
	pulumi.Input

	ToEntityPropertiesArrayPropsOutput() EntityPropertiesArrayPropsOutput
	ToEntityPropertiesArrayPropsOutputWithContext(context.Context) EntityPropertiesArrayPropsOutput
}

type EntityPropertiesArrayPropsArgs struct {
	BooleanItems pulumi.BoolArrayMapInput    `pulumi:"booleanItems"`
	NumberItems  pulumi.Float64ArrayMapInput `pulumi:"numberItems"`
	ObjectItems  pulumi.StringArrayMapInput  `pulumi:"objectItems"`
	StringItems  pulumi.StringArrayMapInput  `pulumi:"stringItems"`
}

func (EntityPropertiesArrayPropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityPropertiesArrayProps)(nil)).Elem()
}

func (i EntityPropertiesArrayPropsArgs) ToEntityPropertiesArrayPropsOutput() EntityPropertiesArrayPropsOutput {
	return i.ToEntityPropertiesArrayPropsOutputWithContext(context.Background())
}

func (i EntityPropertiesArrayPropsArgs) ToEntityPropertiesArrayPropsOutputWithContext(ctx context.Context) EntityPropertiesArrayPropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityPropertiesArrayPropsOutput)
}

func (i EntityPropertiesArrayPropsArgs) ToOutput(ctx context.Context) pulumix.Output[EntityPropertiesArrayProps] {
	return pulumix.Output[EntityPropertiesArrayProps]{
		OutputState: i.ToEntityPropertiesArrayPropsOutputWithContext(ctx).OutputState,
	}
}

func (i EntityPropertiesArrayPropsArgs) ToEntityPropertiesArrayPropsPtrOutput() EntityPropertiesArrayPropsPtrOutput {
	return i.ToEntityPropertiesArrayPropsPtrOutputWithContext(context.Background())
}

func (i EntityPropertiesArrayPropsArgs) ToEntityPropertiesArrayPropsPtrOutputWithContext(ctx context.Context) EntityPropertiesArrayPropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityPropertiesArrayPropsOutput).ToEntityPropertiesArrayPropsPtrOutputWithContext(ctx)
}

// EntityPropertiesArrayPropsPtrInput is an input type that accepts EntityPropertiesArrayPropsArgs, EntityPropertiesArrayPropsPtr and EntityPropertiesArrayPropsPtrOutput values.
// You can construct a concrete instance of `EntityPropertiesArrayPropsPtrInput` via:
//
//	        EntityPropertiesArrayPropsArgs{...}
//
//	or:
//
//	        nil
type EntityPropertiesArrayPropsPtrInput interface {
	pulumi.Input

	ToEntityPropertiesArrayPropsPtrOutput() EntityPropertiesArrayPropsPtrOutput
	ToEntityPropertiesArrayPropsPtrOutputWithContext(context.Context) EntityPropertiesArrayPropsPtrOutput
}

type entityPropertiesArrayPropsPtrType EntityPropertiesArrayPropsArgs

func EntityPropertiesArrayPropsPtr(v *EntityPropertiesArrayPropsArgs) EntityPropertiesArrayPropsPtrInput {
	return (*entityPropertiesArrayPropsPtrType)(v)
}

func (*entityPropertiesArrayPropsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityPropertiesArrayProps)(nil)).Elem()
}

func (i *entityPropertiesArrayPropsPtrType) ToEntityPropertiesArrayPropsPtrOutput() EntityPropertiesArrayPropsPtrOutput {
	return i.ToEntityPropertiesArrayPropsPtrOutputWithContext(context.Background())
}

func (i *entityPropertiesArrayPropsPtrType) ToEntityPropertiesArrayPropsPtrOutputWithContext(ctx context.Context) EntityPropertiesArrayPropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityPropertiesArrayPropsPtrOutput)
}

func (i *entityPropertiesArrayPropsPtrType) ToOutput(ctx context.Context) pulumix.Output[*EntityPropertiesArrayProps] {
	return pulumix.Output[*EntityPropertiesArrayProps]{
		OutputState: i.ToEntityPropertiesArrayPropsPtrOutputWithContext(ctx).OutputState,
	}
}

type EntityPropertiesArrayPropsOutput struct{ *pulumi.OutputState }

func (EntityPropertiesArrayPropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityPropertiesArrayProps)(nil)).Elem()
}

func (o EntityPropertiesArrayPropsOutput) ToEntityPropertiesArrayPropsOutput() EntityPropertiesArrayPropsOutput {
	return o
}

func (o EntityPropertiesArrayPropsOutput) ToEntityPropertiesArrayPropsOutputWithContext(ctx context.Context) EntityPropertiesArrayPropsOutput {
	return o
}

func (o EntityPropertiesArrayPropsOutput) ToEntityPropertiesArrayPropsPtrOutput() EntityPropertiesArrayPropsPtrOutput {
	return o.ToEntityPropertiesArrayPropsPtrOutputWithContext(context.Background())
}

func (o EntityPropertiesArrayPropsOutput) ToEntityPropertiesArrayPropsPtrOutputWithContext(ctx context.Context) EntityPropertiesArrayPropsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityPropertiesArrayProps) *EntityPropertiesArrayProps {
		return &v
	}).(EntityPropertiesArrayPropsPtrOutput)
}

func (o EntityPropertiesArrayPropsOutput) ToOutput(ctx context.Context) pulumix.Output[EntityPropertiesArrayProps] {
	return pulumix.Output[EntityPropertiesArrayProps]{
		OutputState: o.OutputState,
	}
}

func (o EntityPropertiesArrayPropsOutput) BooleanItems() pulumi.BoolArrayMapOutput {
	return o.ApplyT(func(v EntityPropertiesArrayProps) map[string][]bool { return v.BooleanItems }).(pulumi.BoolArrayMapOutput)
}

func (o EntityPropertiesArrayPropsOutput) NumberItems() pulumi.Float64ArrayMapOutput {
	return o.ApplyT(func(v EntityPropertiesArrayProps) map[string][]float64 { return v.NumberItems }).(pulumi.Float64ArrayMapOutput)
}

func (o EntityPropertiesArrayPropsOutput) ObjectItems() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v EntityPropertiesArrayProps) map[string][]string { return v.ObjectItems }).(pulumi.StringArrayMapOutput)
}

func (o EntityPropertiesArrayPropsOutput) StringItems() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v EntityPropertiesArrayProps) map[string][]string { return v.StringItems }).(pulumi.StringArrayMapOutput)
}

type EntityPropertiesArrayPropsPtrOutput struct{ *pulumi.OutputState }

func (EntityPropertiesArrayPropsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityPropertiesArrayProps)(nil)).Elem()
}

func (o EntityPropertiesArrayPropsPtrOutput) ToEntityPropertiesArrayPropsPtrOutput() EntityPropertiesArrayPropsPtrOutput {
	return o
}

func (o EntityPropertiesArrayPropsPtrOutput) ToEntityPropertiesArrayPropsPtrOutputWithContext(ctx context.Context) EntityPropertiesArrayPropsPtrOutput {
	return o
}

func (o EntityPropertiesArrayPropsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EntityPropertiesArrayProps] {
	return pulumix.Output[*EntityPropertiesArrayProps]{
		OutputState: o.OutputState,
	}
}

func (o EntityPropertiesArrayPropsPtrOutput) Elem() EntityPropertiesArrayPropsOutput {
	return o.ApplyT(func(v *EntityPropertiesArrayProps) EntityPropertiesArrayProps {
		if v != nil {
			return *v
		}
		var ret EntityPropertiesArrayProps
		return ret
	}).(EntityPropertiesArrayPropsOutput)
}

func (o EntityPropertiesArrayPropsPtrOutput) BooleanItems() pulumi.BoolArrayMapOutput {
	return o.ApplyT(func(v *EntityPropertiesArrayProps) map[string][]bool {
		if v == nil {
			return nil
		}
		return v.BooleanItems
	}).(pulumi.BoolArrayMapOutput)
}

func (o EntityPropertiesArrayPropsPtrOutput) NumberItems() pulumi.Float64ArrayMapOutput {
	return o.ApplyT(func(v *EntityPropertiesArrayProps) map[string][]float64 {
		if v == nil {
			return nil
		}
		return v.NumberItems
	}).(pulumi.Float64ArrayMapOutput)
}

func (o EntityPropertiesArrayPropsPtrOutput) ObjectItems() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *EntityPropertiesArrayProps) map[string][]string {
		if v == nil {
			return nil
		}
		return v.ObjectItems
	}).(pulumi.StringArrayMapOutput)
}

func (o EntityPropertiesArrayPropsPtrOutput) StringItems() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *EntityPropertiesArrayProps) map[string][]string {
		if v == nil {
			return nil
		}
		return v.StringItems
	}).(pulumi.StringArrayMapOutput)
}

type EntityRelations struct {
	ManyRelations   map[string][]string `pulumi:"manyRelations"`
	SingleRelations map[string]string   `pulumi:"singleRelations"`
}

// EntityRelationsInput is an input type that accepts EntityRelationsArgs and EntityRelationsOutput values.
// You can construct a concrete instance of `EntityRelationsInput` via:
//
//	EntityRelationsArgs{...}
type EntityRelationsInput interface {
	pulumi.Input

	ToEntityRelationsOutput() EntityRelationsOutput
	ToEntityRelationsOutputWithContext(context.Context) EntityRelationsOutput
}

type EntityRelationsArgs struct {
	ManyRelations   pulumi.StringArrayMapInput `pulumi:"manyRelations"`
	SingleRelations pulumi.StringMapInput      `pulumi:"singleRelations"`
}

func (EntityRelationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRelations)(nil)).Elem()
}

func (i EntityRelationsArgs) ToEntityRelationsOutput() EntityRelationsOutput {
	return i.ToEntityRelationsOutputWithContext(context.Background())
}

func (i EntityRelationsArgs) ToEntityRelationsOutputWithContext(ctx context.Context) EntityRelationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRelationsOutput)
}

func (i EntityRelationsArgs) ToOutput(ctx context.Context) pulumix.Output[EntityRelations] {
	return pulumix.Output[EntityRelations]{
		OutputState: i.ToEntityRelationsOutputWithContext(ctx).OutputState,
	}
}

func (i EntityRelationsArgs) ToEntityRelationsPtrOutput() EntityRelationsPtrOutput {
	return i.ToEntityRelationsPtrOutputWithContext(context.Background())
}

func (i EntityRelationsArgs) ToEntityRelationsPtrOutputWithContext(ctx context.Context) EntityRelationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRelationsOutput).ToEntityRelationsPtrOutputWithContext(ctx)
}

// EntityRelationsPtrInput is an input type that accepts EntityRelationsArgs, EntityRelationsPtr and EntityRelationsPtrOutput values.
// You can construct a concrete instance of `EntityRelationsPtrInput` via:
//
//	        EntityRelationsArgs{...}
//
//	or:
//
//	        nil
type EntityRelationsPtrInput interface {
	pulumi.Input

	ToEntityRelationsPtrOutput() EntityRelationsPtrOutput
	ToEntityRelationsPtrOutputWithContext(context.Context) EntityRelationsPtrOutput
}

type entityRelationsPtrType EntityRelationsArgs

func EntityRelationsPtr(v *EntityRelationsArgs) EntityRelationsPtrInput {
	return (*entityRelationsPtrType)(v)
}

func (*entityRelationsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityRelations)(nil)).Elem()
}

func (i *entityRelationsPtrType) ToEntityRelationsPtrOutput() EntityRelationsPtrOutput {
	return i.ToEntityRelationsPtrOutputWithContext(context.Background())
}

func (i *entityRelationsPtrType) ToEntityRelationsPtrOutputWithContext(ctx context.Context) EntityRelationsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityRelationsPtrOutput)
}

func (i *entityRelationsPtrType) ToOutput(ctx context.Context) pulumix.Output[*EntityRelations] {
	return pulumix.Output[*EntityRelations]{
		OutputState: i.ToEntityRelationsPtrOutputWithContext(ctx).OutputState,
	}
}

type EntityRelationsOutput struct{ *pulumi.OutputState }

func (EntityRelationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityRelations)(nil)).Elem()
}

func (o EntityRelationsOutput) ToEntityRelationsOutput() EntityRelationsOutput {
	return o
}

func (o EntityRelationsOutput) ToEntityRelationsOutputWithContext(ctx context.Context) EntityRelationsOutput {
	return o
}

func (o EntityRelationsOutput) ToEntityRelationsPtrOutput() EntityRelationsPtrOutput {
	return o.ToEntityRelationsPtrOutputWithContext(context.Background())
}

func (o EntityRelationsOutput) ToEntityRelationsPtrOutputWithContext(ctx context.Context) EntityRelationsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EntityRelations) *EntityRelations {
		return &v
	}).(EntityRelationsPtrOutput)
}

func (o EntityRelationsOutput) ToOutput(ctx context.Context) pulumix.Output[EntityRelations] {
	return pulumix.Output[EntityRelations]{
		OutputState: o.OutputState,
	}
}

func (o EntityRelationsOutput) ManyRelations() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v EntityRelations) map[string][]string { return v.ManyRelations }).(pulumi.StringArrayMapOutput)
}

func (o EntityRelationsOutput) SingleRelations() pulumi.StringMapOutput {
	return o.ApplyT(func(v EntityRelations) map[string]string { return v.SingleRelations }).(pulumi.StringMapOutput)
}

type EntityRelationsPtrOutput struct{ *pulumi.OutputState }

func (EntityRelationsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EntityRelations)(nil)).Elem()
}

func (o EntityRelationsPtrOutput) ToEntityRelationsPtrOutput() EntityRelationsPtrOutput {
	return o
}

func (o EntityRelationsPtrOutput) ToEntityRelationsPtrOutputWithContext(ctx context.Context) EntityRelationsPtrOutput {
	return o
}

func (o EntityRelationsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*EntityRelations] {
	return pulumix.Output[*EntityRelations]{
		OutputState: o.OutputState,
	}
}

func (o EntityRelationsPtrOutput) Elem() EntityRelationsOutput {
	return o.ApplyT(func(v *EntityRelations) EntityRelations {
		if v != nil {
			return *v
		}
		var ret EntityRelations
		return ret
	}).(EntityRelationsOutput)
}

func (o EntityRelationsPtrOutput) ManyRelations() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *EntityRelations) map[string][]string {
		if v == nil {
			return nil
		}
		return v.ManyRelations
	}).(pulumi.StringArrayMapOutput)
}

func (o EntityRelationsPtrOutput) SingleRelations() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EntityRelations) map[string]string {
		if v == nil {
			return nil
		}
		return v.SingleRelations
	}).(pulumi.StringMapOutput)
}

type ScorecardRule struct {
	Identifier string             `pulumi:"identifier"`
	Level      string             `pulumi:"level"`
	Query      ScorecardRuleQuery `pulumi:"query"`
	Title      string             `pulumi:"title"`
}

// ScorecardRuleInput is an input type that accepts ScorecardRuleArgs and ScorecardRuleOutput values.
// You can construct a concrete instance of `ScorecardRuleInput` via:
//
//	ScorecardRuleArgs{...}
type ScorecardRuleInput interface {
	pulumi.Input

	ToScorecardRuleOutput() ScorecardRuleOutput
	ToScorecardRuleOutputWithContext(context.Context) ScorecardRuleOutput
}

type ScorecardRuleArgs struct {
	Identifier pulumi.StringInput      `pulumi:"identifier"`
	Level      pulumi.StringInput      `pulumi:"level"`
	Query      ScorecardRuleQueryInput `pulumi:"query"`
	Title      pulumi.StringInput      `pulumi:"title"`
}

func (ScorecardRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScorecardRule)(nil)).Elem()
}

func (i ScorecardRuleArgs) ToScorecardRuleOutput() ScorecardRuleOutput {
	return i.ToScorecardRuleOutputWithContext(context.Background())
}

func (i ScorecardRuleArgs) ToScorecardRuleOutputWithContext(ctx context.Context) ScorecardRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScorecardRuleOutput)
}

func (i ScorecardRuleArgs) ToOutput(ctx context.Context) pulumix.Output[ScorecardRule] {
	return pulumix.Output[ScorecardRule]{
		OutputState: i.ToScorecardRuleOutputWithContext(ctx).OutputState,
	}
}

// ScorecardRuleArrayInput is an input type that accepts ScorecardRuleArray and ScorecardRuleArrayOutput values.
// You can construct a concrete instance of `ScorecardRuleArrayInput` via:
//
//	ScorecardRuleArray{ ScorecardRuleArgs{...} }
type ScorecardRuleArrayInput interface {
	pulumi.Input

	ToScorecardRuleArrayOutput() ScorecardRuleArrayOutput
	ToScorecardRuleArrayOutputWithContext(context.Context) ScorecardRuleArrayOutput
}

type ScorecardRuleArray []ScorecardRuleInput

func (ScorecardRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScorecardRule)(nil)).Elem()
}

func (i ScorecardRuleArray) ToScorecardRuleArrayOutput() ScorecardRuleArrayOutput {
	return i.ToScorecardRuleArrayOutputWithContext(context.Background())
}

func (i ScorecardRuleArray) ToScorecardRuleArrayOutputWithContext(ctx context.Context) ScorecardRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScorecardRuleArrayOutput)
}

func (i ScorecardRuleArray) ToOutput(ctx context.Context) pulumix.Output[[]ScorecardRule] {
	return pulumix.Output[[]ScorecardRule]{
		OutputState: i.ToScorecardRuleArrayOutputWithContext(ctx).OutputState,
	}
}

type ScorecardRuleOutput struct{ *pulumi.OutputState }

func (ScorecardRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScorecardRule)(nil)).Elem()
}

func (o ScorecardRuleOutput) ToScorecardRuleOutput() ScorecardRuleOutput {
	return o
}

func (o ScorecardRuleOutput) ToScorecardRuleOutputWithContext(ctx context.Context) ScorecardRuleOutput {
	return o
}

func (o ScorecardRuleOutput) ToOutput(ctx context.Context) pulumix.Output[ScorecardRule] {
	return pulumix.Output[ScorecardRule]{
		OutputState: o.OutputState,
	}
}

func (o ScorecardRuleOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v ScorecardRule) string { return v.Identifier }).(pulumi.StringOutput)
}

func (o ScorecardRuleOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v ScorecardRule) string { return v.Level }).(pulumi.StringOutput)
}

func (o ScorecardRuleOutput) Query() ScorecardRuleQueryOutput {
	return o.ApplyT(func(v ScorecardRule) ScorecardRuleQuery { return v.Query }).(ScorecardRuleQueryOutput)
}

func (o ScorecardRuleOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v ScorecardRule) string { return v.Title }).(pulumi.StringOutput)
}

type ScorecardRuleArrayOutput struct{ *pulumi.OutputState }

func (ScorecardRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScorecardRule)(nil)).Elem()
}

func (o ScorecardRuleArrayOutput) ToScorecardRuleArrayOutput() ScorecardRuleArrayOutput {
	return o
}

func (o ScorecardRuleArrayOutput) ToScorecardRuleArrayOutputWithContext(ctx context.Context) ScorecardRuleArrayOutput {
	return o
}

func (o ScorecardRuleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ScorecardRule] {
	return pulumix.Output[[]ScorecardRule]{
		OutputState: o.OutputState,
	}
}

func (o ScorecardRuleArrayOutput) Index(i pulumi.IntInput) ScorecardRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScorecardRule {
		return vs[0].([]ScorecardRule)[vs[1].(int)]
	}).(ScorecardRuleOutput)
}

type ScorecardRuleQuery struct {
	Combinator string                        `pulumi:"combinator"`
	Conditions []ScorecardRuleQueryCondition `pulumi:"conditions"`
}

// ScorecardRuleQueryInput is an input type that accepts ScorecardRuleQueryArgs and ScorecardRuleQueryOutput values.
// You can construct a concrete instance of `ScorecardRuleQueryInput` via:
//
//	ScorecardRuleQueryArgs{...}
type ScorecardRuleQueryInput interface {
	pulumi.Input

	ToScorecardRuleQueryOutput() ScorecardRuleQueryOutput
	ToScorecardRuleQueryOutputWithContext(context.Context) ScorecardRuleQueryOutput
}

type ScorecardRuleQueryArgs struct {
	Combinator pulumi.StringInput                    `pulumi:"combinator"`
	Conditions ScorecardRuleQueryConditionArrayInput `pulumi:"conditions"`
}

func (ScorecardRuleQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScorecardRuleQuery)(nil)).Elem()
}

func (i ScorecardRuleQueryArgs) ToScorecardRuleQueryOutput() ScorecardRuleQueryOutput {
	return i.ToScorecardRuleQueryOutputWithContext(context.Background())
}

func (i ScorecardRuleQueryArgs) ToScorecardRuleQueryOutputWithContext(ctx context.Context) ScorecardRuleQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScorecardRuleQueryOutput)
}

func (i ScorecardRuleQueryArgs) ToOutput(ctx context.Context) pulumix.Output[ScorecardRuleQuery] {
	return pulumix.Output[ScorecardRuleQuery]{
		OutputState: i.ToScorecardRuleQueryOutputWithContext(ctx).OutputState,
	}
}

type ScorecardRuleQueryOutput struct{ *pulumi.OutputState }

func (ScorecardRuleQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScorecardRuleQuery)(nil)).Elem()
}

func (o ScorecardRuleQueryOutput) ToScorecardRuleQueryOutput() ScorecardRuleQueryOutput {
	return o
}

func (o ScorecardRuleQueryOutput) ToScorecardRuleQueryOutputWithContext(ctx context.Context) ScorecardRuleQueryOutput {
	return o
}

func (o ScorecardRuleQueryOutput) ToOutput(ctx context.Context) pulumix.Output[ScorecardRuleQuery] {
	return pulumix.Output[ScorecardRuleQuery]{
		OutputState: o.OutputState,
	}
}

func (o ScorecardRuleQueryOutput) Combinator() pulumi.StringOutput {
	return o.ApplyT(func(v ScorecardRuleQuery) string { return v.Combinator }).(pulumi.StringOutput)
}

func (o ScorecardRuleQueryOutput) Conditions() ScorecardRuleQueryConditionArrayOutput {
	return o.ApplyT(func(v ScorecardRuleQuery) []ScorecardRuleQueryCondition { return v.Conditions }).(ScorecardRuleQueryConditionArrayOutput)
}

type ScorecardRuleQueryCondition struct {
	Operator string  `pulumi:"operator"`
	Property string  `pulumi:"property"`
	Value    *string `pulumi:"value"`
}

// ScorecardRuleQueryConditionInput is an input type that accepts ScorecardRuleQueryConditionArgs and ScorecardRuleQueryConditionOutput values.
// You can construct a concrete instance of `ScorecardRuleQueryConditionInput` via:
//
//	ScorecardRuleQueryConditionArgs{...}
type ScorecardRuleQueryConditionInput interface {
	pulumi.Input

	ToScorecardRuleQueryConditionOutput() ScorecardRuleQueryConditionOutput
	ToScorecardRuleQueryConditionOutputWithContext(context.Context) ScorecardRuleQueryConditionOutput
}

type ScorecardRuleQueryConditionArgs struct {
	Operator pulumi.StringInput    `pulumi:"operator"`
	Property pulumi.StringInput    `pulumi:"property"`
	Value    pulumi.StringPtrInput `pulumi:"value"`
}

func (ScorecardRuleQueryConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScorecardRuleQueryCondition)(nil)).Elem()
}

func (i ScorecardRuleQueryConditionArgs) ToScorecardRuleQueryConditionOutput() ScorecardRuleQueryConditionOutput {
	return i.ToScorecardRuleQueryConditionOutputWithContext(context.Background())
}

func (i ScorecardRuleQueryConditionArgs) ToScorecardRuleQueryConditionOutputWithContext(ctx context.Context) ScorecardRuleQueryConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScorecardRuleQueryConditionOutput)
}

func (i ScorecardRuleQueryConditionArgs) ToOutput(ctx context.Context) pulumix.Output[ScorecardRuleQueryCondition] {
	return pulumix.Output[ScorecardRuleQueryCondition]{
		OutputState: i.ToScorecardRuleQueryConditionOutputWithContext(ctx).OutputState,
	}
}

// ScorecardRuleQueryConditionArrayInput is an input type that accepts ScorecardRuleQueryConditionArray and ScorecardRuleQueryConditionArrayOutput values.
// You can construct a concrete instance of `ScorecardRuleQueryConditionArrayInput` via:
//
//	ScorecardRuleQueryConditionArray{ ScorecardRuleQueryConditionArgs{...} }
type ScorecardRuleQueryConditionArrayInput interface {
	pulumi.Input

	ToScorecardRuleQueryConditionArrayOutput() ScorecardRuleQueryConditionArrayOutput
	ToScorecardRuleQueryConditionArrayOutputWithContext(context.Context) ScorecardRuleQueryConditionArrayOutput
}

type ScorecardRuleQueryConditionArray []ScorecardRuleQueryConditionInput

func (ScorecardRuleQueryConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScorecardRuleQueryCondition)(nil)).Elem()
}

func (i ScorecardRuleQueryConditionArray) ToScorecardRuleQueryConditionArrayOutput() ScorecardRuleQueryConditionArrayOutput {
	return i.ToScorecardRuleQueryConditionArrayOutputWithContext(context.Background())
}

func (i ScorecardRuleQueryConditionArray) ToScorecardRuleQueryConditionArrayOutputWithContext(ctx context.Context) ScorecardRuleQueryConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScorecardRuleQueryConditionArrayOutput)
}

func (i ScorecardRuleQueryConditionArray) ToOutput(ctx context.Context) pulumix.Output[[]ScorecardRuleQueryCondition] {
	return pulumix.Output[[]ScorecardRuleQueryCondition]{
		OutputState: i.ToScorecardRuleQueryConditionArrayOutputWithContext(ctx).OutputState,
	}
}

type ScorecardRuleQueryConditionOutput struct{ *pulumi.OutputState }

func (ScorecardRuleQueryConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScorecardRuleQueryCondition)(nil)).Elem()
}

func (o ScorecardRuleQueryConditionOutput) ToScorecardRuleQueryConditionOutput() ScorecardRuleQueryConditionOutput {
	return o
}

func (o ScorecardRuleQueryConditionOutput) ToScorecardRuleQueryConditionOutputWithContext(ctx context.Context) ScorecardRuleQueryConditionOutput {
	return o
}

func (o ScorecardRuleQueryConditionOutput) ToOutput(ctx context.Context) pulumix.Output[ScorecardRuleQueryCondition] {
	return pulumix.Output[ScorecardRuleQueryCondition]{
		OutputState: o.OutputState,
	}
}

func (o ScorecardRuleQueryConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v ScorecardRuleQueryCondition) string { return v.Operator }).(pulumi.StringOutput)
}

func (o ScorecardRuleQueryConditionOutput) Property() pulumi.StringOutput {
	return o.ApplyT(func(v ScorecardRuleQueryCondition) string { return v.Property }).(pulumi.StringOutput)
}

func (o ScorecardRuleQueryConditionOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScorecardRuleQueryCondition) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ScorecardRuleQueryConditionArrayOutput struct{ *pulumi.OutputState }

func (ScorecardRuleQueryConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScorecardRuleQueryCondition)(nil)).Elem()
}

func (o ScorecardRuleQueryConditionArrayOutput) ToScorecardRuleQueryConditionArrayOutput() ScorecardRuleQueryConditionArrayOutput {
	return o
}

func (o ScorecardRuleQueryConditionArrayOutput) ToScorecardRuleQueryConditionArrayOutputWithContext(ctx context.Context) ScorecardRuleQueryConditionArrayOutput {
	return o
}

func (o ScorecardRuleQueryConditionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]ScorecardRuleQueryCondition] {
	return pulumix.Output[[]ScorecardRuleQueryCondition]{
		OutputState: o.OutputState,
	}
}

func (o ScorecardRuleQueryConditionArrayOutput) Index(i pulumi.IntInput) ScorecardRuleQueryConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScorecardRuleQueryCondition {
		return vs[0].([]ScorecardRuleQueryCondition)[vs[1].(int)]
	}).(ScorecardRuleQueryConditionOutput)
}

type WebhookMapping struct {
	Blueprint    string               `pulumi:"blueprint"`
	Entity       WebhookMappingEntity `pulumi:"entity"`
	Filter       *string              `pulumi:"filter"`
	ItemsToParse *string              `pulumi:"itemsToParse"`
}

// WebhookMappingInput is an input type that accepts WebhookMappingArgs and WebhookMappingOutput values.
// You can construct a concrete instance of `WebhookMappingInput` via:
//
//	WebhookMappingArgs{...}
type WebhookMappingInput interface {
	pulumi.Input

	ToWebhookMappingOutput() WebhookMappingOutput
	ToWebhookMappingOutputWithContext(context.Context) WebhookMappingOutput
}

type WebhookMappingArgs struct {
	Blueprint    pulumi.StringInput        `pulumi:"blueprint"`
	Entity       WebhookMappingEntityInput `pulumi:"entity"`
	Filter       pulumi.StringPtrInput     `pulumi:"filter"`
	ItemsToParse pulumi.StringPtrInput     `pulumi:"itemsToParse"`
}

func (WebhookMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookMapping)(nil)).Elem()
}

func (i WebhookMappingArgs) ToWebhookMappingOutput() WebhookMappingOutput {
	return i.ToWebhookMappingOutputWithContext(context.Background())
}

func (i WebhookMappingArgs) ToWebhookMappingOutputWithContext(ctx context.Context) WebhookMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookMappingOutput)
}

func (i WebhookMappingArgs) ToOutput(ctx context.Context) pulumix.Output[WebhookMapping] {
	return pulumix.Output[WebhookMapping]{
		OutputState: i.ToWebhookMappingOutputWithContext(ctx).OutputState,
	}
}

// WebhookMappingArrayInput is an input type that accepts WebhookMappingArray and WebhookMappingArrayOutput values.
// You can construct a concrete instance of `WebhookMappingArrayInput` via:
//
//	WebhookMappingArray{ WebhookMappingArgs{...} }
type WebhookMappingArrayInput interface {
	pulumi.Input

	ToWebhookMappingArrayOutput() WebhookMappingArrayOutput
	ToWebhookMappingArrayOutputWithContext(context.Context) WebhookMappingArrayOutput
}

type WebhookMappingArray []WebhookMappingInput

func (WebhookMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookMapping)(nil)).Elem()
}

func (i WebhookMappingArray) ToWebhookMappingArrayOutput() WebhookMappingArrayOutput {
	return i.ToWebhookMappingArrayOutputWithContext(context.Background())
}

func (i WebhookMappingArray) ToWebhookMappingArrayOutputWithContext(ctx context.Context) WebhookMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookMappingArrayOutput)
}

func (i WebhookMappingArray) ToOutput(ctx context.Context) pulumix.Output[[]WebhookMapping] {
	return pulumix.Output[[]WebhookMapping]{
		OutputState: i.ToWebhookMappingArrayOutputWithContext(ctx).OutputState,
	}
}

type WebhookMappingOutput struct{ *pulumi.OutputState }

func (WebhookMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookMapping)(nil)).Elem()
}

func (o WebhookMappingOutput) ToWebhookMappingOutput() WebhookMappingOutput {
	return o
}

func (o WebhookMappingOutput) ToWebhookMappingOutputWithContext(ctx context.Context) WebhookMappingOutput {
	return o
}

func (o WebhookMappingOutput) ToOutput(ctx context.Context) pulumix.Output[WebhookMapping] {
	return pulumix.Output[WebhookMapping]{
		OutputState: o.OutputState,
	}
}

func (o WebhookMappingOutput) Blueprint() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookMapping) string { return v.Blueprint }).(pulumi.StringOutput)
}

func (o WebhookMappingOutput) Entity() WebhookMappingEntityOutput {
	return o.ApplyT(func(v WebhookMapping) WebhookMappingEntity { return v.Entity }).(WebhookMappingEntityOutput)
}

func (o WebhookMappingOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookMapping) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o WebhookMappingOutput) ItemsToParse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookMapping) *string { return v.ItemsToParse }).(pulumi.StringPtrOutput)
}

type WebhookMappingArrayOutput struct{ *pulumi.OutputState }

func (WebhookMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookMapping)(nil)).Elem()
}

func (o WebhookMappingArrayOutput) ToWebhookMappingArrayOutput() WebhookMappingArrayOutput {
	return o
}

func (o WebhookMappingArrayOutput) ToWebhookMappingArrayOutputWithContext(ctx context.Context) WebhookMappingArrayOutput {
	return o
}

func (o WebhookMappingArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]WebhookMapping] {
	return pulumix.Output[[]WebhookMapping]{
		OutputState: o.OutputState,
	}
}

func (o WebhookMappingArrayOutput) Index(i pulumi.IntInput) WebhookMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookMapping {
		return vs[0].([]WebhookMapping)[vs[1].(int)]
	}).(WebhookMappingOutput)
}

type WebhookMappingEntity struct {
	Icon       *string           `pulumi:"icon"`
	Identifier string            `pulumi:"identifier"`
	Properties map[string]string `pulumi:"properties"`
	Relations  map[string]string `pulumi:"relations"`
	Team       *string           `pulumi:"team"`
	Title      *string           `pulumi:"title"`
}

// WebhookMappingEntityInput is an input type that accepts WebhookMappingEntityArgs and WebhookMappingEntityOutput values.
// You can construct a concrete instance of `WebhookMappingEntityInput` via:
//
//	WebhookMappingEntityArgs{...}
type WebhookMappingEntityInput interface {
	pulumi.Input

	ToWebhookMappingEntityOutput() WebhookMappingEntityOutput
	ToWebhookMappingEntityOutputWithContext(context.Context) WebhookMappingEntityOutput
}

type WebhookMappingEntityArgs struct {
	Icon       pulumi.StringPtrInput `pulumi:"icon"`
	Identifier pulumi.StringInput    `pulumi:"identifier"`
	Properties pulumi.StringMapInput `pulumi:"properties"`
	Relations  pulumi.StringMapInput `pulumi:"relations"`
	Team       pulumi.StringPtrInput `pulumi:"team"`
	Title      pulumi.StringPtrInput `pulumi:"title"`
}

func (WebhookMappingEntityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookMappingEntity)(nil)).Elem()
}

func (i WebhookMappingEntityArgs) ToWebhookMappingEntityOutput() WebhookMappingEntityOutput {
	return i.ToWebhookMappingEntityOutputWithContext(context.Background())
}

func (i WebhookMappingEntityArgs) ToWebhookMappingEntityOutputWithContext(ctx context.Context) WebhookMappingEntityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookMappingEntityOutput)
}

func (i WebhookMappingEntityArgs) ToOutput(ctx context.Context) pulumix.Output[WebhookMappingEntity] {
	return pulumix.Output[WebhookMappingEntity]{
		OutputState: i.ToWebhookMappingEntityOutputWithContext(ctx).OutputState,
	}
}

type WebhookMappingEntityOutput struct{ *pulumi.OutputState }

func (WebhookMappingEntityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookMappingEntity)(nil)).Elem()
}

func (o WebhookMappingEntityOutput) ToWebhookMappingEntityOutput() WebhookMappingEntityOutput {
	return o
}

func (o WebhookMappingEntityOutput) ToWebhookMappingEntityOutputWithContext(ctx context.Context) WebhookMappingEntityOutput {
	return o
}

func (o WebhookMappingEntityOutput) ToOutput(ctx context.Context) pulumix.Output[WebhookMappingEntity] {
	return pulumix.Output[WebhookMappingEntity]{
		OutputState: o.OutputState,
	}
}

func (o WebhookMappingEntityOutput) Icon() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookMappingEntity) *string { return v.Icon }).(pulumi.StringPtrOutput)
}

func (o WebhookMappingEntityOutput) Identifier() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookMappingEntity) string { return v.Identifier }).(pulumi.StringOutput)
}

func (o WebhookMappingEntityOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v WebhookMappingEntity) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

func (o WebhookMappingEntityOutput) Relations() pulumi.StringMapOutput {
	return o.ApplyT(func(v WebhookMappingEntity) map[string]string { return v.Relations }).(pulumi.StringMapOutput)
}

func (o WebhookMappingEntityOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookMappingEntity) *string { return v.Team }).(pulumi.StringPtrOutput)
}

func (o WebhookMappingEntityOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookMappingEntity) *string { return v.Title }).(pulumi.StringPtrOutput)
}

type WebhookSecurity struct {
	RequestIdentifierPath *string `pulumi:"requestIdentifierPath"`
	Secret                *string `pulumi:"secret"`
	SignatureAlgorithm    *string `pulumi:"signatureAlgorithm"`
	SignatureHeaderName   *string `pulumi:"signatureHeaderName"`
	SignaturePrefix       *string `pulumi:"signaturePrefix"`
}

// WebhookSecurityInput is an input type that accepts WebhookSecurityArgs and WebhookSecurityOutput values.
// You can construct a concrete instance of `WebhookSecurityInput` via:
//
//	WebhookSecurityArgs{...}
type WebhookSecurityInput interface {
	pulumi.Input

	ToWebhookSecurityOutput() WebhookSecurityOutput
	ToWebhookSecurityOutputWithContext(context.Context) WebhookSecurityOutput
}

type WebhookSecurityArgs struct {
	RequestIdentifierPath pulumi.StringPtrInput `pulumi:"requestIdentifierPath"`
	Secret                pulumi.StringPtrInput `pulumi:"secret"`
	SignatureAlgorithm    pulumi.StringPtrInput `pulumi:"signatureAlgorithm"`
	SignatureHeaderName   pulumi.StringPtrInput `pulumi:"signatureHeaderName"`
	SignaturePrefix       pulumi.StringPtrInput `pulumi:"signaturePrefix"`
}

func (WebhookSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookSecurity)(nil)).Elem()
}

func (i WebhookSecurityArgs) ToWebhookSecurityOutput() WebhookSecurityOutput {
	return i.ToWebhookSecurityOutputWithContext(context.Background())
}

func (i WebhookSecurityArgs) ToWebhookSecurityOutputWithContext(ctx context.Context) WebhookSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookSecurityOutput)
}

func (i WebhookSecurityArgs) ToOutput(ctx context.Context) pulumix.Output[WebhookSecurity] {
	return pulumix.Output[WebhookSecurity]{
		OutputState: i.ToWebhookSecurityOutputWithContext(ctx).OutputState,
	}
}

func (i WebhookSecurityArgs) ToWebhookSecurityPtrOutput() WebhookSecurityPtrOutput {
	return i.ToWebhookSecurityPtrOutputWithContext(context.Background())
}

func (i WebhookSecurityArgs) ToWebhookSecurityPtrOutputWithContext(ctx context.Context) WebhookSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookSecurityOutput).ToWebhookSecurityPtrOutputWithContext(ctx)
}

// WebhookSecurityPtrInput is an input type that accepts WebhookSecurityArgs, WebhookSecurityPtr and WebhookSecurityPtrOutput values.
// You can construct a concrete instance of `WebhookSecurityPtrInput` via:
//
//	        WebhookSecurityArgs{...}
//
//	or:
//
//	        nil
type WebhookSecurityPtrInput interface {
	pulumi.Input

	ToWebhookSecurityPtrOutput() WebhookSecurityPtrOutput
	ToWebhookSecurityPtrOutputWithContext(context.Context) WebhookSecurityPtrOutput
}

type webhookSecurityPtrType WebhookSecurityArgs

func WebhookSecurityPtr(v *WebhookSecurityArgs) WebhookSecurityPtrInput {
	return (*webhookSecurityPtrType)(v)
}

func (*webhookSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookSecurity)(nil)).Elem()
}

func (i *webhookSecurityPtrType) ToWebhookSecurityPtrOutput() WebhookSecurityPtrOutput {
	return i.ToWebhookSecurityPtrOutputWithContext(context.Background())
}

func (i *webhookSecurityPtrType) ToWebhookSecurityPtrOutputWithContext(ctx context.Context) WebhookSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookSecurityPtrOutput)
}

func (i *webhookSecurityPtrType) ToOutput(ctx context.Context) pulumix.Output[*WebhookSecurity] {
	return pulumix.Output[*WebhookSecurity]{
		OutputState: i.ToWebhookSecurityPtrOutputWithContext(ctx).OutputState,
	}
}

type WebhookSecurityOutput struct{ *pulumi.OutputState }

func (WebhookSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookSecurity)(nil)).Elem()
}

func (o WebhookSecurityOutput) ToWebhookSecurityOutput() WebhookSecurityOutput {
	return o
}

func (o WebhookSecurityOutput) ToWebhookSecurityOutputWithContext(ctx context.Context) WebhookSecurityOutput {
	return o
}

func (o WebhookSecurityOutput) ToWebhookSecurityPtrOutput() WebhookSecurityPtrOutput {
	return o.ToWebhookSecurityPtrOutputWithContext(context.Background())
}

func (o WebhookSecurityOutput) ToWebhookSecurityPtrOutputWithContext(ctx context.Context) WebhookSecurityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookSecurity) *WebhookSecurity {
		return &v
	}).(WebhookSecurityPtrOutput)
}

func (o WebhookSecurityOutput) ToOutput(ctx context.Context) pulumix.Output[WebhookSecurity] {
	return pulumix.Output[WebhookSecurity]{
		OutputState: o.OutputState,
	}
}

func (o WebhookSecurityOutput) RequestIdentifierPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookSecurity) *string { return v.RequestIdentifierPath }).(pulumi.StringPtrOutput)
}

func (o WebhookSecurityOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookSecurity) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

func (o WebhookSecurityOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookSecurity) *string { return v.SignatureAlgorithm }).(pulumi.StringPtrOutput)
}

func (o WebhookSecurityOutput) SignatureHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookSecurity) *string { return v.SignatureHeaderName }).(pulumi.StringPtrOutput)
}

func (o WebhookSecurityOutput) SignaturePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookSecurity) *string { return v.SignaturePrefix }).(pulumi.StringPtrOutput)
}

type WebhookSecurityPtrOutput struct{ *pulumi.OutputState }

func (WebhookSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookSecurity)(nil)).Elem()
}

func (o WebhookSecurityPtrOutput) ToWebhookSecurityPtrOutput() WebhookSecurityPtrOutput {
	return o
}

func (o WebhookSecurityPtrOutput) ToWebhookSecurityPtrOutputWithContext(ctx context.Context) WebhookSecurityPtrOutput {
	return o
}

func (o WebhookSecurityPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WebhookSecurity] {
	return pulumix.Output[*WebhookSecurity]{
		OutputState: o.OutputState,
	}
}

func (o WebhookSecurityPtrOutput) Elem() WebhookSecurityOutput {
	return o.ApplyT(func(v *WebhookSecurity) WebhookSecurity {
		if v != nil {
			return *v
		}
		var ret WebhookSecurity
		return ret
	}).(WebhookSecurityOutput)
}

func (o WebhookSecurityPtrOutput) RequestIdentifierPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookSecurity) *string {
		if v == nil {
			return nil
		}
		return v.RequestIdentifierPath
	}).(pulumi.StringPtrOutput)
}

func (o WebhookSecurityPtrOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookSecurity) *string {
		if v == nil {
			return nil
		}
		return v.Secret
	}).(pulumi.StringPtrOutput)
}

func (o WebhookSecurityPtrOutput) SignatureAlgorithm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookSecurity) *string {
		if v == nil {
			return nil
		}
		return v.SignatureAlgorithm
	}).(pulumi.StringPtrOutput)
}

func (o WebhookSecurityPtrOutput) SignatureHeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookSecurity) *string {
		if v == nil {
			return nil
		}
		return v.SignatureHeaderName
	}).(pulumi.StringPtrOutput)
}

func (o WebhookSecurityPtrOutput) SignaturePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookSecurity) *string {
		if v == nil {
			return nil
		}
		return v.SignaturePrefix
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ActionApprovalEmailNotificationInput)(nil)).Elem(), ActionApprovalEmailNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionApprovalEmailNotificationPtrInput)(nil)).Elem(), ActionApprovalEmailNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionApprovalWebhookNotificationInput)(nil)).Elem(), ActionApprovalWebhookNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionApprovalWebhookNotificationPtrInput)(nil)).Elem(), ActionApprovalWebhookNotificationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionAzureMethodInput)(nil)).Elem(), ActionAzureMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionAzureMethodPtrInput)(nil)).Elem(), ActionAzureMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionGithubMethodInput)(nil)).Elem(), ActionGithubMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionGithubMethodPtrInput)(nil)).Elem(), ActionGithubMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionGitlabMethodInput)(nil)).Elem(), ActionGitlabMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionGitlabMethodPtrInput)(nil)).Elem(), ActionGitlabMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionKafkaMethodInput)(nil)).Elem(), ActionKafkaMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionKafkaMethodPtrInput)(nil)).Elem(), ActionKafkaMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesInput)(nil)).Elem(), ActionUserPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesPtrInput)(nil)).Elem(), ActionUserPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsInput)(nil)).Elem(), ActionUserPropertiesArrayPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsMapInput)(nil)).Elem(), ActionUserPropertiesArrayPropsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsBooleanItemsInput)(nil)).Elem(), ActionUserPropertiesArrayPropsBooleanItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsBooleanItemsPtrInput)(nil)).Elem(), ActionUserPropertiesArrayPropsBooleanItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsDatasetInput)(nil)).Elem(), ActionUserPropertiesArrayPropsDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsDatasetPtrInput)(nil)).Elem(), ActionUserPropertiesArrayPropsDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsDatasetRuleInput)(nil)).Elem(), ActionUserPropertiesArrayPropsDatasetRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsDatasetRuleArrayInput)(nil)).Elem(), ActionUserPropertiesArrayPropsDatasetRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsDatasetRuleValueInput)(nil)).Elem(), ActionUserPropertiesArrayPropsDatasetRuleValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsNumberItemsInput)(nil)).Elem(), ActionUserPropertiesArrayPropsNumberItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsNumberItemsPtrInput)(nil)).Elem(), ActionUserPropertiesArrayPropsNumberItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsObjectItemsInput)(nil)).Elem(), ActionUserPropertiesArrayPropsObjectItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsObjectItemsPtrInput)(nil)).Elem(), ActionUserPropertiesArrayPropsObjectItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsStringItemsInput)(nil)).Elem(), ActionUserPropertiesArrayPropsStringItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesArrayPropsStringItemsPtrInput)(nil)).Elem(), ActionUserPropertiesArrayPropsStringItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesBooleanPropsInput)(nil)).Elem(), ActionUserPropertiesBooleanPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesBooleanPropsMapInput)(nil)).Elem(), ActionUserPropertiesBooleanPropsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesBooleanPropsDatasetInput)(nil)).Elem(), ActionUserPropertiesBooleanPropsDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesBooleanPropsDatasetPtrInput)(nil)).Elem(), ActionUserPropertiesBooleanPropsDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesBooleanPropsDatasetRuleInput)(nil)).Elem(), ActionUserPropertiesBooleanPropsDatasetRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesBooleanPropsDatasetRuleArrayInput)(nil)).Elem(), ActionUserPropertiesBooleanPropsDatasetRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesBooleanPropsDatasetRuleValueInput)(nil)).Elem(), ActionUserPropertiesBooleanPropsDatasetRuleValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesNumberPropsInput)(nil)).Elem(), ActionUserPropertiesNumberPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesNumberPropsMapInput)(nil)).Elem(), ActionUserPropertiesNumberPropsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesNumberPropsDatasetInput)(nil)).Elem(), ActionUserPropertiesNumberPropsDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesNumberPropsDatasetPtrInput)(nil)).Elem(), ActionUserPropertiesNumberPropsDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesNumberPropsDatasetRuleInput)(nil)).Elem(), ActionUserPropertiesNumberPropsDatasetRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesNumberPropsDatasetRuleArrayInput)(nil)).Elem(), ActionUserPropertiesNumberPropsDatasetRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesNumberPropsDatasetRuleValueInput)(nil)).Elem(), ActionUserPropertiesNumberPropsDatasetRuleValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesObjectPropsInput)(nil)).Elem(), ActionUserPropertiesObjectPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesObjectPropsMapInput)(nil)).Elem(), ActionUserPropertiesObjectPropsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesObjectPropsDatasetInput)(nil)).Elem(), ActionUserPropertiesObjectPropsDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesObjectPropsDatasetPtrInput)(nil)).Elem(), ActionUserPropertiesObjectPropsDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesObjectPropsDatasetRuleInput)(nil)).Elem(), ActionUserPropertiesObjectPropsDatasetRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesObjectPropsDatasetRuleArrayInput)(nil)).Elem(), ActionUserPropertiesObjectPropsDatasetRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesObjectPropsDatasetRuleValueInput)(nil)).Elem(), ActionUserPropertiesObjectPropsDatasetRuleValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesStringPropsInput)(nil)).Elem(), ActionUserPropertiesStringPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesStringPropsMapInput)(nil)).Elem(), ActionUserPropertiesStringPropsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesStringPropsDatasetInput)(nil)).Elem(), ActionUserPropertiesStringPropsDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesStringPropsDatasetPtrInput)(nil)).Elem(), ActionUserPropertiesStringPropsDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesStringPropsDatasetRuleInput)(nil)).Elem(), ActionUserPropertiesStringPropsDatasetRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesStringPropsDatasetRuleArrayInput)(nil)).Elem(), ActionUserPropertiesStringPropsDatasetRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionUserPropertiesStringPropsDatasetRuleValueInput)(nil)).Elem(), ActionUserPropertiesStringPropsDatasetRuleValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionWebhookMethodInput)(nil)).Elem(), ActionWebhookMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ActionWebhookMethodPtrInput)(nil)).Elem(), ActionWebhookMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintCalculationPropertiesInput)(nil)).Elem(), BlueprintCalculationPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintCalculationPropertiesMapInput)(nil)).Elem(), BlueprintCalculationPropertiesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintKafkaChangelogDestinationInput)(nil)).Elem(), BlueprintKafkaChangelogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintKafkaChangelogDestinationPtrInput)(nil)).Elem(), BlueprintKafkaChangelogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintMirrorPropertiesInput)(nil)).Elem(), BlueprintMirrorPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintMirrorPropertiesMapInput)(nil)).Elem(), BlueprintMirrorPropertiesMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesInput)(nil)).Elem(), BlueprintPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesPtrInput)(nil)).Elem(), BlueprintPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesArrayPropsInput)(nil)).Elem(), BlueprintPropertiesArrayPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesArrayPropsMapInput)(nil)).Elem(), BlueprintPropertiesArrayPropsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesArrayPropsBooleanItemsInput)(nil)).Elem(), BlueprintPropertiesArrayPropsBooleanItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesArrayPropsBooleanItemsPtrInput)(nil)).Elem(), BlueprintPropertiesArrayPropsBooleanItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesArrayPropsNumberItemsInput)(nil)).Elem(), BlueprintPropertiesArrayPropsNumberItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesArrayPropsNumberItemsPtrInput)(nil)).Elem(), BlueprintPropertiesArrayPropsNumberItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesArrayPropsObjectItemsInput)(nil)).Elem(), BlueprintPropertiesArrayPropsObjectItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesArrayPropsObjectItemsPtrInput)(nil)).Elem(), BlueprintPropertiesArrayPropsObjectItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesArrayPropsStringItemsInput)(nil)).Elem(), BlueprintPropertiesArrayPropsStringItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesArrayPropsStringItemsPtrInput)(nil)).Elem(), BlueprintPropertiesArrayPropsStringItemsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesBooleanPropsInput)(nil)).Elem(), BlueprintPropertiesBooleanPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesBooleanPropsMapInput)(nil)).Elem(), BlueprintPropertiesBooleanPropsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesNumberPropsInput)(nil)).Elem(), BlueprintPropertiesNumberPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesNumberPropsMapInput)(nil)).Elem(), BlueprintPropertiesNumberPropsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesObjectPropsInput)(nil)).Elem(), BlueprintPropertiesObjectPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesObjectPropsMapInput)(nil)).Elem(), BlueprintPropertiesObjectPropsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesStringPropsInput)(nil)).Elem(), BlueprintPropertiesStringPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesStringPropsMapInput)(nil)).Elem(), BlueprintPropertiesStringPropsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesStringPropsSpecAuthenticationInput)(nil)).Elem(), BlueprintPropertiesStringPropsSpecAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintPropertiesStringPropsSpecAuthenticationPtrInput)(nil)).Elem(), BlueprintPropertiesStringPropsSpecAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintRelationsInput)(nil)).Elem(), BlueprintRelationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintRelationsMapInput)(nil)).Elem(), BlueprintRelationsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintTeamInheritanceInput)(nil)).Elem(), BlueprintTeamInheritanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintTeamInheritancePtrInput)(nil)).Elem(), BlueprintTeamInheritanceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintWebhookChangelogDestinationInput)(nil)).Elem(), BlueprintWebhookChangelogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BlueprintWebhookChangelogDestinationPtrInput)(nil)).Elem(), BlueprintWebhookChangelogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityPropertiesInput)(nil)).Elem(), EntityPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityPropertiesPtrInput)(nil)).Elem(), EntityPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityPropertiesArrayPropsInput)(nil)).Elem(), EntityPropertiesArrayPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityPropertiesArrayPropsPtrInput)(nil)).Elem(), EntityPropertiesArrayPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRelationsInput)(nil)).Elem(), EntityRelationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityRelationsPtrInput)(nil)).Elem(), EntityRelationsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScorecardRuleInput)(nil)).Elem(), ScorecardRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScorecardRuleArrayInput)(nil)).Elem(), ScorecardRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScorecardRuleQueryInput)(nil)).Elem(), ScorecardRuleQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScorecardRuleQueryConditionInput)(nil)).Elem(), ScorecardRuleQueryConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScorecardRuleQueryConditionArrayInput)(nil)).Elem(), ScorecardRuleQueryConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookMappingInput)(nil)).Elem(), WebhookMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookMappingArrayInput)(nil)).Elem(), WebhookMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookMappingEntityInput)(nil)).Elem(), WebhookMappingEntityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookSecurityInput)(nil)).Elem(), WebhookSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookSecurityPtrInput)(nil)).Elem(), WebhookSecurityArgs{})
	pulumi.RegisterOutputType(ActionApprovalEmailNotificationOutput{})
	pulumi.RegisterOutputType(ActionApprovalEmailNotificationPtrOutput{})
	pulumi.RegisterOutputType(ActionApprovalWebhookNotificationOutput{})
	pulumi.RegisterOutputType(ActionApprovalWebhookNotificationPtrOutput{})
	pulumi.RegisterOutputType(ActionAzureMethodOutput{})
	pulumi.RegisterOutputType(ActionAzureMethodPtrOutput{})
	pulumi.RegisterOutputType(ActionGithubMethodOutput{})
	pulumi.RegisterOutputType(ActionGithubMethodPtrOutput{})
	pulumi.RegisterOutputType(ActionGitlabMethodOutput{})
	pulumi.RegisterOutputType(ActionGitlabMethodPtrOutput{})
	pulumi.RegisterOutputType(ActionKafkaMethodOutput{})
	pulumi.RegisterOutputType(ActionKafkaMethodPtrOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsMapOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsBooleanItemsOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsBooleanItemsPtrOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsDatasetOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsDatasetPtrOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsDatasetRuleOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsDatasetRuleArrayOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsDatasetRuleValueOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsNumberItemsOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsNumberItemsPtrOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsObjectItemsOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsObjectItemsPtrOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsStringItemsOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesArrayPropsStringItemsPtrOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesBooleanPropsOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesBooleanPropsMapOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesBooleanPropsDatasetOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesBooleanPropsDatasetPtrOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesBooleanPropsDatasetRuleOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesBooleanPropsDatasetRuleArrayOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesBooleanPropsDatasetRuleValueOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesNumberPropsOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesNumberPropsMapOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesNumberPropsDatasetOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesNumberPropsDatasetPtrOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesNumberPropsDatasetRuleOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesNumberPropsDatasetRuleArrayOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesNumberPropsDatasetRuleValueOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesObjectPropsOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesObjectPropsMapOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesObjectPropsDatasetOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesObjectPropsDatasetPtrOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesObjectPropsDatasetRuleOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesObjectPropsDatasetRuleArrayOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesObjectPropsDatasetRuleValueOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesStringPropsOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesStringPropsMapOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesStringPropsDatasetOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesStringPropsDatasetPtrOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesStringPropsDatasetRuleOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesStringPropsDatasetRuleArrayOutput{})
	pulumi.RegisterOutputType(ActionUserPropertiesStringPropsDatasetRuleValueOutput{})
	pulumi.RegisterOutputType(ActionWebhookMethodOutput{})
	pulumi.RegisterOutputType(ActionWebhookMethodPtrOutput{})
	pulumi.RegisterOutputType(BlueprintCalculationPropertiesOutput{})
	pulumi.RegisterOutputType(BlueprintCalculationPropertiesMapOutput{})
	pulumi.RegisterOutputType(BlueprintKafkaChangelogDestinationOutput{})
	pulumi.RegisterOutputType(BlueprintKafkaChangelogDestinationPtrOutput{})
	pulumi.RegisterOutputType(BlueprintMirrorPropertiesOutput{})
	pulumi.RegisterOutputType(BlueprintMirrorPropertiesMapOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesPtrOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesArrayPropsOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesArrayPropsMapOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesArrayPropsBooleanItemsOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesArrayPropsBooleanItemsPtrOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesArrayPropsNumberItemsOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesArrayPropsNumberItemsPtrOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesArrayPropsObjectItemsOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesArrayPropsObjectItemsPtrOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesArrayPropsStringItemsOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesArrayPropsStringItemsPtrOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesBooleanPropsOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesBooleanPropsMapOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesNumberPropsOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesNumberPropsMapOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesObjectPropsOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesObjectPropsMapOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesStringPropsOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesStringPropsMapOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesStringPropsSpecAuthenticationOutput{})
	pulumi.RegisterOutputType(BlueprintPropertiesStringPropsSpecAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(BlueprintRelationsOutput{})
	pulumi.RegisterOutputType(BlueprintRelationsMapOutput{})
	pulumi.RegisterOutputType(BlueprintTeamInheritanceOutput{})
	pulumi.RegisterOutputType(BlueprintTeamInheritancePtrOutput{})
	pulumi.RegisterOutputType(BlueprintWebhookChangelogDestinationOutput{})
	pulumi.RegisterOutputType(BlueprintWebhookChangelogDestinationPtrOutput{})
	pulumi.RegisterOutputType(EntityPropertiesOutput{})
	pulumi.RegisterOutputType(EntityPropertiesPtrOutput{})
	pulumi.RegisterOutputType(EntityPropertiesArrayPropsOutput{})
	pulumi.RegisterOutputType(EntityPropertiesArrayPropsPtrOutput{})
	pulumi.RegisterOutputType(EntityRelationsOutput{})
	pulumi.RegisterOutputType(EntityRelationsPtrOutput{})
	pulumi.RegisterOutputType(ScorecardRuleOutput{})
	pulumi.RegisterOutputType(ScorecardRuleArrayOutput{})
	pulumi.RegisterOutputType(ScorecardRuleQueryOutput{})
	pulumi.RegisterOutputType(ScorecardRuleQueryConditionOutput{})
	pulumi.RegisterOutputType(ScorecardRuleQueryConditionArrayOutput{})
	pulumi.RegisterOutputType(WebhookMappingOutput{})
	pulumi.RegisterOutputType(WebhookMappingArrayOutput{})
	pulumi.RegisterOutputType(WebhookMappingEntityOutput{})
	pulumi.RegisterOutputType(WebhookSecurityOutput{})
	pulumi.RegisterOutputType(WebhookSecurityPtrOutput{})
}
