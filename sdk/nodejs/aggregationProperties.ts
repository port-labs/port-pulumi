// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export class AggregationProperties extends pulumi.CustomResource {
    /**
     * Get an existing AggregationProperties resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AggregationPropertiesState, opts?: pulumi.CustomResourceOptions): AggregationProperties {
        return new AggregationProperties(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'port:index/aggregationProperties:AggregationProperties';

    /**
     * Returns true if the given object is an instance of AggregationProperties.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AggregationProperties {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AggregationProperties.__pulumiType;
    }

    /**
     * The identifier of the blueprint the aggregation property will be added to
     */
    public readonly blueprintIdentifier!: pulumi.Output<string>;
    /**
     * The aggregation property of the blueprint
     */
    public readonly properties!: pulumi.Output<{[key: string]: outputs.AggregationPropertiesProperties}>;

    /**
     * Create a AggregationProperties resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AggregationPropertiesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AggregationPropertiesArgs | AggregationPropertiesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AggregationPropertiesState | undefined;
            resourceInputs["blueprintIdentifier"] = state ? state.blueprintIdentifier : undefined;
            resourceInputs["properties"] = state ? state.properties : undefined;
        } else {
            const args = argsOrState as AggregationPropertiesArgs | undefined;
            if ((!args || args.blueprintIdentifier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'blueprintIdentifier'");
            }
            if ((!args || args.properties === undefined) && !opts.urn) {
                throw new Error("Missing required property 'properties'");
            }
            resourceInputs["blueprintIdentifier"] = args ? args.blueprintIdentifier : undefined;
            resourceInputs["properties"] = args ? args.properties : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AggregationProperties.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AggregationProperties resources.
 */
export interface AggregationPropertiesState {
    /**
     * The identifier of the blueprint the aggregation property will be added to
     */
    blueprintIdentifier?: pulumi.Input<string>;
    /**
     * The aggregation property of the blueprint
     */
    properties?: pulumi.Input<{[key: string]: pulumi.Input<inputs.AggregationPropertiesProperties>}>;
}

/**
 * The set of arguments for constructing a AggregationProperties resource.
 */
export interface AggregationPropertiesArgs {
    /**
     * The identifier of the blueprint the aggregation property will be added to
     */
    blueprintIdentifier: pulumi.Input<string>;
    /**
     * The aggregation property of the blueprint
     */
    properties: pulumi.Input<{[key: string]: pulumi.Input<inputs.AggregationPropertiesProperties>}>;
}
